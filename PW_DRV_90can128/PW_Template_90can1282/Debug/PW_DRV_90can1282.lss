
PW_DRV_90can1282.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000446  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000095  00800100  00800100  000004ba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  0000052c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000276a  00000000  00000000  0000064c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f7e  00000000  00000000  00002db6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ebc  00000000  00000000  00003d34  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000338  00000000  00000000  00004bf0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000faf  00000000  00000000  00004f28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ac9  00000000  00000000  00005ed7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  000069a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
   2:	00 00       	nop
   4:	64 c0       	rjmp	.+200    	; 0xce <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__vector_2>
   a:	00 00       	nop
   c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
   e:	00 00       	nop
  10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
  12:	00 00       	nop
  14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
  16:	00 00       	nop
  18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
  1a:	00 00       	nop
  1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
  1e:	00 00       	nop
  20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
  22:	00 00       	nop
  24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
  26:	00 00       	nop
  28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
  2a:	00 00       	nop
  2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
  2e:	00 00       	nop
  30:	4e c0       	rjmp	.+156    	; 0xce <__bad_interrupt>
  32:	00 00       	nop
  34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
  36:	00 00       	nop
  38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
  3a:	00 00       	nop
  3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
  3e:	00 00       	nop
  40:	46 c0       	rjmp	.+140    	; 0xce <__bad_interrupt>
  42:	00 00       	nop
  44:	44 c0       	rjmp	.+136    	; 0xce <__bad_interrupt>
  46:	00 00       	nop
  48:	42 c0       	rjmp	.+132    	; 0xce <__bad_interrupt>
  4a:	00 00       	nop
  4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
  4e:	00 00       	nop
  50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
  52:	00 00       	nop
  54:	3c c0       	rjmp	.+120    	; 0xce <__bad_interrupt>
  56:	00 00       	nop
  58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
  5a:	00 00       	nop
  5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
  5e:	00 00       	nop
  60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
  62:	00 00       	nop
  64:	34 c0       	rjmp	.+104    	; 0xce <__bad_interrupt>
  66:	00 00       	nop
  68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
  6a:	00 00       	nop
  6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
  6e:	00 00       	nop
  70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
  72:	00 00       	nop
  74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
  76:	00 00       	nop
  78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
  7a:	00 00       	nop
  7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
  7e:	00 00       	nop
  80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
  82:	00 00       	nop
  84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
  86:	00 00       	nop
  88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
  8a:	00 00       	nop
  8c:	20 c0       	rjmp	.+64     	; 0xce <__bad_interrupt>
  8e:	00 00       	nop
  90:	1e c0       	rjmp	.+60     	; 0xce <__bad_interrupt>
	...

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	11 e0       	ldi	r17, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	e6 e4       	ldi	r30, 0x46	; 70
  a8:	f4 e0       	ldi	r31, 0x04	; 4
  aa:	00 e0       	ldi	r16, 0x00	; 0
  ac:	0b bf       	out	0x3b, r16	; 59
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
  b0:	07 90       	elpm	r0, Z+
  b2:	0d 92       	st	X+, r0
  b4:	a0 30       	cpi	r26, 0x00	; 0
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	a0 e0       	ldi	r26, 0x00	; 0
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	a5 39       	cpi	r26, 0x95	; 149
  c6:	b2 07       	cpc	r27, r18
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	17 d0       	rcall	.+46     	; 0xfa <main>
  cc:	ba c1       	rjmp	.+884    	; 0x442 <_exit>

000000ce <__bad_interrupt>:
  ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <benchmarkBlock>:
	for(int update_counter=0; update_counter<10; update_counter++){
		blockInputUpdate(update_counter);
		benchmarkBlock();
	}
	
}
  d0:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <i>
  d4:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <i+0x1>
  d8:	ee 0f       	add	r30, r30
  da:	ff 1f       	adc	r31, r31
  dc:	ec 5f       	subi	r30, 0xFC	; 252
  de:	fe 4f       	sbci	r31, 0xFE	; 254
  e0:	80 81       	ld	r24, Z
  e2:	91 81       	ldd	r25, Z+1	; 0x01
  e4:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_end>
  e8:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_end+0x1>
  ec:	ee 0f       	add	r30, r30
  ee:	ff 1f       	adc	r31, r31
  f0:	ec 5f       	subi	r30, 0xFC	; 252
  f2:	fe 4f       	sbci	r31, 0xFE	; 254
  f4:	91 83       	std	Z+1, r25	; 0x01
  f6:	80 83       	st	Z, r24
  f8:	08 95       	ret

000000fa <main>:

/*main function*/
int main(void){

	/*GPIO Pins*/
	DDRA = 0x00;
  fa:	11 b8       	out	0x01, r1	; 1
	DDRC = 0xF0;
  fc:	80 ef       	ldi	r24, 0xF0	; 240
  fe:	87 b9       	out	0x07, r24	; 7
	/*External interrupt settings*/
	PORTD = (1 << PD1);
 100:	82 e0       	ldi	r24, 0x02	; 2
 102:	8b b9       	out	0x0b, r24	; 11
	EICRA =	(1 << ISC11) | (0 << ISC10);
 104:	98 e0       	ldi	r25, 0x08	; 8
 106:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK = (1 << INT1);
 10a:	8d bb       	out	0x1d, r24	; 29
	/*Initialize function*/
	powerwindow_initialize_DRV();
 10c:	86 d0       	rcall	.+268    	; 0x21a <powerwindow_initialize_DRV>
	/*Enable interrupt*/
	sei();
 10e:	78 94       	sei
	/*while loop*/
	while(1){}
 110:	ff cf       	rjmp	.-2      	; 0x110 <main+0x16>

00000112 <__vector_2>:
	/*Return*/
	return(powerwindow_return_DRV());
}

/*Interrupt handler*/
ISR(INT1_vect){
 112:	1f 92       	push	r1
 114:	0f 92       	push	r0
 116:	0f b6       	in	r0, 0x3f	; 63
 118:	0f 92       	push	r0
 11a:	11 24       	eor	r1, r1
 11c:	0b b6       	in	r0, 0x3b	; 59
 11e:	0f 92       	push	r0
 120:	2f 93       	push	r18
 122:	3f 93       	push	r19
 124:	4f 93       	push	r20
 126:	5f 93       	push	r21
 128:	6f 93       	push	r22
 12a:	7f 93       	push	r23
 12c:	8f 93       	push	r24
 12e:	9f 93       	push	r25
 130:	af 93       	push	r26
 132:	bf 93       	push	r27
 134:	ef 93       	push	r30
 136:	ff 93       	push	r31

	/*Read input values*/
	powerwindow_init_DRV();
 138:	37 d0       	rcall	.+110    	; 0x1a8 <powerwindow_init_DRV>
	/*Pull up output pin*/
	PORTC = (1 << PC4);
 13a:	80 e1       	ldi	r24, 0x10	; 16
 13c:	88 b9       	out	0x08, r24	; 8
	/*Measure the execution time of the code block*/
	benchmarkBlock();
 13e:	c8 df       	rcall	.-112    	; 0xd0 <benchmarkBlock>
	/*Pull down output pin*/
	PORTC = (0 << PC4);
 140:	18 b8       	out	0x08, r1	; 8
 142:	ff 91       	pop	r31
 144:	ef 91       	pop	r30
 146:	bf 91       	pop	r27
 148:	af 91       	pop	r26
 14a:	9f 91       	pop	r25
 14c:	8f 91       	pop	r24
 14e:	7f 91       	pop	r23
 150:	6f 91       	pop	r22
 152:	5f 91       	pop	r21
 154:	4f 91       	pop	r20
 156:	3f 91       	pop	r19
 158:	2f 91       	pop	r18
 15a:	0f 90       	pop	r0
 15c:	0b be       	out	0x3b, r0	; 59
 15e:	0f 90       	pop	r0
 160:	0f be       	out	0x3f, r0	; 63
 162:	0f 90       	pop	r0
 164:	1f 90       	pop	r1
 166:	18 95       	reti

00000168 <powerwindow_debounce_Init>:
 Initialization- and return-value-related functions
 */

/* Initial conditions for referenced model: 'powerwindow_debounce_main' */
void powerwindow_debounce_Init(powerwindow_rtB_debounce_T *localB, powerwindow_rtDW_debounce_T *localDW)
{
 168:	fb 01       	movw	r30, r22
    /* InitializeConditions for Chart: '<Root>/Chart' */
    localDW->is_debounce = debounce_IN_NO_ACTIVE_CHILD;
 16a:	16 82       	std	Z+6, r1	; 0x06
    localDW->temporalCounter_i1 = 0U;
 16c:	17 82       	std	Z+7, r1	; 0x07
    localDW->is_active_c3_debounce = 0U;
 16e:	14 82       	std	Z+4, r1	; 0x04
    localDW->is_c3_debounce = debounce_IN_NO_ACTIVE_CHILD;
 170:	15 82       	std	Z+5, r1	; 0x05
    localB->Q = false;
 172:	fc 01       	movw	r30, r24
 174:	10 82       	st	Z, r1
 176:	08 95       	ret

00000178 <powerwindow_debounce_Start>:

/* Start for referenced model: 'powerwindow_debounce_main' */
void powerwindow_debounce_Start(powerwindow_rtDW_debounce_T *localDW)
{
    /* Start for DiscretePulseGenerator: '<Root>/period of 10ms' */
    localDW->clockTickCounter = 0L;
 178:	fc 01       	movw	r30, r24
 17a:	10 82       	st	Z, r1
 17c:	11 82       	std	Z+1, r1	; 0x01
 17e:	12 82       	std	Z+2, r1	; 0x02
 180:	13 82       	std	Z+3, r1	; 0x03
 182:	08 95       	ret

00000184 <powerwindow_debounce_initialize>:

/* Model initialize function */
void powerwindow_debounce_initialize(const powerwindow_char_T **rt_errorStatus, powerwindow_RT_MODEL_debounce_T *
                         const debounce_M, powerwindow_rtB_debounce_T *localB, powerwindow_rtDW_debounce_T *localDW,
                         powerwindow_rtZCE_debounce_T *localZCE)
{
 184:	0f 93       	push	r16
 186:	1f 93       	push	r17
    /* Registration code */

    /* initialize error status */
	powerwindow_rtmSetErrorStatusPointer(debounce_M, rt_errorStatus);
 188:	fb 01       	movw	r30, r22
 18a:	91 83       	std	Z+1, r25	; 0x01
 18c:	80 83       	st	Z, r24

    /* block I/O */
    (void) memset(((void *) localB), 0,
 18e:	fa 01       	movw	r30, r20
 190:	10 82       	st	Z, r1
                  sizeof(powerwindow_rtB_debounce_T));

    /* states (dwork) */
    (void) memset((void *)localDW, 0,
 192:	88 e0       	ldi	r24, 0x08	; 8
 194:	f9 01       	movw	r30, r18
 196:	11 92       	st	Z+, r1
 198:	8a 95       	dec	r24
 19a:	e9 f7       	brne	.-6      	; 0x196 <powerwindow_debounce_initialize+0x12>
                  sizeof(powerwindow_rtDW_debounce_T));
    localZCE->Chart_Trig_ZCE = powerwindow_POS_ZCSIG;
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	f8 01       	movw	r30, r16
 1a0:	80 83       	st	Z, r24
}
 1a2:	1f 91       	pop	r17
 1a4:	0f 91       	pop	r16
 1a6:	08 95       	ret

000001a8 <powerwindow_init_DRV>:
*/

void powerwindow_init_DRV(void)
{

	powerwindow_PW_Control_DRV_U.In1  = (bit_is_clear(PINC,PC2) == 0);			/* endofrange The when the window reaches the end of the range, the endofdetectionrange changes to 0. */
 1a8:	86 b1       	in	r24, 0x06	; 6
 1aa:	82 fb       	bst	r24, 2
 1ac:	88 27       	eor	r24, r24
 1ae:	80 f9       	bld	r24, 0
 1b0:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <powerwindow_PW_Control_DRV_U>
	
	powerwindow_PW_Control_DRV_U.In3  = ((bit_is_clear(PINC,PC1) == 0) * 200 + (bit_is_clear(PINC,PC0) == 0) * 100);		/* currentsense When the currentsense is higher than 92 (based on experiments), one object is stuck between the window and the frame. Pinch is set to True.*/
 1b4:	96 b1       	in	r25, 0x06	; 6
 1b6:	89 2f       	mov	r24, r25
 1b8:	82 70       	andi	r24, 0x02	; 2
 1ba:	91 fd       	sbrc	r25, 1
 1bc:	88 ec       	ldi	r24, 0xC8	; 200
 1be:	96 b1       	in	r25, 0x06	; 6
 1c0:	29 2f       	mov	r18, r25
 1c2:	21 70       	andi	r18, 0x01	; 1
 1c4:	90 fd       	sbrc	r25, 0
 1c6:	24 e6       	ldi	r18, 0x64	; 100
 1c8:	e5 e1       	ldi	r30, 0x15	; 21
 1ca:	f1 e0       	ldi	r31, 0x01	; 1
 1cc:	82 0f       	add	r24, r18
 1ce:	82 83       	std	Z+2, r24	; 0x02

	powerwindow_PW_Control_DRV_U.In2  = (bit_is_clear(PINA,PA0) == 0);			/* DRV_Up			The debounced control signal from the driver. 1 when the button is not pressed, change to 0 to lift the window. */
 1d0:	80 b1       	in	r24, 0x00	; 0
 1d2:	81 70       	andi	r24, 0x01	; 1
 1d4:	81 83       	std	Z+1, r24	; 0x01
	powerwindow_PW_Control_DRV_U.In4  = (bit_is_clear(PINA,PA1) == 0);			/* DRV_Down			The debounced control signal from the driver. 1 when the button is not pressed, change to 0 to lift the window. */
 1d6:	80 b1       	in	r24, 0x00	; 0
 1d8:	86 95       	lsr	r24
 1da:	81 70       	andi	r24, 0x01	; 1
 1dc:	83 83       	std	Z+3, r24	; 0x03

	powerwindow_PW_Control_DRV_U.In5  = (bit_is_clear(PINA,PA2) == 0);			/* PSG_Front_Up		The debounced control signal from the driver. 1 when the button is not pressed, change to 0 to lift the window. */
 1de:	80 b1       	in	r24, 0x00	; 0
 1e0:	82 fb       	bst	r24, 2
 1e2:	88 27       	eor	r24, r24
 1e4:	80 f9       	bld	r24, 0
 1e6:	84 83       	std	Z+4, r24	; 0x04
	powerwindow_PW_Control_DRV_U.In6  = (bit_is_clear(PINA,PA3) == 0);			/* PSG_Front_Down	The debounced control signal from the driver. 1 when the button is not pressed, change to 0 to lift the window. */
 1e8:	80 b1       	in	r24, 0x00	; 0
 1ea:	83 fb       	bst	r24, 3
 1ec:	88 27       	eor	r24, r24
 1ee:	80 f9       	bld	r24, 0
 1f0:	85 83       	std	Z+5, r24	; 0x05

	powerwindow_PW_Control_DRV_U.In9  = (bit_is_clear(PINA,PA4) == 0);			/* PSG_BackL_Up		The debounced control signal from the driver. 1 when the button is not pressed, change to 0 to lift the window. */
 1f2:	80 b1       	in	r24, 0x00	; 0
 1f4:	82 95       	swap	r24
 1f6:	81 70       	andi	r24, 0x01	; 1
 1f8:	80 87       	std	Z+8, r24	; 0x08
	powerwindow_PW_Control_DRV_U.In10 = (bit_is_clear(PINA,PA5) == 0);			/* PSG_BackL_Down	The debounced control signal from the driver. 1 when the button is not pressed, change to 0 to lift the window. */
 1fa:	80 b1       	in	r24, 0x00	; 0
 1fc:	85 fb       	bst	r24, 5
 1fe:	88 27       	eor	r24, r24
 200:	80 f9       	bld	r24, 0
 202:	81 87       	std	Z+9, r24	; 0x09

	powerwindow_PW_Control_DRV_U.In7  = (bit_is_clear(PINA,PA6) == 0);			/* PSG_BackR_Up		The debounced control signal from the driver. 1 when the button is not pressed, change to 0 to lift the window. */
 204:	80 b1       	in	r24, 0x00	; 0
 206:	86 fb       	bst	r24, 6
 208:	88 27       	eor	r24, r24
 20a:	80 f9       	bld	r24, 0
 20c:	86 83       	std	Z+6, r24	; 0x06
	powerwindow_PW_Control_DRV_U.In8  = (bit_is_clear(PINA,PA7) == 0);			/* PSG_BackR_Down	The debounced control signal from the driver. 1 when the button is not pressed, change to 0 to lift the window. */
 20e:	80 b1       	in	r24, 0x00	; 0
 210:	88 1f       	adc	r24, r24
 212:	88 27       	eor	r24, r24
 214:	88 1f       	adc	r24, r24
 216:	87 83       	std	Z+7, r24	; 0x07
 218:	08 95       	ret

0000021a <powerwindow_initialize_DRV>:


void powerwindow_initialize_DRV(void)
{
	/* Initialize model */
	powerwindow_PW_Control_DRV_initialize();
 21a:	3e d0       	rcall	.+124    	; 0x298 <powerwindow_PW_Control_DRV_initialize>
	powerwindow_main_inputcyclecounter_DRV=0;
 21c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <powerwindow_main_inputcyclecounter_DRV+0x1>
 220:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <powerwindow_main_inputcyclecounter_DRV>
 224:	08 95       	ret

00000226 <powerwindow_powerwindow_control_Init>:

  localZCE->stateflowcontrolmodel_Trig_ZCE = (powerwindow_uint8_T)(rtb_periodof50ms != 0 ?
    (powerwindow_int16_T)powerwindow_POS_ZCSIG : (powerwindow_int16_T)powerwindow_ZERO_ZCSIG);

  /* End of DataTypeConversion: '<S2>/Data Type Conversion' */
}
 226:	ef 92       	push	r14
 228:	ff 92       	push	r15
 22a:	0f 93       	push	r16
 22c:	1f 93       	push	r17
 22e:	f7 01       	movw	r30, r14
 230:	11 86       	std	Z+9, r1	; 0x09
 232:	10 86       	std	Z+8, r1	; 0x08
 234:	17 82       	std	Z+7, r1	; 0x07
 236:	16 82       	std	Z+6, r1	; 0x06
 238:	14 86       	std	Z+12, r1	; 0x0c
 23a:	13 86       	std	Z+11, r1	; 0x0b
 23c:	12 86       	std	Z+10, r1	; 0x0a
 23e:	15 86       	std	Z+13, r1	; 0x0d
 240:	14 82       	std	Z+4, r1	; 0x04
 242:	15 82       	std	Z+5, r1	; 0x05
 244:	fc 01       	movw	r30, r24
 246:	10 82       	st	Z, r1
 248:	fb 01       	movw	r30, r22
 24a:	10 82       	st	Z, r1
 24c:	fa 01       	movw	r30, r20
 24e:	10 82       	st	Z, r1
 250:	f9 01       	movw	r30, r18
 252:	10 82       	st	Z, r1
 254:	f8 01       	movw	r30, r16
 256:	10 82       	st	Z, r1
 258:	1f 91       	pop	r17
 25a:	0f 91       	pop	r16
 25c:	ff 90       	pop	r15
 25e:	ef 90       	pop	r14
 260:	08 95       	ret

00000262 <powerwindow_powerwindow_control_Start>:
 262:	fc 01       	movw	r30, r24
 264:	10 82       	st	Z, r1
 266:	11 82       	std	Z+1, r1	; 0x01
 268:	12 82       	std	Z+2, r1	; 0x02
 26a:	13 82       	std	Z+3, r1	; 0x03
 26c:	08 95       	ret

0000026e <powerwindow_powerwindow_control_initialize>:
/* Model initialize function */
void powerwindow_powerwindow_control_initialize(const powerwindow_char_T **rt_errorStatus,
  powerwindow_RT_MODEL_PowerWindow_control *const PowerWindow_control_M,
  powerwindow_rtB_PowerWindow_control *localB, powerwindow_rtDW_PowerWindow_control *localDW,
  powerwindow_rtZCE_PowerWindow_control *localZCE)
{
 26e:	0f 93       	push	r16
 270:	1f 93       	push	r17
  /* Registration code */

  /* initialize error status */
	powerwindow_powerwindow_control_rtmSetErrorStatusPointer(PowerWindow_control_M, rt_errorStatus);
 272:	fb 01       	movw	r30, r22
 274:	91 83       	std	Z+1, r25	; 0x01
 276:	80 83       	st	Z, r24

  /* block I/O */
  (void) memset(((void *) localB), 0,
 278:	85 e0       	ldi	r24, 0x05	; 5
 27a:	fa 01       	movw	r30, r20
 27c:	11 92       	st	Z+, r1
 27e:	8a 95       	dec	r24
 280:	e9 f7       	brne	.-6      	; 0x27c <powerwindow_powerwindow_control_initialize+0xe>
                sizeof(powerwindow_rtB_PowerWindow_control));

  /* states (dwork) */
  (void) memset((void *)localDW, 0,
 282:	8e e0       	ldi	r24, 0x0E	; 14
 284:	f9 01       	movw	r30, r18
 286:	11 92       	st	Z+, r1
 288:	8a 95       	dec	r24
 28a:	e9 f7       	brne	.-6      	; 0x286 <powerwindow_powerwindow_control_initialize+0x18>
                sizeof(powerwindow_rtDW_PowerWindow_control));
  localZCE->stateflowcontrolmodel_Trig_ZCE = powerwindow_UNINITIALIZED_ZCSIG;
 28c:	83 e0       	ldi	r24, 0x03	; 3
 28e:	f8 01       	movw	r30, r16
 290:	80 83       	st	Z, r24
}
 292:	1f 91       	pop	r17
 294:	0f 91       	pop	r16
 296:	08 95       	ret

00000298 <powerwindow_PW_Control_DRV_initialize>:
}


/* Model initialize function */
void powerwindow_PW_Control_DRV_initialize(void)
{
 298:	ef 92       	push	r14
 29a:	ff 92       	push	r15
 29c:	0f 93       	push	r16
 29e:	1f 93       	push	r17
  /* Registration code */

  /* states (dwork) */
  (void) memset((void *)&powerwindow_PW_Control_DR_DWork, 0,
 2a0:	86 e7       	ldi	r24, 0x76	; 118
 2a2:	ef e1       	ldi	r30, 0x1F	; 31
 2a4:	f1 e0       	ldi	r31, 0x01	; 1
 2a6:	df 01       	movw	r26, r30
 2a8:	1d 92       	st	X+, r1
 2aa:	8a 95       	dec	r24
 2ac:	e9 f7       	brne	.-6      	; 0x2a8 <powerwindow_PW_Control_DRV_initialize+0x10>
                sizeof(powerwindow_D_Work_powerwindow_PW_Control_D));

  /* external inputs */
  (void) memset((void *)&powerwindow_PW_Control_DRV_U, 0,
 2ae:	8a e0       	ldi	r24, 0x0A	; 10
 2b0:	e5 e1       	ldi	r30, 0x15	; 21
 2b2:	f1 e0       	ldi	r31, 0x01	; 1
 2b4:	df 01       	movw	r26, r30
 2b6:	1d 92       	st	X+, r1
 2b8:	8a 95       	dec	r24
 2ba:	e9 f7       	brne	.-6      	; 0x2b6 <powerwindow_PW_Control_DRV_initialize+0x1e>
                sizeof(powerwindow_ExternalInputs_powerwindow_PW_C));

  /* external outputs */
  (void) memset((void *)&powerwindow_PW_Control_DRV_Y, 0,
 2bc:	8b e0       	ldi	r24, 0x0B	; 11
 2be:	e8 e0       	ldi	r30, 0x08	; 8
 2c0:	f1 e0       	ldi	r31, 0x01	; 1
 2c2:	df 01       	movw	r26, r30
 2c4:	1d 92       	st	X+, r1
 2c6:	8a 95       	dec	r24
 2c8:	e9 f7       	brne	.-6      	; 0x2c4 <powerwindow_PW_Control_DRV_initialize+0x2c>
                sizeof(powerwindow_ExternalOutputs_powerwindow_PW_));

  /* Model Initialize fcn for ModelReference Block: '<S2>/Debounce_Down_DRV' */
  powerwindow_debounce_initialize(powerwindow_PW_DRV_rtmGetErrorStatusPointer(powerwindow_PW_Control_DRV_M),
 2ca:	06 e3       	ldi	r16, 0x36	; 54
 2cc:	11 e0       	ldi	r17, 0x01	; 1
 2ce:	2c e2       	ldi	r18, 0x2C	; 44
 2d0:	31 e0       	ldi	r19, 0x01	; 1
 2d2:	4b e2       	ldi	r20, 0x2B	; 43
 2d4:	51 e0       	ldi	r21, 0x01	; 1
 2d6:	64 e3       	ldi	r22, 0x34	; 52
 2d8:	71 e0       	ldi	r23, 0x01	; 1
 2da:	83 e1       	ldi	r24, 0x13	; 19
 2dc:	91 e0       	ldi	r25, 0x01	; 1
 2de:	52 df       	rcall	.-348    	; 0x184 <powerwindow_debounce_initialize>
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_DRV_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_DRV_DWORK1.rtdw),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_DRV_DWORK1.rtzce));

  /* Model Initialize fcn for ModelReference Block: '<S2>/Debounce_Down_PSG_BackL' */
  powerwindow_debounce_initialize(powerwindow_PW_DRV_rtmGetErrorStatusPointer(powerwindow_PW_Control_DRV_M),
 2e0:	0e e4       	ldi	r16, 0x4E	; 78
 2e2:	11 e0       	ldi	r17, 0x01	; 1
 2e4:	24 e4       	ldi	r18, 0x44	; 68
 2e6:	31 e0       	ldi	r19, 0x01	; 1
 2e8:	43 e4       	ldi	r20, 0x43	; 67
 2ea:	51 e0       	ldi	r21, 0x01	; 1
 2ec:	6c e4       	ldi	r22, 0x4C	; 76
 2ee:	71 e0       	ldi	r23, 0x01	; 1
 2f0:	83 e1       	ldi	r24, 0x13	; 19
 2f2:	91 e0       	ldi	r25, 0x01	; 1
 2f4:	47 df       	rcall	.-370    	; 0x184 <powerwindow_debounce_initialize>
	 &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackL_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackL_DWORK1.rtdw),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackL_DWORK1.rtzce));

  /* Model Initialize fcn for ModelReference Block: '<S2>/Debounce_Down_PSG_BackR' */
  powerwindow_debounce_initialize(powerwindow_PW_DRV_rtmGetErrorStatusPointer(powerwindow_PW_Control_DRV_M),
 2f6:	0e e7       	ldi	r16, 0x7E	; 126
 2f8:	11 e0       	ldi	r17, 0x01	; 1
 2fa:	24 e7       	ldi	r18, 0x74	; 116
 2fc:	31 e0       	ldi	r19, 0x01	; 1
 2fe:	43 e7       	ldi	r20, 0x73	; 115
 300:	51 e0       	ldi	r21, 0x01	; 1
 302:	6c e7       	ldi	r22, 0x7C	; 124
 304:	71 e0       	ldi	r23, 0x01	; 1
 306:	83 e1       	ldi	r24, 0x13	; 19
 308:	91 e0       	ldi	r25, 0x01	; 1
 30a:	3c df       	rcall	.-392    	; 0x184 <powerwindow_debounce_initialize>
	 &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackR_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackR_DWORK1.rtdw),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackR_DWORK1.rtzce));

  /* Model Initialize fcn for ModelReference Block: '<S2>/Debounce_Down_PSG_Front' */
  powerwindow_debounce_initialize(powerwindow_PW_DRV_rtmGetErrorStatusPointer(powerwindow_PW_Control_DRV_M),
 30c:	06 e6       	ldi	r16, 0x66	; 102
 30e:	11 e0       	ldi	r17, 0x01	; 1
 310:	2c e5       	ldi	r18, 0x5C	; 92
 312:	31 e0       	ldi	r19, 0x01	; 1
 314:	4b e5       	ldi	r20, 0x5B	; 91
 316:	51 e0       	ldi	r21, 0x01	; 1
 318:	64 e6       	ldi	r22, 0x64	; 100
 31a:	71 e0       	ldi	r23, 0x01	; 1
 31c:	83 e1       	ldi	r24, 0x13	; 19
 31e:	91 e0       	ldi	r25, 0x01	; 1
 320:	31 df       	rcall	.-414    	; 0x184 <powerwindow_debounce_initialize>
	 &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_Front_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_Front_DWORK1.rtdw),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_Front_DWORK1.rtzce));

  /* Model Initialize fcn for ModelReference Block: '<S2>/Debounce_Up_DRV' */
  powerwindow_debounce_initialize(powerwindow_PW_DRV_rtmGetErrorStatusPointer(powerwindow_PW_Control_DRV_M),
 322:	0a e2       	ldi	r16, 0x2A	; 42
 324:	11 e0       	ldi	r17, 0x01	; 1
 326:	20 e2       	ldi	r18, 0x20	; 32
 328:	31 e0       	ldi	r19, 0x01	; 1
 32a:	4f e1       	ldi	r20, 0x1F	; 31
 32c:	51 e0       	ldi	r21, 0x01	; 1
 32e:	68 e2       	ldi	r22, 0x28	; 40
 330:	71 e0       	ldi	r23, 0x01	; 1
 332:	83 e1       	ldi	r24, 0x13	; 19
 334:	91 e0       	ldi	r25, 0x01	; 1
 336:	26 df       	rcall	.-436    	; 0x184 <powerwindow_debounce_initialize>
	 &(powerwindow_PW_Control_DR_DWork.Debounce_Up_DRV_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Up_DRV_DWORK1.rtdw),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Up_DRV_DWORK1.rtzce));

  /* Model Initialize fcn for ModelReference Block: '<S2>/Debounce_Up_PSG_BackL' */
  powerwindow_debounce_initialize(powerwindow_PW_DRV_rtmGetErrorStatusPointer(powerwindow_PW_Control_DRV_M),
 338:	02 e4       	ldi	r16, 0x42	; 66
 33a:	11 e0       	ldi	r17, 0x01	; 1
 33c:	28 e3       	ldi	r18, 0x38	; 56
 33e:	31 e0       	ldi	r19, 0x01	; 1
 340:	47 e3       	ldi	r20, 0x37	; 55
 342:	51 e0       	ldi	r21, 0x01	; 1
 344:	60 e4       	ldi	r22, 0x40	; 64
 346:	71 e0       	ldi	r23, 0x01	; 1
 348:	83 e1       	ldi	r24, 0x13	; 19
 34a:	91 e0       	ldi	r25, 0x01	; 1
 34c:	1b df       	rcall	.-458    	; 0x184 <powerwindow_debounce_initialize>
	 &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackL_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackL_DWORK1.rtdw),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackL_DWORK1.rtzce));

  /* Model Initialize fcn for ModelReference Block: '<S2>/Debounce_Up_PSG_BackR' */
  powerwindow_debounce_initialize(powerwindow_PW_DRV_rtmGetErrorStatusPointer(powerwindow_PW_Control_DRV_M),
 34e:	02 e7       	ldi	r16, 0x72	; 114
 350:	11 e0       	ldi	r17, 0x01	; 1
 352:	28 e6       	ldi	r18, 0x68	; 104
 354:	31 e0       	ldi	r19, 0x01	; 1
 356:	47 e6       	ldi	r20, 0x67	; 103
 358:	51 e0       	ldi	r21, 0x01	; 1
 35a:	60 e7       	ldi	r22, 0x70	; 112
 35c:	71 e0       	ldi	r23, 0x01	; 1
 35e:	83 e1       	ldi	r24, 0x13	; 19
 360:	91 e0       	ldi	r25, 0x01	; 1
 362:	10 df       	rcall	.-480    	; 0x184 <powerwindow_debounce_initialize>
	 &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackR_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackR_DWORK1.rtdw),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackR_DWORK1.rtzce));

  /* Model Initialize fcn for ModelReference Block: '<S2>/Debounce_Up_PSG_Front' */
  powerwindow_debounce_initialize(powerwindow_PW_DRV_rtmGetErrorStatusPointer(powerwindow_PW_Control_DRV_M),
 364:	0a e5       	ldi	r16, 0x5A	; 90
 366:	11 e0       	ldi	r17, 0x01	; 1
 368:	20 e5       	ldi	r18, 0x50	; 80
 36a:	31 e0       	ldi	r19, 0x01	; 1
 36c:	4f e4       	ldi	r20, 0x4F	; 79
 36e:	51 e0       	ldi	r21, 0x01	; 1
 370:	68 e5       	ldi	r22, 0x58	; 88
 372:	71 e0       	ldi	r23, 0x01	; 1
 374:	83 e1       	ldi	r24, 0x13	; 19
 376:	91 e0       	ldi	r25, 0x01	; 1
 378:	05 df       	rcall	.-502    	; 0x184 <powerwindow_debounce_initialize>
	 &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_Front_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_Front_DWORK1.rtdw),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_Front_DWORK1.rtzce));

  /* Model Initialize fcn for ModelReference Block: '<S1>/PW_DRV' */
  powerwindow_powerwindow_control_initialize(powerwindow_PW_DRV_rtmGetErrorStatusPointer(powerwindow_PW_Control_DRV_M),
 37a:	04 e9       	ldi	r16, 0x94	; 148
 37c:	11 e0       	ldi	r17, 0x01	; 1
 37e:	24 e8       	ldi	r18, 0x84	; 132
 380:	31 e0       	ldi	r19, 0x01	; 1
 382:	4f e7       	ldi	r20, 0x7F	; 127
 384:	51 e0       	ldi	r21, 0x01	; 1
 386:	62 e9       	ldi	r22, 0x92	; 146
 388:	71 e0       	ldi	r23, 0x01	; 1
 38a:	83 e1       	ldi	r24, 0x13	; 19
 38c:	91 e0       	ldi	r25, 0x01	; 1
 38e:	6f df       	rcall	.-290    	; 0x26e <powerwindow_powerwindow_control_initialize>
	 &(powerwindow_PW_Control_DR_DWork.PW_DRV_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.PW_DRV_DWORK1.rtdw),
     &(powerwindow_PW_Control_DR_DWork.PW_DRV_DWORK1.rtzce));

  /* Start for ModelReference: '<S2>/Debounce_Up_DRV' */
  powerwindow_debounce_Start(&(powerwindow_PW_Control_DR_DWork.Debounce_Up_DRV_DWORK1.rtdw));
 390:	80 e2       	ldi	r24, 0x20	; 32
 392:	91 e0       	ldi	r25, 0x01	; 1
 394:	f1 de       	rcall	.-542    	; 0x178 <powerwindow_debounce_Start>

  /* Start for ModelReference: '<S2>/Debounce_Down_DRV' */
  powerwindow_debounce_Start(&(powerwindow_PW_Control_DR_DWork.Debounce_Down_DRV_DWORK1.rtdw));
 396:	8c e2       	ldi	r24, 0x2C	; 44
 398:	91 e0       	ldi	r25, 0x01	; 1
 39a:	ee de       	rcall	.-548    	; 0x178 <powerwindow_debounce_Start>

  /* Start for ModelReference: '<S2>/Debounce_Up_PSG_BackL' */
  powerwindow_debounce_Start
 39c:	88 e3       	ldi	r24, 0x38	; 56
 39e:	91 e0       	ldi	r25, 0x01	; 1
 3a0:	eb de       	rcall	.-554    	; 0x178 <powerwindow_debounce_Start>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackL_DWORK1.rtdw));

  /* Start for ModelReference: '<S2>/Debounce_Down_PSG_BackL' */
  powerwindow_debounce_Start
 3a2:	84 e4       	ldi	r24, 0x44	; 68
 3a4:	91 e0       	ldi	r25, 0x01	; 1
 3a6:	e8 de       	rcall	.-560    	; 0x178 <powerwindow_debounce_Start>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackL_DWORK1.rtdw));

  /* Start for ModelReference: '<S2>/Debounce_Up_PSG_Front' */
  powerwindow_debounce_Start
 3a8:	80 e5       	ldi	r24, 0x50	; 80
 3aa:	91 e0       	ldi	r25, 0x01	; 1
 3ac:	e5 de       	rcall	.-566    	; 0x178 <powerwindow_debounce_Start>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_Front_DWORK1.rtdw));

  /* Start for ModelReference: '<S2>/Debounce_Down_PSG_Front' */
  powerwindow_debounce_Start
 3ae:	8c e5       	ldi	r24, 0x5C	; 92
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	e2 de       	rcall	.-572    	; 0x178 <powerwindow_debounce_Start>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_Front_DWORK1.rtdw));

  /* Start for ModelReference: '<S2>/Debounce_Up_PSG_BackR' */
  powerwindow_debounce_Start
 3b4:	88 e6       	ldi	r24, 0x68	; 104
 3b6:	91 e0       	ldi	r25, 0x01	; 1
 3b8:	df de       	rcall	.-578    	; 0x178 <powerwindow_debounce_Start>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackR_DWORK1.rtdw));

  /* Start for ModelReference: '<S2>/Debounce_Down_PSG_BackR' */
  powerwindow_debounce_Start
 3ba:	84 e7       	ldi	r24, 0x74	; 116
 3bc:	91 e0       	ldi	r25, 0x01	; 1
 3be:	dc de       	rcall	.-584    	; 0x178 <powerwindow_debounce_Start>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackR_DWORK1.rtdw));

  /* Start for ModelReference: '<S1>/PW_DRV' */
  powerwindow_powerwindow_control_Start(&(powerwindow_PW_Control_DR_DWork.PW_DRV_DWORK1.rtdw));
 3c0:	84 e8       	ldi	r24, 0x84	; 132
 3c2:	91 e0       	ldi	r25, 0x01	; 1
 3c4:	4e df       	rcall	.-356    	; 0x262 <powerwindow_powerwindow_control_Start>

  /* SystemInitialize for ModelReference: '<S2>/Debounce_Up_DRV' */
  powerwindow_debounce_Init(&(powerwindow_PW_Control_DR_DWork.Debounce_Up_DRV_DWORK1.rtb),
 3c6:	60 e2       	ldi	r22, 0x20	; 32
 3c8:	71 e0       	ldi	r23, 0x01	; 1
 3ca:	8f e1       	ldi	r24, 0x1F	; 31
 3cc:	91 e0       	ldi	r25, 0x01	; 1
 3ce:	cc de       	rcall	.-616    	; 0x168 <powerwindow_debounce_Init>
                &(powerwindow_PW_Control_DR_DWork.Debounce_Up_DRV_DWORK1.rtdw));

  /* SystemInitialize for ModelReference: '<S2>/Debounce_Down_DRV' */
  powerwindow_debounce_Init(&(powerwindow_PW_Control_DR_DWork.Debounce_Down_DRV_DWORK1.rtb),
 3d0:	6c e2       	ldi	r22, 0x2C	; 44
 3d2:	71 e0       	ldi	r23, 0x01	; 1
 3d4:	8b e2       	ldi	r24, 0x2B	; 43
 3d6:	91 e0       	ldi	r25, 0x01	; 1
 3d8:	c7 de       	rcall	.-626    	; 0x168 <powerwindow_debounce_Init>
                &(powerwindow_PW_Control_DR_DWork.Debounce_Down_DRV_DWORK1.rtdw));

  /* SystemInitialize for ModelReference: '<S2>/Debounce_Up_PSG_BackL' */
  powerwindow_debounce_Init
 3da:	68 e3       	ldi	r22, 0x38	; 56
 3dc:	71 e0       	ldi	r23, 0x01	; 1
 3de:	87 e3       	ldi	r24, 0x37	; 55
 3e0:	91 e0       	ldi	r25, 0x01	; 1
 3e2:	c2 de       	rcall	.-636    	; 0x168 <powerwindow_debounce_Init>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackL_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackL_DWORK1.rtdw));

  /* SystemInitialize for ModelReference: '<S2>/Debounce_Down_PSG_BackL' */
  powerwindow_debounce_Init
 3e4:	64 e4       	ldi	r22, 0x44	; 68
 3e6:	71 e0       	ldi	r23, 0x01	; 1
 3e8:	83 e4       	ldi	r24, 0x43	; 67
 3ea:	91 e0       	ldi	r25, 0x01	; 1
 3ec:	bd de       	rcall	.-646    	; 0x168 <powerwindow_debounce_Init>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackL_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackL_DWORK1.rtdw));

  /* SystemInitialize for ModelReference: '<S2>/Debounce_Up_PSG_Front' */
  powerwindow_debounce_Init
 3ee:	60 e5       	ldi	r22, 0x50	; 80
 3f0:	71 e0       	ldi	r23, 0x01	; 1
 3f2:	8f e4       	ldi	r24, 0x4F	; 79
 3f4:	91 e0       	ldi	r25, 0x01	; 1
 3f6:	b8 de       	rcall	.-656    	; 0x168 <powerwindow_debounce_Init>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_Front_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_Front_DWORK1.rtdw));

  /* SystemInitialize for ModelReference: '<S2>/Debounce_Down_PSG_Front' */
  powerwindow_debounce_Init
 3f8:	6c e5       	ldi	r22, 0x5C	; 92
 3fa:	71 e0       	ldi	r23, 0x01	; 1
 3fc:	8b e5       	ldi	r24, 0x5B	; 91
 3fe:	91 e0       	ldi	r25, 0x01	; 1
 400:	b3 de       	rcall	.-666    	; 0x168 <powerwindow_debounce_Init>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_Front_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_Front_DWORK1.rtdw));

  /* SystemInitialize for ModelReference: '<S2>/Debounce_Up_PSG_BackR' */
  powerwindow_debounce_Init
 402:	68 e6       	ldi	r22, 0x68	; 104
 404:	71 e0       	ldi	r23, 0x01	; 1
 406:	87 e6       	ldi	r24, 0x67	; 103
 408:	91 e0       	ldi	r25, 0x01	; 1
 40a:	ae de       	rcall	.-676    	; 0x168 <powerwindow_debounce_Init>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackR_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Up_PSG_BackR_DWORK1.rtdw));

  /* SystemInitialize for ModelReference: '<S2>/Debounce_Down_PSG_BackR' */
  powerwindow_debounce_Init
 40c:	64 e7       	ldi	r22, 0x74	; 116
 40e:	71 e0       	ldi	r23, 0x01	; 1
 410:	83 e7       	ldi	r24, 0x73	; 115
 412:	91 e0       	ldi	r25, 0x01	; 1
 414:	a9 de       	rcall	.-686    	; 0x168 <powerwindow_debounce_Init>
    (&(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackR_DWORK1.rtb),
     &(powerwindow_PW_Control_DR_DWork.Debounce_Down_PSG_BackR_DWORK1.rtdw));

  /* SystemInitialize for ModelReference: '<S1>/PW_DRV' */
  powerwindow_powerwindow_control_Init(&powerwindow_PW_Control_DRV_Y.Out1,
 416:	0f 2e       	mov	r0, r31
 418:	f4 e8       	ldi	r31, 0x84	; 132
 41a:	ef 2e       	mov	r14, r31
 41c:	f1 e0       	ldi	r31, 0x01	; 1
 41e:	ff 2e       	mov	r15, r31
 420:	f0 2d       	mov	r31, r0
 422:	0c e0       	ldi	r16, 0x0C	; 12
 424:	11 e0       	ldi	r17, 0x01	; 1
 426:	2b e0       	ldi	r18, 0x0B	; 11
 428:	31 e0       	ldi	r19, 0x01	; 1
 42a:	4a e0       	ldi	r20, 0x0A	; 10
 42c:	51 e0       	ldi	r21, 0x01	; 1
 42e:	69 e0       	ldi	r22, 0x09	; 9
 430:	71 e0       	ldi	r23, 0x01	; 1
 432:	88 e0       	ldi	r24, 0x08	; 8
 434:	91 e0       	ldi	r25, 0x01	; 1
 436:	f7 de       	rcall	.-530    	; 0x226 <powerwindow_powerwindow_control_Init>
    &powerwindow_PW_Control_DRV_Y.Out2, &powerwindow_PW_Control_DRV_Y.Out3,
    &powerwindow_PW_Control_DRV_Y.Out4, &powerwindow_PW_Control_DRV_Y.Out5,
    &(powerwindow_PW_Control_DR_DWork.PW_DRV_DWORK1.rtdw));
}
 438:	1f 91       	pop	r17
 43a:	0f 91       	pop	r16
 43c:	ff 90       	pop	r15
 43e:	ef 90       	pop	r14
 440:	08 95       	ret

00000442 <_exit>:
 442:	f8 94       	cli

00000444 <__stop_program>:
 444:	ff cf       	rjmp	.-2      	; 0x444 <__stop_program>
