<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Created with COBRA-Framework Export Tool v0.1
// Developed by: Thomas Huybrechts - MOSAIC 2016
// Place global variables here.
clock globalclock;
chan  _complex_updates_init, _complex_updates_init_out, _complex_updates_pin_down, _complex_updates_pin_down_out, _complex_updates_return, _complex_updates_return_out, _complex_updates_main, _complex_updates_main_out, _main, _main_out;
</declaration>
	<template>
		<name x="5" y="5">complex_updates_init</name>
		<declaration>// Place local variables here.
int r60_r61_WCET=8, r68_r72_WCET=8507;
clock localclock;
</declaration>
		<location id="id0" x="0" y="0">
			<name x="16" y="-16">START</name>
		</location>
		<location id="id1" x="0" y="64">
			<name x="16" y="48">complex_updates_init</name>
			<label kind="comments" x="-10" y="99">void complex_updates_init( void )</label>
			<committed/>
		</location>
		<location id="id2" x="0" y="128">
			<name x="16" y="112">r60_r61</name>
			<label kind="invariant" x="20" y="128">localclock&lt;=r60_r61_WCET</label>
			<label kind="comments" x="-10" y="163">int i;
  volatile float x = 0;</label>
		</location>
		<location id="id3" x="0" y="192">
			<name x="16" y="176">complex_updates_pin_down_r63</name>
			<label kind="comments" x="-10" y="227">complex_updates_pin_down( &amp;complex_updates_A[0], &amp;complex_updates_B[0],
                            &amp;complex_updates_C[0], &amp;complex_updates_D[0] );</label>
			<committed/>
		</location>
		<location id="id4" x="0" y="256">
			<name x="16" y="240">complex_updates_pin_down_out_r63</name>
		</location>
		<location id="id5" x="0" y="320">
			<name x="16" y="304">r68_r72</name>
			<label kind="invariant" x="20" y="320">localclock&lt;=r68_r72_WCET</label>
			<label kind="comments" x="-10" y="355">for ( i = 0 ; i &lt; N ; i++ )
{
	complex_updates_A[i] += x;
	    complex_updates_B[i] += x;
	    complex_updates_C[i] += x;
	    complex_updates_D[i] += x;
}</label>
		</location>
		<location id="id6" x="0" y="384">
			<name x="16" y="368">END</name>
			<committed/>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="8" y="16">_complex_updates_init?</label>
			<label kind="assignment" x="8" y="32">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="assignment" x="8" y="80">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="8" y="208">_complex_updates_pin_down!</label>
			<label kind="assignment" x="8" y="224">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="8" y="144">localclock&gt;=r60_r61_WCET</label>
			<label kind="assignment" x="8" y="160">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="8" y="272">_complex_updates_pin_down_out?</label>
			<label kind="assignment" x="8" y="288">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="8" y="336">localclock&gt;=r68_r72_WCET</label>
			<label kind="assignment" x="8" y="352">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-100" y="320">_complex_updates_init_out!</label>
			<label kind="assignment" x="-100" y="336">localclock:=0</label>
			<nail x="-105" y="384"/>
			<nail x="-105" y="0"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">complex_updates_pin_down</name>
		<declaration>// Place local variables here.
int r79_WCET=0, r82_r90_WCET=2700;
clock localclock;</declaration>
		<location id="id7" x="0" y="0">
			<name x="16" y="-16">START</name>
		</location>
		<location id="id8" x="0" y="64">
			<name x="16" y="48">complex_updates_pin_down</name>
			<label kind="comments" x="-10" y="99">void complex_updates_pin_down( float *pa, float *pb, float *pc, float *pd )</label>
			<committed/>
		</location>
		<location id="id9" x="0" y="128">
			<name x="16" y="112">r79</name>
			<label kind="invariant" x="20" y="128">localclock&lt;=r79_WCET</label>
			<label kind="comments" x="-10" y="163">register int i;</label>
		</location>
		<location id="id10" x="0" y="192">
			<name x="16" y="176">r82_r90</name>
			<label kind="invariant" x="20" y="192">localclock&lt;=r82_r90_WCET</label>
			<label kind="comments" x="-10" y="227">for ( i = 0; i &lt; N; i++ )
{
	*pa++ = 2;
	    *pa++ = 1;
	    *pb++ = 2;
	    *pb++ = 5;
	    *pc++ = 3;
	    *pc++ = 4;
	    *pd++ = 0;
	    *pd++ = 0;
}</label>
		</location>
		<location id="id11" x="0" y="256">
			<name x="16" y="240">END</name>
			<committed/>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="8" y="16">_complex_updates_pin_down?</label>
			<label kind="assignment" x="8" y="32">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="assignment" x="8" y="80">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="8" y="144">localclock&gt;=r79_WCET</label>
			<label kind="assignment" x="8" y="160">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="guard" x="8" y="208">localclock&gt;=r82_r90_WCET</label>
			<label kind="assignment" x="8" y="224">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-100" y="192">_complex_updates_pin_down_out!</label>
			<label kind="assignment" x="-100" y="208">localclock:=0</label>
			<nail x="-105" y="256"/>
			<nail x="-105" y="0"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">complex_updates_return</name>
		<declaration>// Place local variables here.
int r97_r98_WCET=0, r100_r101_WCET=1701, r103_WCET=4;
clock localclock;
</declaration>
		<location id="id12" x="0" y="0">
			<name x="16" y="-16">START</name>
		</location>
		<location id="id13" x="0" y="64">
			<name x="16" y="48">complex_updates_return</name>
			<label kind="comments" x="-10" y="99">int complex_updates_return( void )</label>
			<committed/>
		</location>
		<location id="id14" x="0" y="128">
			<name x="16" y="112">r97_r98</name>
			<label kind="invariant" x="20" y="128">localclock&lt;=r97_r98_WCET</label>
			<label kind="comments" x="-10" y="163">float check_sum = 0;
  int i;</label>
		</location>
		<location id="id15" x="0" y="192">
			<name x="16" y="176">r100_r101</name>
			<label kind="invariant" x="20" y="192">localclock&lt;=r100_r101_WCET</label>
			<label kind="comments" x="-10" y="227">for ( i = 0; i &lt; N; i++ )
{
	check_sum += complex_updates_D[i];
}</label>
		</location>
		<location id="id16" x="0" y="256">
			<name x="16" y="240">r103</name>
			<label kind="invariant" x="20" y="256">localclock&lt;=r103_WCET</label>
			<label kind="comments" x="-10" y="291">return ( check_sum != 144.0f );</label>
		</location>
		<location id="id17" x="0" y="320">
			<name x="16" y="304">END</name>
			<committed/>
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="8" y="16">_complex_updates_return?</label>
			<label kind="assignment" x="8" y="32">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="assignment" x="8" y="80">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="8" y="144">localclock&gt;=r97_r98_WCET</label>
			<label kind="assignment" x="8" y="160">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="8" y="208">localclock&gt;=r100_r101_WCET</label>
			<label kind="assignment" x="8" y="224">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="guard" x="8" y="272">localclock&gt;=r103_WCET</label>
			<label kind="assignment" x="8" y="288">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-100" y="256">_complex_updates_return_out!</label>
			<label kind="assignment" x="-100" y="272">localclock:=0</label>
			<nail x="-105" y="320"/>
			<nail x="-105" y="0"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">complex_updates_main</name>
		<declaration>// Place local variables here.
int r113_r115_WCET=0, r118_r123_WCET=19399;
clock localclock;
</declaration>
		<location id="id18" x="0" y="0">
			<name x="16" y="-16">START</name>
		</location>
		<location id="id19" x="0" y="64">
			<name x="16" y="48">complex_updates_main</name>
			<label kind="comments" x="-10" y="99">void _Pragma( "entrypoint" ) complex_updates_main( void )</label>
			<committed/>
		</location>
		<location id="id20" x="0" y="128">
			<name x="16" y="112">r113_r115</name>
			<label kind="invariant" x="20" y="128">localclock&lt;=r113_r115_WCET</label>
			<label kind="comments" x="-10" y="163">register float *p_a = &amp;complex_updates_A[0], *p_b = &amp;complex_updates_B[0];
  register float *p_c = &amp;complex_updates_C[0], *p_d = &amp;complex_updates_D[0];
  int i;</label>
		</location>
		<location id="id21" x="0" y="192">
			<name x="16" y="176">r118_r123</name>
			<label kind="invariant" x="20" y="192">localclock&lt;=r118_r123_WCET</label>
			<label kind="comments" x="-10" y="227">for ( i = 0 ; i &lt; N ; i++, p_a++ )
{
	*p_d    = *p_c++ + *p_a++ * *p_b++ ;
	    *p_d++ -=          *p_a   * *p_b-- ;
	
	    *p_d    = *p_c++ + *p_a-- * *p_b++ ;
	    *p_d++ +=          *p_a++ * *p_b++ ;
}</label>
		</location>
		<location id="id22" x="0" y="256">
			<name x="16" y="240">END</name>
			<committed/>
		</location>
		<init ref="id18"/>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="8" y="16">_complex_updates_main?</label>
			<label kind="assignment" x="8" y="32">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="assignment" x="8" y="80">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="8" y="144">localclock&gt;=r113_r115_WCET</label>
			<label kind="assignment" x="8" y="160">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="guard" x="8" y="208">localclock&gt;=r118_r123_WCET</label>
			<label kind="assignment" x="8" y="224">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-100" y="192">_complex_updates_main_out!</label>
			<label kind="assignment" x="-100" y="208">localclock:=0</label>
			<nail x="-105" y="256"/>
			<nail x="-105" y="0"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">main</name>
		<declaration>// Place local variables here.
int r134_WCET=1571;
clock localclock;
</declaration>
		<location id="id23" x="0" y="0">
			<name x="16" y="-16">START</name>
			<committed/>
		</location>
		<location id="id24" x="0" y="64">
			<name x="16" y="48">main</name>
			<label kind="comments" x="-10" y="99">int main( void )</label>
			<committed/>
		</location>
		<location id="id25" x="0" y="128">
			<name x="16" y="112">complex_updates_init_r130</name>
			<label kind="comments" x="-10" y="163">complex_updates_init();</label>
			<committed/>
		</location>
		<location id="id26" x="0" y="192">
			<name x="16" y="176">complex_updates_init_out_r130</name>
		</location>
		<location id="id27" x="0" y="256">
			<name x="16" y="240">complex_updates_main_r132</name>
			<label kind="comments" x="-10" y="291">complex_updates_main();</label>
			<committed/>
		</location>
		<location id="id28" x="0" y="320">
			<name x="16" y="304">complex_updates_main_out_r132</name>
		</location>
		<location id="id29" x="0" y="384">
			<name x="16" y="368">r134</name>
			<label kind="invariant" x="20" y="384">localclock&lt;=r134_WCET</label>
			<label kind="comments" x="-10" y="419">return complex_updates_return();</label>
		</location>
		<location id="id30" x="0" y="448">
			<name x="16" y="432">END</name>
			<committed/>
		</location>
		<init ref="id23"/>
		<transition>
			<source ref="id23"/>
			<target ref="id24"/>
			<label kind="assignment" x="8" y="16">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id26"/>
			<label kind="synchronisation" x="8" y="144">_complex_updates_init!</label>
			<label kind="assignment" x="8" y="160">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id25"/>
			<label kind="assignment" x="8" y="80">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="8" y="272">_complex_updates_main!</label>
			<label kind="assignment" x="8" y="288">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="8" y="208">_complex_updates_init_out?</label>
			<label kind="assignment" x="8" y="224">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="8" y="336">_complex_updates_main_out?</label>
			<label kind="assignment" x="8" y="352">localclock:=0</label>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id30"/>
			<label kind="guard" x="8" y="400">localclock&gt;=r134_WCET</label>
			<label kind="assignment" x="8" y="416">localclock:=0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.

p_complex_updates_init = complex_updates_init();
p_complex_updates_pin_down = complex_updates_pin_down();
p_complex_updates_return = complex_updates_return();
p_complex_updates_main = complex_updates_main();
p_main = main();

// List one or more processes to be composed into a system.
system p_complex_updates_init, p_complex_updates_pin_down, p_complex_updates_return, p_complex_updates_main, p_main;
</system>
	<queries>
	</queries>
</nta>
