/* Automatically-generated file. Do not edit! */ 

/*Include headerfiles*/
#include "main.h" 
#include "inputs.h" 
#include <avr/interrupt.h>

/*Forward declaration of functions.*/
int main(void); 


/*Forward declaration of variables.*/
static int i=0; 

/*main function*/
int main(void){

	/*GPIO Pins*/
	DDRA = 0x00;
	DDRC = 0xF0;
	/*External interrupt settings*/
	PORTD = (1 << PD1);
	EICRA =	(1 << ISC11) | (0 << ISC10);
	EIMSK = (1 << INT1);
	/*Initialize function*/
	 
	PORTC = (0 << PC6);
	/*Enable FPGA Interupt trigger*/
	PORTC = (1 << PC5);
	PORTC = (0 << PC5);
	/*Initialize input update counter*/
	/*Enable interrupt*/
	//sei();
	
	blockInputUpdate(i);
	/*Pull up output pin*/
	/*Measure the execution time of the code block*/
	benchmarkBlock();
	/*Pull down output pin*/PORTC = (0 << PC4); 

	i++;
	
	PORTC = (1 << PC6);
	PORTC = (0 << PC6);
	
	/*while loop*/
	while(i<5){		

		if(!bit_is_clear(PINC,PC7)){
			blockInputUpdate(i);
			/*Pull up output pin*/
			/*Measure the execution time of the code block*/
			benchmarkBlock();
			/*Pull down output pin*/PORTC = (0 << PC4); 
			i++;
			
			PORTC = (1 << PC6);
			PORTC = (0 << PC6);
		}	
		
	}
	/*Return*/
	return(1);
}

/*Interrupt handler*/
