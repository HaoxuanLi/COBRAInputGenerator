
blockR87.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  00001070  00001104  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001070  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000e2  00800140  00800140  00001144  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001144  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000011e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001061  00000000  00000000  00001268  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ca4  00000000  00000000  000022c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000401  00000000  00000000  00002f6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001dc  00000000  00000000  00003370  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000701  00000000  00000000  0000354c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006df  00000000  00000000  00003c4d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  0000432c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
       2:	00 00       	nop
       4:	64 c0       	rjmp	.+200    	; 0xce <__bad_interrupt>
       6:	00 00       	nop
       8:	cc c3       	rjmp	.+1944   	; 0x7a2 <__vector_2>
       a:	00 00       	nop
       c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
       e:	00 00       	nop
      10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
      12:	00 00       	nop
      14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
      16:	00 00       	nop
      18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
      1a:	00 00       	nop
      1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
      1e:	00 00       	nop
      20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
      22:	00 00       	nop
      24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
      26:	00 00       	nop
      28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
      2a:	00 00       	nop
      2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
      2e:	00 00       	nop
      30:	4e c0       	rjmp	.+156    	; 0xce <__bad_interrupt>
      32:	00 00       	nop
      34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
      36:	00 00       	nop
      38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
      3a:	00 00       	nop
      3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
      3e:	00 00       	nop
      40:	46 c0       	rjmp	.+140    	; 0xce <__bad_interrupt>
      42:	00 00       	nop
      44:	44 c0       	rjmp	.+136    	; 0xce <__bad_interrupt>
      46:	00 00       	nop
      48:	42 c0       	rjmp	.+132    	; 0xce <__bad_interrupt>
      4a:	00 00       	nop
      4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
      4e:	00 00       	nop
      50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
      52:	00 00       	nop
      54:	3c c0       	rjmp	.+120    	; 0xce <__bad_interrupt>
      56:	00 00       	nop
      58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
      5a:	00 00       	nop
      5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
      5e:	00 00       	nop
      60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
      62:	00 00       	nop
      64:	34 c0       	rjmp	.+104    	; 0xce <__bad_interrupt>
      66:	00 00       	nop
      68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
      6a:	00 00       	nop
      6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
      6e:	00 00       	nop
      70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
      72:	00 00       	nop
      74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
      76:	00 00       	nop
      78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
      7a:	00 00       	nop
      7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
      7e:	00 00       	nop
      80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
      82:	00 00       	nop
      84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
      86:	00 00       	nop
      88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
      8a:	00 00       	nop
      8c:	20 c0       	rjmp	.+64     	; 0xce <__bad_interrupt>
      8e:	00 00       	nop
      90:	1e c0       	rjmp	.+60     	; 0xce <__bad_interrupt>
	...

00000094 <__ctors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d0 e1       	ldi	r29, 0x10	; 16
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	11 e0       	ldi	r17, 0x01	; 1
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	e0 e7       	ldi	r30, 0x70	; 112
      a8:	f0 e1       	ldi	r31, 0x10	; 16
      aa:	00 e0       	ldi	r16, 0x00	; 0
      ac:	0b bf       	out	0x3b, r16	; 59
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
      b0:	07 90       	elpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	a0 34       	cpi	r26, 0x40	; 64
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
      ba:	22 e0       	ldi	r18, 0x02	; 2
      bc:	a0 e4       	ldi	r26, 0x40	; 64
      be:	b1 e0       	ldi	r27, 0x01	; 1
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	a2 32       	cpi	r26, 0x22	; 34
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	09 d3       	rcall	.+1554   	; 0x6de <main>
      cc:	cf c7       	rjmp	.+3998   	; 0x106c <_exit>

000000ce <__bad_interrupt>:
      ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <iir_init>:
/*
  Initialization- and return-value-related functions
*/

void iir_init( void )
{
      d0:	cf 93       	push	r28
      d2:	df 93       	push	r29
      d4:	1f 92       	push	r1
      d6:	cd b7       	in	r28, 0x3d	; 61
      d8:	de b7       	in	r29, 0x3e	; 62
  int f;
  unsigned int i;
  unsigned char *p;
  volatile char bitmask = 0;
      da:	19 82       	std	Y+1, r1	; 0x01


  _Pragma( "loopbound min 20 max 20" )
  for ( f = 0 ; f < 5 * 4; f++ )
      dc:	80 e0       	ldi	r24, 0x00	; 0
      de:	90 e0       	ldi	r25, 0x00	; 0
    iir_coefficients[ f ] = 7;
      e0:	40 e0       	ldi	r20, 0x00	; 0
      e2:	50 e0       	ldi	r21, 0x00	; 0
      e4:	60 ee       	ldi	r22, 0xE0	; 224
      e6:	70 e4       	ldi	r23, 0x40	; 64
      e8:	fc 01       	movw	r30, r24
      ea:	ee 0f       	add	r30, r30
      ec:	ff 1f       	adc	r31, r31
      ee:	ee 0f       	add	r30, r30
      f0:	ff 1f       	adc	r31, r31
      f2:	ee 5b       	subi	r30, 0xBE	; 190
      f4:	fe 4f       	sbci	r31, 0xFE	; 254
      f6:	40 83       	st	Z, r20
      f8:	51 83       	std	Z+1, r21	; 0x01
      fa:	62 83       	std	Z+2, r22	; 0x02
      fc:	73 83       	std	Z+3, r23	; 0x03
  unsigned char *p;
  volatile char bitmask = 0;


  _Pragma( "loopbound min 20 max 20" )
  for ( f = 0 ; f < 5 * 4; f++ )
      fe:	01 96       	adiw	r24, 0x01	; 1
     100:	84 31       	cpi	r24, 0x14	; 20
     102:	91 05       	cpc	r25, r1
     104:	89 f7       	brne	.-30     	; 0xe8 <iir_init+0x18>
    iir_coefficients[ f ] = 7;

  _Pragma( "loopbound min 8 max 8" )
	asm(
     106:	00 92 ba 01 	sts	0x01BA, r0	; 0x8001ba <register_address_org>
     10a:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <register_address_org+0x1>
     10e:	20 92 bc 01 	sts	0x01BC, r2	; 0x8001bc <register_address_org+0x2>
     112:	30 92 bd 01 	sts	0x01BD, r3	; 0x8001bd <register_address_org+0x3>
     116:	40 92 be 01 	sts	0x01BE, r4	; 0x8001be <register_address_org+0x4>
     11a:	50 92 bf 01 	sts	0x01BF, r5	; 0x8001bf <register_address_org+0x5>
     11e:	60 92 c0 01 	sts	0x01C0, r6	; 0x8001c0 <register_address_org+0x6>
     122:	70 92 c1 01 	sts	0x01C1, r7	; 0x8001c1 <register_address_org+0x7>
     126:	80 92 c2 01 	sts	0x01C2, r8	; 0x8001c2 <register_address_org+0x8>
     12a:	90 92 c3 01 	sts	0x01C3, r9	; 0x8001c3 <register_address_org+0x9>
     12e:	a0 92 c4 01 	sts	0x01C4, r10	; 0x8001c4 <register_address_org+0xa>
     132:	b0 92 c5 01 	sts	0x01C5, r11	; 0x8001c5 <register_address_org+0xb>
     136:	c0 92 c6 01 	sts	0x01C6, r12	; 0x8001c6 <register_address_org+0xc>
     13a:	d0 92 c7 01 	sts	0x01C7, r13	; 0x8001c7 <register_address_org+0xd>
     13e:	e0 92 c8 01 	sts	0x01C8, r14	; 0x8001c8 <register_address_org+0xe>
     142:	f0 92 c9 01 	sts	0x01C9, r15	; 0x8001c9 <register_address_org+0xf>
     146:	00 93 ca 01 	sts	0x01CA, r16	; 0x8001ca <register_address_org+0x10>
     14a:	10 93 cb 01 	sts	0x01CB, r17	; 0x8001cb <register_address_org+0x11>
     14e:	20 93 cc 01 	sts	0x01CC, r18	; 0x8001cc <register_address_org+0x12>
     152:	30 93 cd 01 	sts	0x01CD, r19	; 0x8001cd <register_address_org+0x13>
     156:	40 93 ce 01 	sts	0x01CE, r20	; 0x8001ce <register_address_org+0x14>
     15a:	50 93 cf 01 	sts	0x01CF, r21	; 0x8001cf <register_address_org+0x15>
     15e:	60 93 d0 01 	sts	0x01D0, r22	; 0x8001d0 <register_address_org+0x16>
     162:	70 93 d1 01 	sts	0x01D1, r23	; 0x8001d1 <register_address_org+0x17>
     166:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <register_address_org+0x18>
     16a:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <register_address_org+0x19>
     16e:	a0 93 d4 01 	sts	0x01D4, r26	; 0x8001d4 <register_address_org+0x1a>
     172:	b0 93 d5 01 	sts	0x01D5, r27	; 0x8001d5 <register_address_org+0x1b>
     176:	c0 93 d6 01 	sts	0x01D6, r28	; 0x8001d6 <register_address_org+0x1c>
     17a:	d0 93 d7 01 	sts	0x01D7, r29	; 0x8001d7 <register_address_org+0x1d>
     17e:	e0 93 d8 01 	sts	0x01D8, r30	; 0x8001d8 <register_address_org+0x1e>
     182:	f0 93 d9 01 	sts	0x01D9, r31	; 0x8001d9 <register_address_org+0x1f>
     186:	ed b6       	in	r14, 0x3d	; 61
     188:	fe b6       	in	r15, 0x3e	; 62
     18a:	e0 92 e7 01 	sts	0x01E7, r14	; 0x8001e7 <stackpointer_address_org>
     18e:	f0 92 e8 01 	sts	0x01E8, r15	; 0x8001e8 <stackpointer_address_org+0x1>
     192:	80 e0       	ldi	r24, 0x00	; 0
     194:	90 e0       	ldi	r25, 0x00	; 0
     196:	a0 91 e7 01 	lds	r26, 0x01E7	; 0x8001e7 <stackpointer_address_org>
     19a:	b0 91 e8 01 	lds	r27, 0x01E8	; 0x8001e8 <stackpointer_address_org+0x1>
     19e:	ee ed       	ldi	r30, 0xDE	; 222
     1a0:	f1 e0       	ldi	r31, 0x01	; 1
     1a2:	ed 90       	ld	r14, X+
     1a4:	e1 92       	st	Z+, r14
     1a6:	01 96       	adiw	r24, 0x01	; 1
     1a8:	89 30       	cpi	r24, 0x09	; 9
     1aa:	d9 f7       	brne	.-10     	; 0x1a2 <iir_init+0xd2>
     1ac:	e0 90 c8 01 	lds	r14, 0x01C8	; 0x8001c8 <register_address_org+0xe>
     1b0:	f0 90 c9 01 	lds	r15, 0x01C9	; 0x8001c9 <register_address_org+0xf>
     1b4:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <register_address_org+0x18>
     1b8:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <register_address_org+0x19>
     1bc:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <register_address_org+0x1a>
     1c0:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <register_address_org+0x1b>
     1c4:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <register_address_org+0x1e>
     1c8:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <register_address_org+0x1f>

000001cc <Tic_flag>:
	"lds	r27, 0x1d5\n\t"
	"lds	r30, 0x1d8\n\t"
	"lds	r31, 0x1d9\n\t"
	);
	asm("Tic_flag:");
  for ( f = 0 ; f < 2 * 4; f++ )
     1cc:	80 e0       	ldi	r24, 0x00	; 0
     1ce:	90 e0       	ldi	r25, 0x00	; 0
    iir_wi[ f ] = 0;
     1d0:	fc 01       	movw	r30, r24
     1d2:	ee 0f       	add	r30, r30
     1d4:	ff 1f       	adc	r31, r31
     1d6:	ee 0f       	add	r30, r30
     1d8:	ff 1f       	adc	r31, r31
     1da:	ea 56       	subi	r30, 0x6A	; 106
     1dc:	fe 4f       	sbci	r31, 0xFE	; 254
     1de:	10 82       	st	Z, r1
     1e0:	11 82       	std	Z+1, r1	; 0x01
     1e2:	12 82       	std	Z+2, r1	; 0x02
     1e4:	13 82       	std	Z+3, r1	; 0x03
	"lds	r27, 0x1d5\n\t"
	"lds	r30, 0x1d8\n\t"
	"lds	r31, 0x1d9\n\t"
	);
	asm("Tic_flag:");
  for ( f = 0 ; f < 2 * 4; f++ )
     1e6:	01 96       	adiw	r24, 0x01	; 1
     1e8:	88 30       	cpi	r24, 0x08	; 8
     1ea:	91 05       	cpc	r25, r1
     1ec:	89 f7       	brne	.-30     	; 0x1d0 <Tic_flag+0x4>
    iir_wi[ f ] = 0;

  iir_x = ( float ) 1;
     1ee:	80 e0       	ldi	r24, 0x00	; 0
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	a0 e8       	ldi	r26, 0x80	; 128
     1f4:	bf e3       	ldi	r27, 0x3F	; 63
     1f6:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <iir_x>
     1fa:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <iir_x+0x1>
     1fe:	a0 93 94 01 	sts	0x0194, r26	; 0x800194 <iir_x+0x2>
     202:	b0 93 95 01 	sts	0x0195, r27	; 0x800195 <iir_x+0x3>

  /*
    Apply volatile XOR-bitmask to entire input array.
  */
  p = (unsigned char *) &iir_coefficients[ 0 ];
     206:	e2 e4       	ldi	r30, 0x42	; 66
     208:	f1 e0       	ldi	r31, 0x01	; 1
  _Pragma( "loopbound min 80 max 80" )
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
    *p ^= bitmask + *p;
     20a:	99 81       	ldd	r25, Y+1	; 0x01
     20c:	80 81       	ld	r24, Z
     20e:	98 0f       	add	r25, r24
     210:	89 27       	eor	r24, r25
     212:	81 93       	st	Z+, r24
  /*
    Apply volatile XOR-bitmask to entire input array.
  */
  p = (unsigned char *) &iir_coefficients[ 0 ];
  _Pragma( "loopbound min 80 max 80" )
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
     214:	81 e0       	ldi	r24, 0x01	; 1
     216:	e2 39       	cpi	r30, 0x92	; 146
     218:	f8 07       	cpc	r31, r24
     21a:	b9 f7       	brne	.-18     	; 0x20a <Tic_flag+0x3e>
     21c:	e6 e9       	ldi	r30, 0x96	; 150
     21e:	f1 e0       	ldi	r31, 0x01	; 1
    *p ^= bitmask + *p;

  p = (unsigned char *) &iir_wi[ 0 ];
  _Pragma( "loopbound min 32 max 32" )
  for ( i = 0; i < sizeof( iir_wi ); ++i, ++p )
    *p ^= bitmask;
     220:	89 81       	ldd	r24, Y+1	; 0x01
     222:	90 81       	ld	r25, Z
     224:	89 27       	eor	r24, r25
     226:	81 93       	st	Z+, r24
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
    *p ^= bitmask + *p;

  p = (unsigned char *) &iir_wi[ 0 ];
  _Pragma( "loopbound min 32 max 32" )
  for ( i = 0; i < sizeof( iir_wi ); ++i, ++p )
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	e6 3b       	cpi	r30, 0xB6	; 182
     22c:	f8 07       	cpc	r31, r24
     22e:	c1 f7       	brne	.-16     	; 0x220 <Tic_flag+0x54>
    *p ^= bitmask;
}
     230:	0f 90       	pop	r0
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	08 95       	ret

00000238 <iir_return>:


int iir_return( void )
{
     238:	cf 93       	push	r28
     23a:	df 93       	push	r29
  float checksum = 0.0;
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     23c:	c0 e0       	ldi	r28, 0x00	; 0
     23e:	d0 e0       	ldi	r29, 0x00	; 0
}


int iir_return( void )
{
  float checksum = 0.0;
     240:	60 e0       	ldi	r22, 0x00	; 0
     242:	70 e0       	ldi	r23, 0x00	; 0
     244:	cb 01       	movw	r24, r22
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
    checksum += iir_wi[ f ];
     246:	fe 01       	movw	r30, r28
     248:	ee 0f       	add	r30, r30
     24a:	ff 1f       	adc	r31, r31
     24c:	ee 0f       	add	r30, r30
     24e:	ff 1f       	adc	r31, r31
     250:	ea 56       	subi	r30, 0x6A	; 106
     252:	fe 4f       	sbci	r31, 0xFE	; 254
     254:	20 81       	ld	r18, Z
     256:	31 81       	ldd	r19, Z+1	; 0x01
     258:	42 81       	ldd	r20, Z+2	; 0x02
     25a:	53 81       	ldd	r21, Z+3	; 0x03
     25c:	15 d3       	rcall	.+1578   	; 0x888 <__addsf3>
  float checksum = 0.0;
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     25e:	21 96       	adiw	r28, 0x01	; 1
     260:	c8 30       	cpi	r28, 0x08	; 8
     262:	d1 05       	cpc	r29, r1
     264:	81 f7       	brne	.-32     	; 0x246 <iir_return+0xe>
    checksum += iir_wi[ f ];

  return( (int) checksum );
     266:	74 d3       	rcall	.+1768   	; 0x950 <__fixsfsi>
}
     268:	cb 01       	movw	r24, r22
     26a:	df 91       	pop	r29
     26c:	cf 91       	pop	r28
     26e:	08 95       	ret

00000270 <iir_main>:
/*
  Main functions
*/

void _Pragma( "entrypoint" ) iir_main( void )
{
     270:	4f 92       	push	r4
     272:	5f 92       	push	r5
     274:	6f 92       	push	r6
     276:	7f 92       	push	r7
     278:	af 92       	push	r10
     27a:	bf 92       	push	r11
     27c:	cf 92       	push	r12
     27e:	df 92       	push	r13
     280:	ef 92       	push	r14
     282:	ff 92       	push	r15
     284:	0f 93       	push	r16
     286:	1f 93       	push	r17
     288:	cf 93       	push	r28
     28a:	df 93       	push	r29

  ptr_coeff = &iir_coefficients[ 0 ];
  ptr_wi1 = &iir_wi[ 0 ];
  ptr_wi2 = &iir_wi[ 1 ];

  y = iir_x ;
     28c:	40 90 92 01 	lds	r4, 0x0192	; 0x800192 <iir_x>
     290:	50 90 93 01 	lds	r5, 0x0193	; 0x800193 <iir_x+0x1>
     294:	60 90 94 01 	lds	r6, 0x0194	; 0x800194 <iir_x+0x2>
     298:	70 90 95 01 	lds	r7, 0x0195	; 0x800195 <iir_x+0x3>
  register volatile float *ptr_coeff, *ptr_wi1, *ptr_wi2;
  register float y;


  ptr_coeff = &iir_coefficients[ 0 ];
  ptr_wi1 = &iir_wi[ 0 ];
     29c:	c6 e9       	ldi	r28, 0x96	; 150
     29e:	d1 e0       	ldi	r29, 0x01	; 1
  int f;
  register volatile float *ptr_coeff, *ptr_wi1, *ptr_wi2;
  register float y;


  ptr_coeff = &iir_coefficients[ 0 ];
     2a0:	02 e4       	ldi	r16, 0x42	; 66
     2a2:	11 e0       	ldi	r17, 0x01	; 1

  y = iir_x ;

  _Pragma( "loopbound min 4 max 4" )
  for ( f = 0 ; f < 4 ; f++ ) {
    w = y - *ptr_coeff++ * *ptr_wi1;
     2a4:	f8 01       	movw	r30, r16
     2a6:	60 81       	ld	r22, Z
     2a8:	71 81       	ldd	r23, Z+1	; 0x01
     2aa:	82 81       	ldd	r24, Z+2	; 0x02
     2ac:	93 81       	ldd	r25, Z+3	; 0x03
     2ae:	28 81       	ld	r18, Y
     2b0:	39 81       	ldd	r19, Y+1	; 0x01
     2b2:	4a 81       	ldd	r20, Y+2	; 0x02
     2b4:	5b 81       	ldd	r21, Y+3	; 0x03
     2b6:	ce d3       	rcall	.+1948   	; 0xa54 <__mulsf3>
     2b8:	9b 01       	movw	r18, r22
     2ba:	ac 01       	movw	r20, r24
     2bc:	c3 01       	movw	r24, r6
     2be:	b2 01       	movw	r22, r4
     2c0:	e2 d2       	rcall	.+1476   	; 0x886 <__subsf3>
     2c2:	6b 01       	movw	r12, r22
     2c4:	7c 01       	movw	r14, r24
    w -= *ptr_coeff++ * *ptr_wi2;
     2c6:	f8 01       	movw	r30, r16
     2c8:	64 81       	ldd	r22, Z+4	; 0x04
     2ca:	75 81       	ldd	r23, Z+5	; 0x05
     2cc:	86 81       	ldd	r24, Z+6	; 0x06
     2ce:	97 81       	ldd	r25, Z+7	; 0x07
     2d0:	2c 81       	ldd	r18, Y+4	; 0x04
     2d2:	3d 81       	ldd	r19, Y+5	; 0x05
     2d4:	4e 81       	ldd	r20, Y+6	; 0x06
     2d6:	5f 81       	ldd	r21, Y+7	; 0x07
     2d8:	bd d3       	rcall	.+1914   	; 0xa54 <__mulsf3>
     2da:	9b 01       	movw	r18, r22
     2dc:	ac 01       	movw	r20, r24
     2de:	c7 01       	movw	r24, r14
     2e0:	b6 01       	movw	r22, r12
     2e2:	d1 d2       	rcall	.+1442   	; 0x886 <__subsf3>
     2e4:	6b 01       	movw	r12, r22
     2e6:	7c 01       	movw	r14, r24

    y = *ptr_coeff++ * w;
     2e8:	f8 01       	movw	r30, r16
     2ea:	60 85       	ldd	r22, Z+8	; 0x08
     2ec:	71 85       	ldd	r23, Z+9	; 0x09
     2ee:	82 85       	ldd	r24, Z+10	; 0x0a
     2f0:	93 85       	ldd	r25, Z+11	; 0x0b
     2f2:	a7 01       	movw	r20, r14
     2f4:	96 01       	movw	r18, r12
     2f6:	ae d3       	rcall	.+1884   	; 0xa54 <__mulsf3>
     2f8:	2b 01       	movw	r4, r22
     2fa:	3c 01       	movw	r6, r24
    y += *ptr_coeff++ * *ptr_wi1;
     2fc:	f8 01       	movw	r30, r16
     2fe:	64 85       	ldd	r22, Z+12	; 0x0c
     300:	75 85       	ldd	r23, Z+13	; 0x0d
     302:	86 85       	ldd	r24, Z+14	; 0x0e
     304:	97 85       	ldd	r25, Z+15	; 0x0f
     306:	28 81       	ld	r18, Y
     308:	39 81       	ldd	r19, Y+1	; 0x01
     30a:	4a 81       	ldd	r20, Y+2	; 0x02
     30c:	5b 81       	ldd	r21, Y+3	; 0x03
     30e:	a2 d3       	rcall	.+1860   	; 0xa54 <__mulsf3>
     310:	a3 01       	movw	r20, r6
     312:	92 01       	movw	r18, r4
     314:	b9 d2       	rcall	.+1394   	; 0x888 <__addsf3>
     316:	2b 01       	movw	r4, r22
     318:	3c 01       	movw	r6, r24
     31a:	58 01       	movw	r10, r16
     31c:	f4 e1       	ldi	r31, 0x14	; 20
     31e:	af 0e       	add	r10, r31
     320:	b1 1c       	adc	r11, r1
    y += *ptr_coeff++ * *ptr_wi2;
     322:	f8 01       	movw	r30, r16
     324:	60 89       	ldd	r22, Z+16	; 0x10
     326:	71 89       	ldd	r23, Z+17	; 0x11
     328:	82 89       	ldd	r24, Z+18	; 0x12
     32a:	93 89       	ldd	r25, Z+19	; 0x13
     32c:	2c 81       	ldd	r18, Y+4	; 0x04
     32e:	3d 81       	ldd	r19, Y+5	; 0x05
     330:	4e 81       	ldd	r20, Y+6	; 0x06
     332:	5f 81       	ldd	r21, Y+7	; 0x07
     334:	8f d3       	rcall	.+1822   	; 0xa54 <__mulsf3>
     336:	a3 01       	movw	r20, r6
     338:	92 01       	movw	r18, r4
     33a:	a6 d2       	rcall	.+1356   	; 0x888 <__addsf3>
     33c:	2b 01       	movw	r4, r22
     33e:	3c 01       	movw	r6, r24

    *ptr_wi2++ = *ptr_wi1;
     340:	88 81       	ld	r24, Y
     342:	99 81       	ldd	r25, Y+1	; 0x01
     344:	aa 81       	ldd	r26, Y+2	; 0x02
     346:	bb 81       	ldd	r27, Y+3	; 0x03
     348:	8c 83       	std	Y+4, r24	; 0x04
     34a:	9d 83       	std	Y+5, r25	; 0x05
     34c:	ae 83       	std	Y+6, r26	; 0x06
     34e:	bf 83       	std	Y+7, r27	; 0x07
    *ptr_wi1++ = w;
     350:	c8 82       	st	Y, r12
     352:	d9 82       	std	Y+1, r13	; 0x01
     354:	ea 82       	std	Y+2, r14	; 0x02
     356:	fb 82       	std	Y+3, r15	; 0x03
     358:	28 96       	adiw	r28, 0x08	; 8
    w = y - *ptr_coeff++ * *ptr_wi1;
    w -= *ptr_coeff++ * *ptr_wi2;

    y = *ptr_coeff++ * w;
    y += *ptr_coeff++ * *ptr_wi1;
    y += *ptr_coeff++ * *ptr_wi2;
     35a:	85 01       	movw	r16, r10
  ptr_wi2 = &iir_wi[ 1 ];

  y = iir_x ;

  _Pragma( "loopbound min 4 max 4" )
  for ( f = 0 ; f < 4 ; f++ ) {
     35c:	f1 e0       	ldi	r31, 0x01	; 1
     35e:	02 39       	cpi	r16, 0x92	; 146
     360:	1f 07       	cpc	r17, r31
     362:	09 f0       	breq	.+2      	; 0x366 <iir_main+0xf6>
     364:	9f cf       	rjmp	.-194    	; 0x2a4 <iir_main+0x34>
    *ptr_wi1++ = w;

    ptr_wi2++;
    ptr_wi1++;
  }
}
     366:	df 91       	pop	r29
     368:	cf 91       	pop	r28
     36a:	1f 91       	pop	r17
     36c:	0f 91       	pop	r16
     36e:	ff 90       	pop	r15
     370:	ef 90       	pop	r14
     372:	df 90       	pop	r13
     374:	cf 90       	pop	r12
     376:	bf 90       	pop	r11
     378:	af 90       	pop	r10
     37a:	7f 90       	pop	r7
     37c:	6f 90       	pop	r6
     37e:	5f 90       	pop	r5
     380:	4f 90       	pop	r4
     382:	08 95       	ret

00000384 <blockInputUpdate>:
int f_block;
 

void blockInputUpdate(int blockInputUpdate_i) 
{
	f_block = f_inputs[blockInputUpdate_i];
     384:	88 0f       	add	r24, r24
     386:	99 1f       	adc	r25, r25
     388:	fc 01       	movw	r30, r24
     38a:	e0 50       	subi	r30, 0x00	; 0
     38c:	ff 4f       	sbci	r31, 0xFF	; 255
     38e:	80 81       	ld	r24, Z
     390:	91 81       	ldd	r25, Z+1	; 0x01
     392:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <f_block+0x1>
     396:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <f_block>
	 
	asm(
     39a:	00 92 e9 01 	sts	0x01E9, r0	; 0x8001e9 <register_address_block>
     39e:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <register_address_block+0x1>
     3a2:	20 92 eb 01 	sts	0x01EB, r2	; 0x8001eb <register_address_block+0x2>
     3a6:	30 92 ec 01 	sts	0x01EC, r3	; 0x8001ec <register_address_block+0x3>
     3aa:	40 92 ed 01 	sts	0x01ED, r4	; 0x8001ed <register_address_block+0x4>
     3ae:	50 92 ee 01 	sts	0x01EE, r5	; 0x8001ee <register_address_block+0x5>
     3b2:	60 92 ef 01 	sts	0x01EF, r6	; 0x8001ef <register_address_block+0x6>
     3b6:	70 92 f0 01 	sts	0x01F0, r7	; 0x8001f0 <register_address_block+0x7>
     3ba:	80 92 f1 01 	sts	0x01F1, r8	; 0x8001f1 <register_address_block+0x8>
     3be:	90 92 f2 01 	sts	0x01F2, r9	; 0x8001f2 <register_address_block+0x9>
     3c2:	a0 92 f3 01 	sts	0x01F3, r10	; 0x8001f3 <register_address_block+0xa>
     3c6:	b0 92 f4 01 	sts	0x01F4, r11	; 0x8001f4 <register_address_block+0xb>
     3ca:	c0 92 f5 01 	sts	0x01F5, r12	; 0x8001f5 <register_address_block+0xc>
     3ce:	d0 92 f6 01 	sts	0x01F6, r13	; 0x8001f6 <register_address_block+0xd>
     3d2:	e0 92 f7 01 	sts	0x01F7, r14	; 0x8001f7 <register_address_block+0xe>
     3d6:	f0 92 f8 01 	sts	0x01F8, r15	; 0x8001f8 <register_address_block+0xf>
     3da:	00 93 f9 01 	sts	0x01F9, r16	; 0x8001f9 <register_address_block+0x10>
     3de:	10 93 fa 01 	sts	0x01FA, r17	; 0x8001fa <register_address_block+0x11>
     3e2:	20 93 fb 01 	sts	0x01FB, r18	; 0x8001fb <register_address_block+0x12>
     3e6:	30 93 fc 01 	sts	0x01FC, r19	; 0x8001fc <register_address_block+0x13>
     3ea:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <register_address_block+0x14>
     3ee:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <register_address_block+0x15>
     3f2:	60 93 ff 01 	sts	0x01FF, r22	; 0x8001ff <register_address_block+0x16>
     3f6:	70 93 00 02 	sts	0x0200, r23	; 0x800200 <register_address_block+0x17>
     3fa:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <register_address_block+0x18>
     3fe:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <register_address_block+0x19>
     402:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <register_address_block+0x1a>
     406:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <register_address_block+0x1b>
     40a:	c0 93 05 02 	sts	0x0205, r28	; 0x800205 <register_address_block+0x1c>
     40e:	d0 93 06 02 	sts	0x0206, r29	; 0x800206 <register_address_block+0x1d>
     412:	e0 93 07 02 	sts	0x0207, r30	; 0x800207 <register_address_block+0x1e>
     416:	f0 93 08 02 	sts	0x0208, r31	; 0x800208 <register_address_block+0x1f>
     41a:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <f_block>
     41e:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <register_address_org+0x19>
     422:	80 91 b7 01 	lds	r24, 0x01B7	; 0x8001b7 <f_block+0x1>
     426:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <register_address_org+0x18>
     42a:	00 90 e9 01 	lds	r0, 0x01E9	; 0x8001e9 <register_address_block>
     42e:	10 90 ea 01 	lds	r1, 0x01EA	; 0x8001ea <register_address_block+0x1>
     432:	20 90 eb 01 	lds	r2, 0x01EB	; 0x8001eb <register_address_block+0x2>
     436:	30 90 ec 01 	lds	r3, 0x01EC	; 0x8001ec <register_address_block+0x3>
     43a:	40 90 ed 01 	lds	r4, 0x01ED	; 0x8001ed <register_address_block+0x4>
     43e:	50 90 ee 01 	lds	r5, 0x01EE	; 0x8001ee <register_address_block+0x5>
     442:	60 90 ef 01 	lds	r6, 0x01EF	; 0x8001ef <register_address_block+0x6>
     446:	70 90 f0 01 	lds	r7, 0x01F0	; 0x8001f0 <register_address_block+0x7>
     44a:	80 90 f1 01 	lds	r8, 0x01F1	; 0x8001f1 <register_address_block+0x8>
     44e:	90 90 f2 01 	lds	r9, 0x01F2	; 0x8001f2 <register_address_block+0x9>
     452:	a0 90 f3 01 	lds	r10, 0x01F3	; 0x8001f3 <register_address_block+0xa>
     456:	b0 90 f4 01 	lds	r11, 0x01F4	; 0x8001f4 <register_address_block+0xb>
     45a:	c0 90 f5 01 	lds	r12, 0x01F5	; 0x8001f5 <register_address_block+0xc>
     45e:	d0 90 f6 01 	lds	r13, 0x01F6	; 0x8001f6 <register_address_block+0xd>
     462:	e0 90 f7 01 	lds	r14, 0x01F7	; 0x8001f7 <register_address_block+0xe>
     466:	f0 90 f8 01 	lds	r15, 0x01F8	; 0x8001f8 <register_address_block+0xf>
     46a:	00 91 f9 01 	lds	r16, 0x01F9	; 0x8001f9 <register_address_block+0x10>
     46e:	10 91 fa 01 	lds	r17, 0x01FA	; 0x8001fa <register_address_block+0x11>
     472:	20 91 fb 01 	lds	r18, 0x01FB	; 0x8001fb <register_address_block+0x12>
     476:	30 91 fc 01 	lds	r19, 0x01FC	; 0x8001fc <register_address_block+0x13>
     47a:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <register_address_block+0x14>
     47e:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <register_address_block+0x15>
     482:	60 91 ff 01 	lds	r22, 0x01FF	; 0x8001ff <register_address_block+0x16>
     486:	70 91 00 02 	lds	r23, 0x0200	; 0x800200 <register_address_block+0x17>
     48a:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <register_address_block+0x18>
     48e:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <register_address_block+0x19>
     492:	a0 91 03 02 	lds	r26, 0x0203	; 0x800203 <register_address_block+0x1a>
     496:	b0 91 04 02 	lds	r27, 0x0204	; 0x800204 <register_address_block+0x1b>
     49a:	c0 91 05 02 	lds	r28, 0x0205	; 0x800205 <register_address_block+0x1c>
     49e:	d0 91 06 02 	lds	r29, 0x0206	; 0x800206 <register_address_block+0x1d>
     4a2:	e0 91 07 02 	lds	r30, 0x0207	; 0x800207 <register_address_block+0x1e>
     4a6:	f0 91 08 02 	lds	r31, 0x0208	; 0x800208 <register_address_block+0x1f>
     4aa:	08 95       	ret

000004ac <benchmarkBlock>:
} 
 
/*BLock execution time measurement*/
void benchmarkBlock(void)
{
	asm(
     4ac:	00 92 e9 01 	sts	0x01E9, r0	; 0x8001e9 <register_address_block>
     4b0:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <register_address_block+0x1>
     4b4:	20 92 eb 01 	sts	0x01EB, r2	; 0x8001eb <register_address_block+0x2>
     4b8:	30 92 ec 01 	sts	0x01EC, r3	; 0x8001ec <register_address_block+0x3>
     4bc:	40 92 ed 01 	sts	0x01ED, r4	; 0x8001ed <register_address_block+0x4>
     4c0:	50 92 ee 01 	sts	0x01EE, r5	; 0x8001ee <register_address_block+0x5>
     4c4:	60 92 ef 01 	sts	0x01EF, r6	; 0x8001ef <register_address_block+0x6>
     4c8:	70 92 f0 01 	sts	0x01F0, r7	; 0x8001f0 <register_address_block+0x7>
     4cc:	80 92 f1 01 	sts	0x01F1, r8	; 0x8001f1 <register_address_block+0x8>
     4d0:	90 92 f2 01 	sts	0x01F2, r9	; 0x8001f2 <register_address_block+0x9>
     4d4:	a0 92 f3 01 	sts	0x01F3, r10	; 0x8001f3 <register_address_block+0xa>
     4d8:	b0 92 f4 01 	sts	0x01F4, r11	; 0x8001f4 <register_address_block+0xb>
     4dc:	c0 92 f5 01 	sts	0x01F5, r12	; 0x8001f5 <register_address_block+0xc>
     4e0:	d0 92 f6 01 	sts	0x01F6, r13	; 0x8001f6 <register_address_block+0xd>
     4e4:	e0 92 f7 01 	sts	0x01F7, r14	; 0x8001f7 <register_address_block+0xe>
     4e8:	f0 92 f8 01 	sts	0x01F8, r15	; 0x8001f8 <register_address_block+0xf>
     4ec:	00 93 f9 01 	sts	0x01F9, r16	; 0x8001f9 <register_address_block+0x10>
     4f0:	10 93 fa 01 	sts	0x01FA, r17	; 0x8001fa <register_address_block+0x11>
     4f4:	20 93 fb 01 	sts	0x01FB, r18	; 0x8001fb <register_address_block+0x12>
     4f8:	30 93 fc 01 	sts	0x01FC, r19	; 0x8001fc <register_address_block+0x13>
     4fc:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <register_address_block+0x14>
     500:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <register_address_block+0x15>
     504:	60 93 ff 01 	sts	0x01FF, r22	; 0x8001ff <register_address_block+0x16>
     508:	70 93 00 02 	sts	0x0200, r23	; 0x800200 <register_address_block+0x17>
     50c:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <register_address_block+0x18>
     510:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <register_address_block+0x19>
     514:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <register_address_block+0x1a>
     518:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <register_address_block+0x1b>
     51c:	c0 93 05 02 	sts	0x0205, r28	; 0x800205 <register_address_block+0x1c>
     520:	d0 93 06 02 	sts	0x0206, r29	; 0x800206 <register_address_block+0x1d>
     524:	e0 93 07 02 	sts	0x0207, r30	; 0x800207 <register_address_block+0x1e>
     528:	f0 93 08 02 	sts	0x0208, r31	; 0x800208 <register_address_block+0x1f>
     52c:	ed b6       	in	r14, 0x3d	; 61
     52e:	fe b6       	in	r15, 0x3e	; 62
     530:	e0 92 dc 01 	sts	0x01DC, r14	; 0x8001dc <stackpointer_address_block>
     534:	f0 92 dd 01 	sts	0x01DD, r15	; 0x8001dd <stackpointer_address_block+0x1>
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	a0 91 dc 01 	lds	r26, 0x01DC	; 0x8001dc <stackpointer_address_block>
     540:	b0 91 dd 01 	lds	r27, 0x01DD	; 0x8001dd <stackpointer_address_block+0x1>
     544:	e9 e0       	ldi	r30, 0x09	; 9
     546:	f2 e0       	ldi	r31, 0x02	; 2
     548:	ed 90       	ld	r14, X+
     54a:	e1 92       	st	Z+, r14
     54c:	01 96       	adiw	r24, 0x01	; 1
     54e:	85 32       	cpi	r24, 0x25	; 37
     550:	d9 f7       	brne	.-10     	; 0x548 <benchmarkBlock+0x9c>
     552:	80 e0       	ldi	r24, 0x00	; 0
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	a0 91 e7 01 	lds	r26, 0x01E7	; 0x8001e7 <stackpointer_address_org>
     55a:	b0 91 e8 01 	lds	r27, 0x01E8	; 0x8001e8 <stackpointer_address_org+0x1>
     55e:	ee ed       	ldi	r30, 0xDE	; 222
     560:	f1 e0       	ldi	r31, 0x01	; 1
     562:	e1 90       	ld	r14, Z+
     564:	ed 92       	st	X+, r14
     566:	01 96       	adiw	r24, 0x01	; 1
     568:	89 30       	cpi	r24, 0x09	; 9
     56a:	d9 f7       	brne	.-10     	; 0x562 <benchmarkBlock+0xb6>
     56c:	00 90 ba 01 	lds	r0, 0x01BA	; 0x8001ba <register_address_org>
     570:	10 90 bb 01 	lds	r1, 0x01BB	; 0x8001bb <register_address_org+0x1>
     574:	20 90 bc 01 	lds	r2, 0x01BC	; 0x8001bc <register_address_org+0x2>
     578:	30 90 bd 01 	lds	r3, 0x01BD	; 0x8001bd <register_address_org+0x3>
     57c:	40 90 be 01 	lds	r4, 0x01BE	; 0x8001be <register_address_org+0x4>
     580:	50 90 bf 01 	lds	r5, 0x01BF	; 0x8001bf <register_address_org+0x5>
     584:	60 90 c0 01 	lds	r6, 0x01C0	; 0x8001c0 <register_address_org+0x6>
     588:	70 90 c1 01 	lds	r7, 0x01C1	; 0x8001c1 <register_address_org+0x7>
     58c:	80 90 c2 01 	lds	r8, 0x01C2	; 0x8001c2 <register_address_org+0x8>
     590:	90 90 c3 01 	lds	r9, 0x01C3	; 0x8001c3 <register_address_org+0x9>
     594:	a0 90 c4 01 	lds	r10, 0x01C4	; 0x8001c4 <register_address_org+0xa>
     598:	b0 90 c5 01 	lds	r11, 0x01C5	; 0x8001c5 <register_address_org+0xb>
     59c:	c0 90 c6 01 	lds	r12, 0x01C6	; 0x8001c6 <register_address_org+0xc>
     5a0:	d0 90 c7 01 	lds	r13, 0x01C7	; 0x8001c7 <register_address_org+0xd>
     5a4:	e0 90 c8 01 	lds	r14, 0x01C8	; 0x8001c8 <register_address_org+0xe>
     5a8:	f0 90 c9 01 	lds	r15, 0x01C9	; 0x8001c9 <register_address_org+0xf>
     5ac:	00 91 ca 01 	lds	r16, 0x01CA	; 0x8001ca <register_address_org+0x10>
     5b0:	10 91 cb 01 	lds	r17, 0x01CB	; 0x8001cb <register_address_org+0x11>
     5b4:	20 91 cc 01 	lds	r18, 0x01CC	; 0x8001cc <register_address_org+0x12>
     5b8:	30 91 cd 01 	lds	r19, 0x01CD	; 0x8001cd <register_address_org+0x13>
     5bc:	40 91 ce 01 	lds	r20, 0x01CE	; 0x8001ce <register_address_org+0x14>
     5c0:	50 91 cf 01 	lds	r21, 0x01CF	; 0x8001cf <register_address_org+0x15>
     5c4:	60 91 d0 01 	lds	r22, 0x01D0	; 0x8001d0 <register_address_org+0x16>
     5c8:	70 91 d1 01 	lds	r23, 0x01D1	; 0x8001d1 <register_address_org+0x17>
     5cc:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <register_address_org+0x18>
     5d0:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <register_address_org+0x19>
     5d4:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <register_address_org+0x1a>
     5d8:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <register_address_org+0x1b>
     5dc:	c0 91 d6 01 	lds	r28, 0x01D6	; 0x8001d6 <register_address_org+0x1c>
     5e0:	d0 91 d7 01 	lds	r29, 0x01D7	; 0x8001d7 <register_address_org+0x1d>
     5e4:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <register_address_org+0x1e>
     5e8:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <register_address_org+0x1f>
     5ec:	80 e1       	ldi	r24, 0x10	; 16
     5ee:	88 b9       	out	0x08, r24	; 8
     5f0:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <register_address_org+0x18>

000005f4 <BlockContent_Start>:
     5f4:	80 e0       	ldi	r24, 0x00	; 0
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	fc 01       	movw	r30, r24
     5fa:	ee 0f       	add	r30, r30
     5fc:	ff 1f       	adc	r31, r31
     5fe:	ee 0f       	add	r30, r30
     600:	ff 1f       	adc	r31, r31
     602:	ea 56       	subi	r30, 0x6A	; 106
     604:	fe 4f       	sbci	r31, 0xFE	; 254
     606:	10 82       	st	Z, r1
     608:	11 82       	std	Z+1, r1	; 0x01
     60a:	12 82       	std	Z+2, r1	; 0x02
     60c:	13 82       	std	Z+3, r1	; 0x03
     60e:	01 96       	adiw	r24, 0x01	; 1
     610:	88 30       	cpi	r24, 0x08	; 8
     612:	91 05       	cpc	r25, r1
     614:	89 f7       	brne	.-30     	; 0x5f8 <BlockContent_Start+0x4>

00000616 <BlockContent_End>:
     616:	18 b8       	out	0x08, r1	; 8
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	a0 91 dc 01 	lds	r26, 0x01DC	; 0x8001dc <stackpointer_address_block>
     620:	b0 91 dd 01 	lds	r27, 0x01DD	; 0x8001dd <stackpointer_address_block+0x1>
     624:	e9 e0       	ldi	r30, 0x09	; 9
     626:	f2 e0       	ldi	r31, 0x02	; 2
     628:	e1 90       	ld	r14, Z+
     62a:	ed 92       	st	X+, r14
     62c:	01 96       	adiw	r24, 0x01	; 1
     62e:	85 32       	cpi	r24, 0x25	; 37
     630:	d9 f7       	brne	.-10     	; 0x628 <BlockContent_End+0x12>
     632:	00 90 e9 01 	lds	r0, 0x01E9	; 0x8001e9 <register_address_block>
     636:	10 90 ea 01 	lds	r1, 0x01EA	; 0x8001ea <register_address_block+0x1>
     63a:	20 90 eb 01 	lds	r2, 0x01EB	; 0x8001eb <register_address_block+0x2>
     63e:	30 90 ec 01 	lds	r3, 0x01EC	; 0x8001ec <register_address_block+0x3>
     642:	40 90 ed 01 	lds	r4, 0x01ED	; 0x8001ed <register_address_block+0x4>
     646:	50 90 ee 01 	lds	r5, 0x01EE	; 0x8001ee <register_address_block+0x5>
     64a:	60 90 ef 01 	lds	r6, 0x01EF	; 0x8001ef <register_address_block+0x6>
     64e:	70 90 f0 01 	lds	r7, 0x01F0	; 0x8001f0 <register_address_block+0x7>
     652:	80 90 f1 01 	lds	r8, 0x01F1	; 0x8001f1 <register_address_block+0x8>
     656:	90 90 f2 01 	lds	r9, 0x01F2	; 0x8001f2 <register_address_block+0x9>
     65a:	a0 90 f3 01 	lds	r10, 0x01F3	; 0x8001f3 <register_address_block+0xa>
     65e:	b0 90 f4 01 	lds	r11, 0x01F4	; 0x8001f4 <register_address_block+0xb>
     662:	c0 90 f5 01 	lds	r12, 0x01F5	; 0x8001f5 <register_address_block+0xc>
     666:	d0 90 f6 01 	lds	r13, 0x01F6	; 0x8001f6 <register_address_block+0xd>
     66a:	e0 90 f7 01 	lds	r14, 0x01F7	; 0x8001f7 <register_address_block+0xe>
     66e:	f0 90 f8 01 	lds	r15, 0x01F8	; 0x8001f8 <register_address_block+0xf>
     672:	00 91 f9 01 	lds	r16, 0x01F9	; 0x8001f9 <register_address_block+0x10>
     676:	10 91 fa 01 	lds	r17, 0x01FA	; 0x8001fa <register_address_block+0x11>
     67a:	20 91 fb 01 	lds	r18, 0x01FB	; 0x8001fb <register_address_block+0x12>
     67e:	30 91 fc 01 	lds	r19, 0x01FC	; 0x8001fc <register_address_block+0x13>
     682:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <register_address_block+0x14>
     686:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <register_address_block+0x15>
     68a:	60 91 ff 01 	lds	r22, 0x01FF	; 0x8001ff <register_address_block+0x16>
     68e:	70 91 00 02 	lds	r23, 0x0200	; 0x800200 <register_address_block+0x17>
     692:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <register_address_block+0x18>
     696:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <register_address_block+0x19>
     69a:	a0 91 03 02 	lds	r26, 0x0203	; 0x800203 <register_address_block+0x1a>
     69e:	b0 91 04 02 	lds	r27, 0x0204	; 0x800204 <register_address_block+0x1b>
     6a2:	c0 91 05 02 	lds	r28, 0x0205	; 0x800205 <register_address_block+0x1c>
     6a6:	d0 91 06 02 	lds	r29, 0x0206	; 0x800206 <register_address_block+0x1d>
     6aa:	e0 91 07 02 	lds	r30, 0x0207	; 0x800207 <register_address_block+0x1e>
     6ae:	f0 91 08 02 	lds	r31, 0x0208	; 0x800208 <register_address_block+0x1f>
     6b2:	e0 90 f7 01 	lds	r14, 0x01F7	; 0x8001f7 <register_address_block+0xe>
     6b6:	f0 90 f8 01 	lds	r15, 0x01F8	; 0x8001f8 <register_address_block+0xf>
     6ba:	08 95       	ret

000006bc <uart_putchar>:
	}
}

/*USART*/
int uart_putchar(char c, FILE *stream)
{
     6bc:	cf 93       	push	r28
     6be:	c8 2f       	mov	r28, r24
	if (c == '\n') uart_putchar('\r', stream);
     6c0:	8a 30       	cpi	r24, 0x0A	; 10
     6c2:	11 f4       	brne	.+4      	; 0x6c8 <uart_putchar+0xc>
     6c4:	8d e0       	ldi	r24, 0x0D	; 13
     6c6:	fa df       	rcall	.-12     	; 0x6bc <uart_putchar>
	while( ! ( UCSR0A & (1 << UDRE0)));
     6c8:	e0 ec       	ldi	r30, 0xC0	; 192
     6ca:	f0 e0       	ldi	r31, 0x00	; 0
     6cc:	90 81       	ld	r25, Z
     6ce:	95 ff       	sbrs	r25, 5
     6d0:	fd cf       	rjmp	.-6      	; 0x6cc <uart_putchar+0x10>
	UDR0 = c;
     6d2:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	cf 91       	pop	r28
     6dc:	08 95       	ret

000006de <main>:
volatile char stackpointer_address_org[pointer_length];
volatile char stackpointer_address_block[pointer_length];
FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_RW); 

/*main function*/
int main(void){
     6de:	cf 93       	push	r28
     6e0:	df 93       	push	r29

	/*Initialize the pointer and register address variables*/
	int x_registercounter;
	for(x_registercounter=0; x_registercounter < pointer_length; x_registercounter++){
		register_address_r14r15[x_registercounter]=0;
     6e2:	8a ed       	ldi	r24, 0xDA	; 218
     6e4:	91 e0       	ldi	r25, 0x01	; 1
     6e6:	dc 01       	movw	r26, r24
     6e8:	1c 92       	st	X, r1
		framepointer_address[x_registercounter]=0;
     6ea:	c8 eb       	ldi	r28, 0xB8	; 184
     6ec:	d1 e0       	ldi	r29, 0x01	; 1
     6ee:	18 82       	st	Y, r1
		stackpointer_address_org[x_registercounter]=0;
     6f0:	27 ee       	ldi	r18, 0xE7	; 231
     6f2:	31 e0       	ldi	r19, 0x01	; 1
     6f4:	f9 01       	movw	r30, r18
     6f6:	10 82       	st	Z, r1
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
     6f8:	ec ed       	ldi	r30, 0xDC	; 220
     6fa:	f1 e0       	ldi	r31, 0x01	; 1
     6fc:	10 82       	st	Z, r1
     6fe:	10 82       	st	Z, r1
int main(void){

	/*Initialize the pointer and register address variables*/
	int x_registercounter;
	for(x_registercounter=0; x_registercounter < pointer_length; x_registercounter++){
		register_address_r14r15[x_registercounter]=0;
     700:	11 96       	adiw	r26, 0x01	; 1
     702:	1c 92       	st	X, r1
		framepointer_address[x_registercounter]=0;
     704:	19 82       	std	Y+1, r1	; 0x01
		stackpointer_address_org[x_registercounter]=0;
     706:	d9 01       	movw	r26, r18
     708:	11 96       	adiw	r26, 0x01	; 1
     70a:	1c 92       	st	X, r1
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
     70c:	11 82       	std	Z+1, r1	; 0x01
     70e:	11 82       	std	Z+1, r1	; 0x01
     710:	80 e0       	ldi	r24, 0x00	; 0
     712:	90 e0       	ldi	r25, 0x00	; 0
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
	register_address_org[x_registercounter];
     714:	fc 01       	movw	r30, r24
     716:	e6 54       	subi	r30, 0x46	; 70
     718:	fe 4f       	sbci	r31, 0xFE	; 254
     71a:	20 81       	ld	r18, Z
	register_address_block[x_registercounter];
     71c:	fc 01       	movw	r30, r24
     71e:	e7 51       	subi	r30, 0x17	; 23
     720:	fe 4f       	sbci	r31, 0xFE	; 254
     722:	20 81       	ld	r18, Z
		register_address_r14r15[x_registercounter]=0;
		framepointer_address[x_registercounter]=0;
		stackpointer_address_org[x_registercounter]=0;
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
     724:	01 96       	adiw	r24, 0x01	; 1
     726:	80 32       	cpi	r24, 0x20	; 32
     728:	91 05       	cpc	r25, r1
     72a:	a1 f7       	brne	.-24     	; 0x714 <main+0x36>
     72c:	80 e0       	ldi	r24, 0x00	; 0
     72e:	90 e0       	ldi	r25, 0x00	; 0
	register_address_org[x_registercounter];
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
	stack_address_org[x_registercounter];
     730:	fc 01       	movw	r30, r24
     732:	e2 52       	subi	r30, 0x22	; 34
     734:	fe 4f       	sbci	r31, 0xFE	; 254
     736:	20 81       	ld	r18, Z
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
	register_address_org[x_registercounter];
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
     738:	01 96       	adiw	r24, 0x01	; 1
     73a:	89 30       	cpi	r24, 0x09	; 9
     73c:	91 05       	cpc	r25, r1
     73e:	c1 f7       	brne	.-16     	; 0x730 <main+0x52>
     740:	80 e0       	ldi	r24, 0x00	; 0
     742:	90 e0       	ldi	r25, 0x00	; 0
	stack_address_org[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_block; x_registercounter++){
	stack_address_block[x_registercounter];
     744:	fc 01       	movw	r30, r24
     746:	e7 5f       	subi	r30, 0xF7	; 247
     748:	fd 4f       	sbci	r31, 0xFD	; 253
     74a:	20 81       	ld	r18, Z
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
	stack_address_org[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_block; x_registercounter++){
     74c:	01 96       	adiw	r24, 0x01	; 1
     74e:	89 31       	cpi	r24, 0x19	; 25
     750:	91 05       	cpc	r25, r1
     752:	c1 f7       	brne	.-16     	; 0x744 <main+0x66>
	stack_address_block[x_registercounter];
	}
	/*GPIO Pins*/
	DDRA = 0x00;
     754:	11 b8       	out	0x01, r1	; 1
	DDRC = 0xF0;
     756:	80 ef       	ldi	r24, 0xF0	; 240
     758:	87 b9       	out	0x07, r24	; 7
	/*External interrupt settings*/
	PORTD = (1 << PD1);
     75a:	82 e0       	ldi	r24, 0x02	; 2
     75c:	8b b9       	out	0x0b, r24	; 11
	EICRA =	(1 << ISC11) | (0 << ISC10);
     75e:	98 e0       	ldi	r25, 0x08	; 8
     760:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK = (1 << INT1);
     764:	8d bb       	out	0x1d, r24	; 29
	/*Serial port configuration*/
	UBRR0H = (RBAUD >> 8);
     766:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L =  RBAUD;
     76a:	83 e3       	ldi	r24, 0x33	; 51
     76c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0) | (1 << RXEN0);
     770:	88 e1       	ldi	r24, 0x18	; 24
     772:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     776:	86 e0       	ldi	r24, 0x06	; 6
     778:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	/*Execute the complete original code*/
	iir_init();
     77c:	a9 dc       	rcall	.-1710   	; 0xd0 <iir_init>
	iir_main();
     77e:	78 dd       	rcall	.-1296   	; 0x270 <iir_main>
	iir_return();
     780:	5b dd       	rcall	.-1354   	; 0x238 <iir_return>
	/*Enable FPGA Interupt trigger*/
	PORTC = (1 << PC5);
     782:	80 e2       	ldi	r24, 0x20	; 32
     784:	88 b9       	out	0x08, r24	; 8
	PORTC = (0 << PC5);
     786:	18 b8       	out	0x08, r1	; 8
	/*Enable external interrupt handler*/
	sei();
     788:	78 94       	sei
	/*while loop*/
	while(measurementRoundCounter<20){}
     78a:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <__data_end>
     78e:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__data_end+0x1>
     792:	84 31       	cpi	r24, 0x14	; 20
     794:	91 05       	cpc	r25, r1
     796:	ec f3       	brlt	.-6      	; 0x792 <main+0xb4>
	/*Return*/
	return(1);
}
     798:	81 e0       	ldi	r24, 0x01	; 1
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	df 91       	pop	r29
     79e:	cf 91       	pop	r28
     7a0:	08 95       	ret

000007a2 <__vector_2>:

/*Interrupt handler*/
ISR(INT1_vect){
     7a2:	1f 92       	push	r1
     7a4:	0f 92       	push	r0
     7a6:	0f b6       	in	r0, 0x3f	; 63
     7a8:	0f 92       	push	r0
     7aa:	11 24       	eor	r1, r1
     7ac:	0b b6       	in	r0, 0x3b	; 59
     7ae:	0f 92       	push	r0
     7b0:	0f 93       	push	r16
     7b2:	1f 93       	push	r17
     7b4:	2f 93       	push	r18
     7b6:	3f 93       	push	r19
     7b8:	4f 93       	push	r20
     7ba:	5f 93       	push	r21
     7bc:	6f 93       	push	r22
     7be:	7f 93       	push	r23
     7c0:	8f 93       	push	r24
     7c2:	9f 93       	push	r25
     7c4:	af 93       	push	r26
     7c6:	bf 93       	push	r27
     7c8:	cf 93       	push	r28
     7ca:	df 93       	push	r29
     7cc:	ef 93       	push	r30
     7ce:	ff 93       	push	r31

	/*Read input values*/
	blockInputUpdate(measurementRoundCounter);
     7d0:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <__data_end>
     7d4:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__data_end+0x1>
     7d8:	d5 dd       	rcall	.-1110   	; 0x384 <blockInputUpdate>
	/*Measure the execution time of the code block*/
	benchmarkBlock();
     7da:	68 de       	rcall	.-816    	; 0x4ac <benchmarkBlock>
	/*Update measurement round counter*/
	measurementRoundCounter++;
     7dc:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <__data_end>
     7e0:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__data_end+0x1>
     7e4:	01 96       	adiw	r24, 0x01	; 1
     7e6:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <__data_end+0x1>
     7ea:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__data_end>
	/*Print pointer values*/
	if(measurementRoundCounter==1){
     7ee:	01 97       	sbiw	r24, 0x01	; 1
     7f0:	99 f5       	brne	.+102    	; 0x858 <__vector_2+0xb6>
		fprintf(&mystdout,"%02x%02x\n",framepointer_address[1],framepointer_address[0]);
     7f2:	e8 eb       	ldi	r30, 0xB8	; 184
     7f4:	f1 e0       	ldi	r31, 0x01	; 1
     7f6:	90 81       	ld	r25, Z
     7f8:	81 81       	ldd	r24, Z+1	; 0x01
     7fa:	1f 92       	push	r1
     7fc:	9f 93       	push	r25
     7fe:	1f 92       	push	r1
     800:	8f 93       	push	r24
     802:	06 e3       	ldi	r16, 0x36	; 54
     804:	11 e0       	ldi	r17, 0x01	; 1
     806:	1f 93       	push	r17
     808:	0f 93       	push	r16
     80a:	c8 e2       	ldi	r28, 0x28	; 40
     80c:	d1 e0       	ldi	r29, 0x01	; 1
     80e:	df 93       	push	r29
     810:	cf 93       	push	r28
     812:	83 d1       	rcall	.+774    	; 0xb1a <fprintf>
		fprintf(&mystdout,"%02x%02x\n",stackpointer_address_org[1],stackpointer_address_org[0]);
     814:	e7 ee       	ldi	r30, 0xE7	; 231
     816:	f1 e0       	ldi	r31, 0x01	; 1
     818:	90 81       	ld	r25, Z
     81a:	81 81       	ldd	r24, Z+1	; 0x01
     81c:	1f 92       	push	r1
     81e:	9f 93       	push	r25
     820:	1f 92       	push	r1
     822:	8f 93       	push	r24
     824:	1f 93       	push	r17
     826:	0f 93       	push	r16
     828:	df 93       	push	r29
     82a:	cf 93       	push	r28
     82c:	76 d1       	rcall	.+748    	; 0xb1a <fprintf>
		fprintf(&mystdout,"%02x%02x\n",stackpointer_address_block[1],stackpointer_address_block[0]);
     82e:	ec ed       	ldi	r30, 0xDC	; 220
     830:	f1 e0       	ldi	r31, 0x01	; 1
     832:	90 81       	ld	r25, Z
     834:	81 81       	ldd	r24, Z+1	; 0x01
     836:	1f 92       	push	r1
     838:	9f 93       	push	r25
     83a:	1f 92       	push	r1
     83c:	8f 93       	push	r24
     83e:	1f 93       	push	r17
     840:	0f 93       	push	r16
     842:	df 93       	push	r29
     844:	cf 93       	push	r28
     846:	69 d1       	rcall	.+722    	; 0xb1a <fprintf>
     848:	8d b7       	in	r24, 0x3d	; 61
     84a:	9e b7       	in	r25, 0x3e	; 62
     84c:	48 96       	adiw	r24, 0x18	; 24
     84e:	0f b6       	in	r0, 0x3f	; 63
     850:	f8 94       	cli
     852:	9e bf       	out	0x3e, r25	; 62
     854:	0f be       	out	0x3f, r0	; 63
     856:	8d bf       	out	0x3d, r24	; 61
	}
}
     858:	ff 91       	pop	r31
     85a:	ef 91       	pop	r30
     85c:	df 91       	pop	r29
     85e:	cf 91       	pop	r28
     860:	bf 91       	pop	r27
     862:	af 91       	pop	r26
     864:	9f 91       	pop	r25
     866:	8f 91       	pop	r24
     868:	7f 91       	pop	r23
     86a:	6f 91       	pop	r22
     86c:	5f 91       	pop	r21
     86e:	4f 91       	pop	r20
     870:	3f 91       	pop	r19
     872:	2f 91       	pop	r18
     874:	1f 91       	pop	r17
     876:	0f 91       	pop	r16
     878:	0f 90       	pop	r0
     87a:	0b be       	out	0x3b, r0	; 59
     87c:	0f 90       	pop	r0
     87e:	0f be       	out	0x3f, r0	; 63
     880:	0f 90       	pop	r0
     882:	1f 90       	pop	r1
     884:	18 95       	reti

00000886 <__subsf3>:
     886:	50 58       	subi	r21, 0x80	; 128

00000888 <__addsf3>:
     888:	bb 27       	eor	r27, r27
     88a:	aa 27       	eor	r26, r26
     88c:	0e d0       	rcall	.+28     	; 0x8aa <__addsf3x>
     88e:	a8 c0       	rjmp	.+336    	; 0x9e0 <__fp_round>
     890:	99 d0       	rcall	.+306    	; 0x9c4 <__fp_pscA>
     892:	30 f0       	brcs	.+12     	; 0x8a0 <__addsf3+0x18>
     894:	9e d0       	rcall	.+316    	; 0x9d2 <__fp_pscB>
     896:	20 f0       	brcs	.+8      	; 0x8a0 <__addsf3+0x18>
     898:	31 f4       	brne	.+12     	; 0x8a6 <__addsf3+0x1e>
     89a:	9f 3f       	cpi	r25, 0xFF	; 255
     89c:	11 f4       	brne	.+4      	; 0x8a2 <__addsf3+0x1a>
     89e:	1e f4       	brtc	.+6      	; 0x8a6 <__addsf3+0x1e>
     8a0:	8e c0       	rjmp	.+284    	; 0x9be <__fp_nan>
     8a2:	0e f4       	brtc	.+2      	; 0x8a6 <__addsf3+0x1e>
     8a4:	e0 95       	com	r30
     8a6:	e7 fb       	bst	r30, 7
     8a8:	84 c0       	rjmp	.+264    	; 0x9b2 <__fp_inf>

000008aa <__addsf3x>:
     8aa:	e9 2f       	mov	r30, r25
     8ac:	aa d0       	rcall	.+340    	; 0xa02 <__fp_split3>
     8ae:	80 f3       	brcs	.-32     	; 0x890 <__addsf3+0x8>
     8b0:	ba 17       	cp	r27, r26
     8b2:	62 07       	cpc	r22, r18
     8b4:	73 07       	cpc	r23, r19
     8b6:	84 07       	cpc	r24, r20
     8b8:	95 07       	cpc	r25, r21
     8ba:	18 f0       	brcs	.+6      	; 0x8c2 <__addsf3x+0x18>
     8bc:	71 f4       	brne	.+28     	; 0x8da <__addsf3x+0x30>
     8be:	9e f5       	brtc	.+102    	; 0x926 <__addsf3x+0x7c>
     8c0:	c2 c0       	rjmp	.+388    	; 0xa46 <__fp_zero>
     8c2:	0e f4       	brtc	.+2      	; 0x8c6 <__addsf3x+0x1c>
     8c4:	e0 95       	com	r30
     8c6:	0b 2e       	mov	r0, r27
     8c8:	ba 2f       	mov	r27, r26
     8ca:	a0 2d       	mov	r26, r0
     8cc:	0b 01       	movw	r0, r22
     8ce:	b9 01       	movw	r22, r18
     8d0:	90 01       	movw	r18, r0
     8d2:	0c 01       	movw	r0, r24
     8d4:	ca 01       	movw	r24, r20
     8d6:	a0 01       	movw	r20, r0
     8d8:	11 24       	eor	r1, r1
     8da:	ff 27       	eor	r31, r31
     8dc:	59 1b       	sub	r21, r25
     8de:	99 f0       	breq	.+38     	; 0x906 <__addsf3x+0x5c>
     8e0:	59 3f       	cpi	r21, 0xF9	; 249
     8e2:	50 f4       	brcc	.+20     	; 0x8f8 <__addsf3x+0x4e>
     8e4:	50 3e       	cpi	r21, 0xE0	; 224
     8e6:	68 f1       	brcs	.+90     	; 0x942 <__addsf3x+0x98>
     8e8:	1a 16       	cp	r1, r26
     8ea:	f0 40       	sbci	r31, 0x00	; 0
     8ec:	a2 2f       	mov	r26, r18
     8ee:	23 2f       	mov	r18, r19
     8f0:	34 2f       	mov	r19, r20
     8f2:	44 27       	eor	r20, r20
     8f4:	58 5f       	subi	r21, 0xF8	; 248
     8f6:	f3 cf       	rjmp	.-26     	; 0x8de <__addsf3x+0x34>
     8f8:	46 95       	lsr	r20
     8fa:	37 95       	ror	r19
     8fc:	27 95       	ror	r18
     8fe:	a7 95       	ror	r26
     900:	f0 40       	sbci	r31, 0x00	; 0
     902:	53 95       	inc	r21
     904:	c9 f7       	brne	.-14     	; 0x8f8 <__addsf3x+0x4e>
     906:	7e f4       	brtc	.+30     	; 0x926 <__addsf3x+0x7c>
     908:	1f 16       	cp	r1, r31
     90a:	ba 0b       	sbc	r27, r26
     90c:	62 0b       	sbc	r22, r18
     90e:	73 0b       	sbc	r23, r19
     910:	84 0b       	sbc	r24, r20
     912:	ba f0       	brmi	.+46     	; 0x942 <__addsf3x+0x98>
     914:	91 50       	subi	r25, 0x01	; 1
     916:	a1 f0       	breq	.+40     	; 0x940 <__addsf3x+0x96>
     918:	ff 0f       	add	r31, r31
     91a:	bb 1f       	adc	r27, r27
     91c:	66 1f       	adc	r22, r22
     91e:	77 1f       	adc	r23, r23
     920:	88 1f       	adc	r24, r24
     922:	c2 f7       	brpl	.-16     	; 0x914 <__addsf3x+0x6a>
     924:	0e c0       	rjmp	.+28     	; 0x942 <__addsf3x+0x98>
     926:	ba 0f       	add	r27, r26
     928:	62 1f       	adc	r22, r18
     92a:	73 1f       	adc	r23, r19
     92c:	84 1f       	adc	r24, r20
     92e:	48 f4       	brcc	.+18     	; 0x942 <__addsf3x+0x98>
     930:	87 95       	ror	r24
     932:	77 95       	ror	r23
     934:	67 95       	ror	r22
     936:	b7 95       	ror	r27
     938:	f7 95       	ror	r31
     93a:	9e 3f       	cpi	r25, 0xFE	; 254
     93c:	08 f0       	brcs	.+2      	; 0x940 <__addsf3x+0x96>
     93e:	b3 cf       	rjmp	.-154    	; 0x8a6 <__addsf3+0x1e>
     940:	93 95       	inc	r25
     942:	88 0f       	add	r24, r24
     944:	08 f0       	brcs	.+2      	; 0x948 <__addsf3x+0x9e>
     946:	99 27       	eor	r25, r25
     948:	ee 0f       	add	r30, r30
     94a:	97 95       	ror	r25
     94c:	87 95       	ror	r24
     94e:	08 95       	ret

00000950 <__fixsfsi>:
     950:	04 d0       	rcall	.+8      	; 0x95a <__fixunssfsi>
     952:	68 94       	set
     954:	b1 11       	cpse	r27, r1
     956:	78 c0       	rjmp	.+240    	; 0xa48 <__fp_szero>
     958:	08 95       	ret

0000095a <__fixunssfsi>:
     95a:	5b d0       	rcall	.+182    	; 0xa12 <__fp_splitA>
     95c:	88 f0       	brcs	.+34     	; 0x980 <__fixunssfsi+0x26>
     95e:	9f 57       	subi	r25, 0x7F	; 127
     960:	90 f0       	brcs	.+36     	; 0x986 <__fixunssfsi+0x2c>
     962:	b9 2f       	mov	r27, r25
     964:	99 27       	eor	r25, r25
     966:	b7 51       	subi	r27, 0x17	; 23
     968:	a0 f0       	brcs	.+40     	; 0x992 <__fixunssfsi+0x38>
     96a:	d1 f0       	breq	.+52     	; 0x9a0 <__fixunssfsi+0x46>
     96c:	66 0f       	add	r22, r22
     96e:	77 1f       	adc	r23, r23
     970:	88 1f       	adc	r24, r24
     972:	99 1f       	adc	r25, r25
     974:	1a f0       	brmi	.+6      	; 0x97c <__fixunssfsi+0x22>
     976:	ba 95       	dec	r27
     978:	c9 f7       	brne	.-14     	; 0x96c <__fixunssfsi+0x12>
     97a:	12 c0       	rjmp	.+36     	; 0x9a0 <__fixunssfsi+0x46>
     97c:	b1 30       	cpi	r27, 0x01	; 1
     97e:	81 f0       	breq	.+32     	; 0x9a0 <__fixunssfsi+0x46>
     980:	62 d0       	rcall	.+196    	; 0xa46 <__fp_zero>
     982:	b1 e0       	ldi	r27, 0x01	; 1
     984:	08 95       	ret
     986:	5f c0       	rjmp	.+190    	; 0xa46 <__fp_zero>
     988:	67 2f       	mov	r22, r23
     98a:	78 2f       	mov	r23, r24
     98c:	88 27       	eor	r24, r24
     98e:	b8 5f       	subi	r27, 0xF8	; 248
     990:	39 f0       	breq	.+14     	; 0x9a0 <__fixunssfsi+0x46>
     992:	b9 3f       	cpi	r27, 0xF9	; 249
     994:	cc f3       	brlt	.-14     	; 0x988 <__fixunssfsi+0x2e>
     996:	86 95       	lsr	r24
     998:	77 95       	ror	r23
     99a:	67 95       	ror	r22
     99c:	b3 95       	inc	r27
     99e:	d9 f7       	brne	.-10     	; 0x996 <__fixunssfsi+0x3c>
     9a0:	3e f4       	brtc	.+14     	; 0x9b0 <__fixunssfsi+0x56>
     9a2:	90 95       	com	r25
     9a4:	80 95       	com	r24
     9a6:	70 95       	com	r23
     9a8:	61 95       	neg	r22
     9aa:	7f 4f       	sbci	r23, 0xFF	; 255
     9ac:	8f 4f       	sbci	r24, 0xFF	; 255
     9ae:	9f 4f       	sbci	r25, 0xFF	; 255
     9b0:	08 95       	ret

000009b2 <__fp_inf>:
     9b2:	97 f9       	bld	r25, 7
     9b4:	9f 67       	ori	r25, 0x7F	; 127
     9b6:	80 e8       	ldi	r24, 0x80	; 128
     9b8:	70 e0       	ldi	r23, 0x00	; 0
     9ba:	60 e0       	ldi	r22, 0x00	; 0
     9bc:	08 95       	ret

000009be <__fp_nan>:
     9be:	9f ef       	ldi	r25, 0xFF	; 255
     9c0:	80 ec       	ldi	r24, 0xC0	; 192
     9c2:	08 95       	ret

000009c4 <__fp_pscA>:
     9c4:	00 24       	eor	r0, r0
     9c6:	0a 94       	dec	r0
     9c8:	16 16       	cp	r1, r22
     9ca:	17 06       	cpc	r1, r23
     9cc:	18 06       	cpc	r1, r24
     9ce:	09 06       	cpc	r0, r25
     9d0:	08 95       	ret

000009d2 <__fp_pscB>:
     9d2:	00 24       	eor	r0, r0
     9d4:	0a 94       	dec	r0
     9d6:	12 16       	cp	r1, r18
     9d8:	13 06       	cpc	r1, r19
     9da:	14 06       	cpc	r1, r20
     9dc:	05 06       	cpc	r0, r21
     9de:	08 95       	ret

000009e0 <__fp_round>:
     9e0:	09 2e       	mov	r0, r25
     9e2:	03 94       	inc	r0
     9e4:	00 0c       	add	r0, r0
     9e6:	11 f4       	brne	.+4      	; 0x9ec <__fp_round+0xc>
     9e8:	88 23       	and	r24, r24
     9ea:	52 f0       	brmi	.+20     	; 0xa00 <__fp_round+0x20>
     9ec:	bb 0f       	add	r27, r27
     9ee:	40 f4       	brcc	.+16     	; 0xa00 <__fp_round+0x20>
     9f0:	bf 2b       	or	r27, r31
     9f2:	11 f4       	brne	.+4      	; 0x9f8 <__fp_round+0x18>
     9f4:	60 ff       	sbrs	r22, 0
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <__fp_round+0x20>
     9f8:	6f 5f       	subi	r22, 0xFF	; 255
     9fa:	7f 4f       	sbci	r23, 0xFF	; 255
     9fc:	8f 4f       	sbci	r24, 0xFF	; 255
     9fe:	9f 4f       	sbci	r25, 0xFF	; 255
     a00:	08 95       	ret

00000a02 <__fp_split3>:
     a02:	57 fd       	sbrc	r21, 7
     a04:	90 58       	subi	r25, 0x80	; 128
     a06:	44 0f       	add	r20, r20
     a08:	55 1f       	adc	r21, r21
     a0a:	59 f0       	breq	.+22     	; 0xa22 <__fp_splitA+0x10>
     a0c:	5f 3f       	cpi	r21, 0xFF	; 255
     a0e:	71 f0       	breq	.+28     	; 0xa2c <__fp_splitA+0x1a>
     a10:	47 95       	ror	r20

00000a12 <__fp_splitA>:
     a12:	88 0f       	add	r24, r24
     a14:	97 fb       	bst	r25, 7
     a16:	99 1f       	adc	r25, r25
     a18:	61 f0       	breq	.+24     	; 0xa32 <__fp_splitA+0x20>
     a1a:	9f 3f       	cpi	r25, 0xFF	; 255
     a1c:	79 f0       	breq	.+30     	; 0xa3c <__fp_splitA+0x2a>
     a1e:	87 95       	ror	r24
     a20:	08 95       	ret
     a22:	12 16       	cp	r1, r18
     a24:	13 06       	cpc	r1, r19
     a26:	14 06       	cpc	r1, r20
     a28:	55 1f       	adc	r21, r21
     a2a:	f2 cf       	rjmp	.-28     	; 0xa10 <__fp_split3+0xe>
     a2c:	46 95       	lsr	r20
     a2e:	f1 df       	rcall	.-30     	; 0xa12 <__fp_splitA>
     a30:	08 c0       	rjmp	.+16     	; 0xa42 <__fp_splitA+0x30>
     a32:	16 16       	cp	r1, r22
     a34:	17 06       	cpc	r1, r23
     a36:	18 06       	cpc	r1, r24
     a38:	99 1f       	adc	r25, r25
     a3a:	f1 cf       	rjmp	.-30     	; 0xa1e <__fp_splitA+0xc>
     a3c:	86 95       	lsr	r24
     a3e:	71 05       	cpc	r23, r1
     a40:	61 05       	cpc	r22, r1
     a42:	08 94       	sec
     a44:	08 95       	ret

00000a46 <__fp_zero>:
     a46:	e8 94       	clt

00000a48 <__fp_szero>:
     a48:	bb 27       	eor	r27, r27
     a4a:	66 27       	eor	r22, r22
     a4c:	77 27       	eor	r23, r23
     a4e:	cb 01       	movw	r24, r22
     a50:	97 f9       	bld	r25, 7
     a52:	08 95       	ret

00000a54 <__mulsf3>:
     a54:	0b d0       	rcall	.+22     	; 0xa6c <__mulsf3x>
     a56:	c4 cf       	rjmp	.-120    	; 0x9e0 <__fp_round>
     a58:	b5 df       	rcall	.-150    	; 0x9c4 <__fp_pscA>
     a5a:	28 f0       	brcs	.+10     	; 0xa66 <__mulsf3+0x12>
     a5c:	ba df       	rcall	.-140    	; 0x9d2 <__fp_pscB>
     a5e:	18 f0       	brcs	.+6      	; 0xa66 <__mulsf3+0x12>
     a60:	95 23       	and	r25, r21
     a62:	09 f0       	breq	.+2      	; 0xa66 <__mulsf3+0x12>
     a64:	a6 cf       	rjmp	.-180    	; 0x9b2 <__fp_inf>
     a66:	ab cf       	rjmp	.-170    	; 0x9be <__fp_nan>
     a68:	11 24       	eor	r1, r1
     a6a:	ee cf       	rjmp	.-36     	; 0xa48 <__fp_szero>

00000a6c <__mulsf3x>:
     a6c:	ca df       	rcall	.-108    	; 0xa02 <__fp_split3>
     a6e:	a0 f3       	brcs	.-24     	; 0xa58 <__mulsf3+0x4>

00000a70 <__mulsf3_pse>:
     a70:	95 9f       	mul	r25, r21
     a72:	d1 f3       	breq	.-12     	; 0xa68 <__mulsf3+0x14>
     a74:	95 0f       	add	r25, r21
     a76:	50 e0       	ldi	r21, 0x00	; 0
     a78:	55 1f       	adc	r21, r21
     a7a:	62 9f       	mul	r22, r18
     a7c:	f0 01       	movw	r30, r0
     a7e:	72 9f       	mul	r23, r18
     a80:	bb 27       	eor	r27, r27
     a82:	f0 0d       	add	r31, r0
     a84:	b1 1d       	adc	r27, r1
     a86:	63 9f       	mul	r22, r19
     a88:	aa 27       	eor	r26, r26
     a8a:	f0 0d       	add	r31, r0
     a8c:	b1 1d       	adc	r27, r1
     a8e:	aa 1f       	adc	r26, r26
     a90:	64 9f       	mul	r22, r20
     a92:	66 27       	eor	r22, r22
     a94:	b0 0d       	add	r27, r0
     a96:	a1 1d       	adc	r26, r1
     a98:	66 1f       	adc	r22, r22
     a9a:	82 9f       	mul	r24, r18
     a9c:	22 27       	eor	r18, r18
     a9e:	b0 0d       	add	r27, r0
     aa0:	a1 1d       	adc	r26, r1
     aa2:	62 1f       	adc	r22, r18
     aa4:	73 9f       	mul	r23, r19
     aa6:	b0 0d       	add	r27, r0
     aa8:	a1 1d       	adc	r26, r1
     aaa:	62 1f       	adc	r22, r18
     aac:	83 9f       	mul	r24, r19
     aae:	a0 0d       	add	r26, r0
     ab0:	61 1d       	adc	r22, r1
     ab2:	22 1f       	adc	r18, r18
     ab4:	74 9f       	mul	r23, r20
     ab6:	33 27       	eor	r19, r19
     ab8:	a0 0d       	add	r26, r0
     aba:	61 1d       	adc	r22, r1
     abc:	23 1f       	adc	r18, r19
     abe:	84 9f       	mul	r24, r20
     ac0:	60 0d       	add	r22, r0
     ac2:	21 1d       	adc	r18, r1
     ac4:	82 2f       	mov	r24, r18
     ac6:	76 2f       	mov	r23, r22
     ac8:	6a 2f       	mov	r22, r26
     aca:	11 24       	eor	r1, r1
     acc:	9f 57       	subi	r25, 0x7F	; 127
     ace:	50 40       	sbci	r21, 0x00	; 0
     ad0:	8a f0       	brmi	.+34     	; 0xaf4 <__mulsf3_pse+0x84>
     ad2:	e1 f0       	breq	.+56     	; 0xb0c <__mulsf3_pse+0x9c>
     ad4:	88 23       	and	r24, r24
     ad6:	4a f0       	brmi	.+18     	; 0xaea <__mulsf3_pse+0x7a>
     ad8:	ee 0f       	add	r30, r30
     ada:	ff 1f       	adc	r31, r31
     adc:	bb 1f       	adc	r27, r27
     ade:	66 1f       	adc	r22, r22
     ae0:	77 1f       	adc	r23, r23
     ae2:	88 1f       	adc	r24, r24
     ae4:	91 50       	subi	r25, 0x01	; 1
     ae6:	50 40       	sbci	r21, 0x00	; 0
     ae8:	a9 f7       	brne	.-22     	; 0xad4 <__mulsf3_pse+0x64>
     aea:	9e 3f       	cpi	r25, 0xFE	; 254
     aec:	51 05       	cpc	r21, r1
     aee:	70 f0       	brcs	.+28     	; 0xb0c <__mulsf3_pse+0x9c>
     af0:	60 cf       	rjmp	.-320    	; 0x9b2 <__fp_inf>
     af2:	aa cf       	rjmp	.-172    	; 0xa48 <__fp_szero>
     af4:	5f 3f       	cpi	r21, 0xFF	; 255
     af6:	ec f3       	brlt	.-6      	; 0xaf2 <__mulsf3_pse+0x82>
     af8:	98 3e       	cpi	r25, 0xE8	; 232
     afa:	dc f3       	brlt	.-10     	; 0xaf2 <__mulsf3_pse+0x82>
     afc:	86 95       	lsr	r24
     afe:	77 95       	ror	r23
     b00:	67 95       	ror	r22
     b02:	b7 95       	ror	r27
     b04:	f7 95       	ror	r31
     b06:	e7 95       	ror	r30
     b08:	9f 5f       	subi	r25, 0xFF	; 255
     b0a:	c1 f7       	brne	.-16     	; 0xafc <__mulsf3_pse+0x8c>
     b0c:	fe 2b       	or	r31, r30
     b0e:	88 0f       	add	r24, r24
     b10:	91 1d       	adc	r25, r1
     b12:	96 95       	lsr	r25
     b14:	87 95       	ror	r24
     b16:	97 f9       	bld	r25, 7
     b18:	08 95       	ret

00000b1a <fprintf>:
     b1a:	cf 93       	push	r28
     b1c:	df 93       	push	r29
     b1e:	cd b7       	in	r28, 0x3d	; 61
     b20:	de b7       	in	r29, 0x3e	; 62
     b22:	ae 01       	movw	r20, r28
     b24:	47 5f       	subi	r20, 0xF7	; 247
     b26:	5f 4f       	sbci	r21, 0xFF	; 255
     b28:	6f 81       	ldd	r22, Y+7	; 0x07
     b2a:	78 85       	ldd	r23, Y+8	; 0x08
     b2c:	8d 81       	ldd	r24, Y+5	; 0x05
     b2e:	9e 81       	ldd	r25, Y+6	; 0x06
     b30:	03 d0       	rcall	.+6      	; 0xb38 <vfprintf>
     b32:	df 91       	pop	r29
     b34:	cf 91       	pop	r28
     b36:	08 95       	ret

00000b38 <vfprintf>:
     b38:	2f 92       	push	r2
     b3a:	3f 92       	push	r3
     b3c:	4f 92       	push	r4
     b3e:	5f 92       	push	r5
     b40:	6f 92       	push	r6
     b42:	7f 92       	push	r7
     b44:	8f 92       	push	r8
     b46:	9f 92       	push	r9
     b48:	af 92       	push	r10
     b4a:	bf 92       	push	r11
     b4c:	cf 92       	push	r12
     b4e:	df 92       	push	r13
     b50:	ef 92       	push	r14
     b52:	ff 92       	push	r15
     b54:	0f 93       	push	r16
     b56:	1f 93       	push	r17
     b58:	cf 93       	push	r28
     b5a:	df 93       	push	r29
     b5c:	cd b7       	in	r28, 0x3d	; 61
     b5e:	de b7       	in	r29, 0x3e	; 62
     b60:	2c 97       	sbiw	r28, 0x0c	; 12
     b62:	0f b6       	in	r0, 0x3f	; 63
     b64:	f8 94       	cli
     b66:	de bf       	out	0x3e, r29	; 62
     b68:	0f be       	out	0x3f, r0	; 63
     b6a:	cd bf       	out	0x3d, r28	; 61
     b6c:	7c 01       	movw	r14, r24
     b6e:	6b 01       	movw	r12, r22
     b70:	8a 01       	movw	r16, r20
     b72:	fc 01       	movw	r30, r24
     b74:	17 82       	std	Z+7, r1	; 0x07
     b76:	16 82       	std	Z+6, r1	; 0x06
     b78:	83 81       	ldd	r24, Z+3	; 0x03
     b7a:	81 ff       	sbrs	r24, 1
     b7c:	b0 c1       	rjmp	.+864    	; 0xede <vfprintf+0x3a6>
     b7e:	ce 01       	movw	r24, r28
     b80:	01 96       	adiw	r24, 0x01	; 1
     b82:	4c 01       	movw	r8, r24
     b84:	f7 01       	movw	r30, r14
     b86:	93 81       	ldd	r25, Z+3	; 0x03
     b88:	f6 01       	movw	r30, r12
     b8a:	93 fd       	sbrc	r25, 3
     b8c:	85 91       	lpm	r24, Z+
     b8e:	93 ff       	sbrs	r25, 3
     b90:	81 91       	ld	r24, Z+
     b92:	6f 01       	movw	r12, r30
     b94:	88 23       	and	r24, r24
     b96:	09 f4       	brne	.+2      	; 0xb9a <vfprintf+0x62>
     b98:	9e c1       	rjmp	.+828    	; 0xed6 <vfprintf+0x39e>
     b9a:	85 32       	cpi	r24, 0x25	; 37
     b9c:	39 f4       	brne	.+14     	; 0xbac <vfprintf+0x74>
     b9e:	93 fd       	sbrc	r25, 3
     ba0:	85 91       	lpm	r24, Z+
     ba2:	93 ff       	sbrs	r25, 3
     ba4:	81 91       	ld	r24, Z+
     ba6:	6f 01       	movw	r12, r30
     ba8:	85 32       	cpi	r24, 0x25	; 37
     baa:	21 f4       	brne	.+8      	; 0xbb4 <vfprintf+0x7c>
     bac:	b7 01       	movw	r22, r14
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	c7 d1       	rcall	.+910    	; 0xf40 <fputc>
     bb2:	e8 cf       	rjmp	.-48     	; 0xb84 <vfprintf+0x4c>
     bb4:	51 2c       	mov	r5, r1
     bb6:	31 2c       	mov	r3, r1
     bb8:	20 e0       	ldi	r18, 0x00	; 0
     bba:	20 32       	cpi	r18, 0x20	; 32
     bbc:	a0 f4       	brcc	.+40     	; 0xbe6 <vfprintf+0xae>
     bbe:	8b 32       	cpi	r24, 0x2B	; 43
     bc0:	69 f0       	breq	.+26     	; 0xbdc <vfprintf+0xa4>
     bc2:	30 f4       	brcc	.+12     	; 0xbd0 <vfprintf+0x98>
     bc4:	80 32       	cpi	r24, 0x20	; 32
     bc6:	59 f0       	breq	.+22     	; 0xbde <vfprintf+0xa6>
     bc8:	83 32       	cpi	r24, 0x23	; 35
     bca:	69 f4       	brne	.+26     	; 0xbe6 <vfprintf+0xae>
     bcc:	20 61       	ori	r18, 0x10	; 16
     bce:	2c c0       	rjmp	.+88     	; 0xc28 <vfprintf+0xf0>
     bd0:	8d 32       	cpi	r24, 0x2D	; 45
     bd2:	39 f0       	breq	.+14     	; 0xbe2 <vfprintf+0xaa>
     bd4:	80 33       	cpi	r24, 0x30	; 48
     bd6:	39 f4       	brne	.+14     	; 0xbe6 <vfprintf+0xae>
     bd8:	21 60       	ori	r18, 0x01	; 1
     bda:	26 c0       	rjmp	.+76     	; 0xc28 <vfprintf+0xf0>
     bdc:	22 60       	ori	r18, 0x02	; 2
     bde:	24 60       	ori	r18, 0x04	; 4
     be0:	23 c0       	rjmp	.+70     	; 0xc28 <vfprintf+0xf0>
     be2:	28 60       	ori	r18, 0x08	; 8
     be4:	21 c0       	rjmp	.+66     	; 0xc28 <vfprintf+0xf0>
     be6:	27 fd       	sbrc	r18, 7
     be8:	27 c0       	rjmp	.+78     	; 0xc38 <vfprintf+0x100>
     bea:	30 ed       	ldi	r19, 0xD0	; 208
     bec:	38 0f       	add	r19, r24
     bee:	3a 30       	cpi	r19, 0x0A	; 10
     bf0:	78 f4       	brcc	.+30     	; 0xc10 <vfprintf+0xd8>
     bf2:	26 ff       	sbrs	r18, 6
     bf4:	06 c0       	rjmp	.+12     	; 0xc02 <vfprintf+0xca>
     bf6:	fa e0       	ldi	r31, 0x0A	; 10
     bf8:	5f 9e       	mul	r5, r31
     bfa:	30 0d       	add	r19, r0
     bfc:	11 24       	eor	r1, r1
     bfe:	53 2e       	mov	r5, r19
     c00:	13 c0       	rjmp	.+38     	; 0xc28 <vfprintf+0xf0>
     c02:	8a e0       	ldi	r24, 0x0A	; 10
     c04:	38 9e       	mul	r3, r24
     c06:	30 0d       	add	r19, r0
     c08:	11 24       	eor	r1, r1
     c0a:	33 2e       	mov	r3, r19
     c0c:	20 62       	ori	r18, 0x20	; 32
     c0e:	0c c0       	rjmp	.+24     	; 0xc28 <vfprintf+0xf0>
     c10:	8e 32       	cpi	r24, 0x2E	; 46
     c12:	21 f4       	brne	.+8      	; 0xc1c <vfprintf+0xe4>
     c14:	26 fd       	sbrc	r18, 6
     c16:	5f c1       	rjmp	.+702    	; 0xed6 <vfprintf+0x39e>
     c18:	20 64       	ori	r18, 0x40	; 64
     c1a:	06 c0       	rjmp	.+12     	; 0xc28 <vfprintf+0xf0>
     c1c:	8c 36       	cpi	r24, 0x6C	; 108
     c1e:	11 f4       	brne	.+4      	; 0xc24 <vfprintf+0xec>
     c20:	20 68       	ori	r18, 0x80	; 128
     c22:	02 c0       	rjmp	.+4      	; 0xc28 <vfprintf+0xf0>
     c24:	88 36       	cpi	r24, 0x68	; 104
     c26:	41 f4       	brne	.+16     	; 0xc38 <vfprintf+0x100>
     c28:	f6 01       	movw	r30, r12
     c2a:	93 fd       	sbrc	r25, 3
     c2c:	85 91       	lpm	r24, Z+
     c2e:	93 ff       	sbrs	r25, 3
     c30:	81 91       	ld	r24, Z+
     c32:	6f 01       	movw	r12, r30
     c34:	81 11       	cpse	r24, r1
     c36:	c1 cf       	rjmp	.-126    	; 0xbba <vfprintf+0x82>
     c38:	98 2f       	mov	r25, r24
     c3a:	9f 7d       	andi	r25, 0xDF	; 223
     c3c:	95 54       	subi	r25, 0x45	; 69
     c3e:	93 30       	cpi	r25, 0x03	; 3
     c40:	28 f4       	brcc	.+10     	; 0xc4c <vfprintf+0x114>
     c42:	0c 5f       	subi	r16, 0xFC	; 252
     c44:	1f 4f       	sbci	r17, 0xFF	; 255
     c46:	ff e3       	ldi	r31, 0x3F	; 63
     c48:	f9 83       	std	Y+1, r31	; 0x01
     c4a:	0d c0       	rjmp	.+26     	; 0xc66 <vfprintf+0x12e>
     c4c:	83 36       	cpi	r24, 0x63	; 99
     c4e:	31 f0       	breq	.+12     	; 0xc5c <vfprintf+0x124>
     c50:	83 37       	cpi	r24, 0x73	; 115
     c52:	71 f0       	breq	.+28     	; 0xc70 <vfprintf+0x138>
     c54:	83 35       	cpi	r24, 0x53	; 83
     c56:	09 f0       	breq	.+2      	; 0xc5a <vfprintf+0x122>
     c58:	57 c0       	rjmp	.+174    	; 0xd08 <vfprintf+0x1d0>
     c5a:	21 c0       	rjmp	.+66     	; 0xc9e <vfprintf+0x166>
     c5c:	f8 01       	movw	r30, r16
     c5e:	80 81       	ld	r24, Z
     c60:	89 83       	std	Y+1, r24	; 0x01
     c62:	0e 5f       	subi	r16, 0xFE	; 254
     c64:	1f 4f       	sbci	r17, 0xFF	; 255
     c66:	44 24       	eor	r4, r4
     c68:	43 94       	inc	r4
     c6a:	51 2c       	mov	r5, r1
     c6c:	54 01       	movw	r10, r8
     c6e:	14 c0       	rjmp	.+40     	; 0xc98 <vfprintf+0x160>
     c70:	38 01       	movw	r6, r16
     c72:	f2 e0       	ldi	r31, 0x02	; 2
     c74:	6f 0e       	add	r6, r31
     c76:	71 1c       	adc	r7, r1
     c78:	f8 01       	movw	r30, r16
     c7a:	a0 80       	ld	r10, Z
     c7c:	b1 80       	ldd	r11, Z+1	; 0x01
     c7e:	26 ff       	sbrs	r18, 6
     c80:	03 c0       	rjmp	.+6      	; 0xc88 <vfprintf+0x150>
     c82:	65 2d       	mov	r22, r5
     c84:	70 e0       	ldi	r23, 0x00	; 0
     c86:	02 c0       	rjmp	.+4      	; 0xc8c <vfprintf+0x154>
     c88:	6f ef       	ldi	r22, 0xFF	; 255
     c8a:	7f ef       	ldi	r23, 0xFF	; 255
     c8c:	c5 01       	movw	r24, r10
     c8e:	2c 87       	std	Y+12, r18	; 0x0c
     c90:	4c d1       	rcall	.+664    	; 0xf2a <strnlen>
     c92:	2c 01       	movw	r4, r24
     c94:	83 01       	movw	r16, r6
     c96:	2c 85       	ldd	r18, Y+12	; 0x0c
     c98:	2f 77       	andi	r18, 0x7F	; 127
     c9a:	22 2e       	mov	r2, r18
     c9c:	16 c0       	rjmp	.+44     	; 0xcca <vfprintf+0x192>
     c9e:	38 01       	movw	r6, r16
     ca0:	f2 e0       	ldi	r31, 0x02	; 2
     ca2:	6f 0e       	add	r6, r31
     ca4:	71 1c       	adc	r7, r1
     ca6:	f8 01       	movw	r30, r16
     ca8:	a0 80       	ld	r10, Z
     caa:	b1 80       	ldd	r11, Z+1	; 0x01
     cac:	26 ff       	sbrs	r18, 6
     cae:	03 c0       	rjmp	.+6      	; 0xcb6 <vfprintf+0x17e>
     cb0:	65 2d       	mov	r22, r5
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <vfprintf+0x182>
     cb6:	6f ef       	ldi	r22, 0xFF	; 255
     cb8:	7f ef       	ldi	r23, 0xFF	; 255
     cba:	c5 01       	movw	r24, r10
     cbc:	2c 87       	std	Y+12, r18	; 0x0c
     cbe:	2a d1       	rcall	.+596    	; 0xf14 <strnlen_P>
     cc0:	2c 01       	movw	r4, r24
     cc2:	2c 85       	ldd	r18, Y+12	; 0x0c
     cc4:	20 68       	ori	r18, 0x80	; 128
     cc6:	22 2e       	mov	r2, r18
     cc8:	83 01       	movw	r16, r6
     cca:	23 fc       	sbrc	r2, 3
     ccc:	19 c0       	rjmp	.+50     	; 0xd00 <vfprintf+0x1c8>
     cce:	83 2d       	mov	r24, r3
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	48 16       	cp	r4, r24
     cd4:	59 06       	cpc	r5, r25
     cd6:	a0 f4       	brcc	.+40     	; 0xd00 <vfprintf+0x1c8>
     cd8:	b7 01       	movw	r22, r14
     cda:	80 e2       	ldi	r24, 0x20	; 32
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	30 d1       	rcall	.+608    	; 0xf40 <fputc>
     ce0:	3a 94       	dec	r3
     ce2:	f5 cf       	rjmp	.-22     	; 0xcce <vfprintf+0x196>
     ce4:	f5 01       	movw	r30, r10
     ce6:	27 fc       	sbrc	r2, 7
     ce8:	85 91       	lpm	r24, Z+
     cea:	27 fe       	sbrs	r2, 7
     cec:	81 91       	ld	r24, Z+
     cee:	5f 01       	movw	r10, r30
     cf0:	b7 01       	movw	r22, r14
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	25 d1       	rcall	.+586    	; 0xf40 <fputc>
     cf6:	31 10       	cpse	r3, r1
     cf8:	3a 94       	dec	r3
     cfa:	f1 e0       	ldi	r31, 0x01	; 1
     cfc:	4f 1a       	sub	r4, r31
     cfe:	51 08       	sbc	r5, r1
     d00:	41 14       	cp	r4, r1
     d02:	51 04       	cpc	r5, r1
     d04:	79 f7       	brne	.-34     	; 0xce4 <vfprintf+0x1ac>
     d06:	de c0       	rjmp	.+444    	; 0xec4 <vfprintf+0x38c>
     d08:	84 36       	cpi	r24, 0x64	; 100
     d0a:	11 f0       	breq	.+4      	; 0xd10 <vfprintf+0x1d8>
     d0c:	89 36       	cpi	r24, 0x69	; 105
     d0e:	31 f5       	brne	.+76     	; 0xd5c <vfprintf+0x224>
     d10:	f8 01       	movw	r30, r16
     d12:	27 ff       	sbrs	r18, 7
     d14:	07 c0       	rjmp	.+14     	; 0xd24 <vfprintf+0x1ec>
     d16:	60 81       	ld	r22, Z
     d18:	71 81       	ldd	r23, Z+1	; 0x01
     d1a:	82 81       	ldd	r24, Z+2	; 0x02
     d1c:	93 81       	ldd	r25, Z+3	; 0x03
     d1e:	0c 5f       	subi	r16, 0xFC	; 252
     d20:	1f 4f       	sbci	r17, 0xFF	; 255
     d22:	08 c0       	rjmp	.+16     	; 0xd34 <vfprintf+0x1fc>
     d24:	60 81       	ld	r22, Z
     d26:	71 81       	ldd	r23, Z+1	; 0x01
     d28:	07 2e       	mov	r0, r23
     d2a:	00 0c       	add	r0, r0
     d2c:	88 0b       	sbc	r24, r24
     d2e:	99 0b       	sbc	r25, r25
     d30:	0e 5f       	subi	r16, 0xFE	; 254
     d32:	1f 4f       	sbci	r17, 0xFF	; 255
     d34:	2f 76       	andi	r18, 0x6F	; 111
     d36:	72 2e       	mov	r7, r18
     d38:	97 ff       	sbrs	r25, 7
     d3a:	09 c0       	rjmp	.+18     	; 0xd4e <vfprintf+0x216>
     d3c:	90 95       	com	r25
     d3e:	80 95       	com	r24
     d40:	70 95       	com	r23
     d42:	61 95       	neg	r22
     d44:	7f 4f       	sbci	r23, 0xFF	; 255
     d46:	8f 4f       	sbci	r24, 0xFF	; 255
     d48:	9f 4f       	sbci	r25, 0xFF	; 255
     d4a:	20 68       	ori	r18, 0x80	; 128
     d4c:	72 2e       	mov	r7, r18
     d4e:	2a e0       	ldi	r18, 0x0A	; 10
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	a4 01       	movw	r20, r8
     d54:	2d d1       	rcall	.+602    	; 0xfb0 <__ultoa_invert>
     d56:	a8 2e       	mov	r10, r24
     d58:	a8 18       	sub	r10, r8
     d5a:	43 c0       	rjmp	.+134    	; 0xde2 <vfprintf+0x2aa>
     d5c:	85 37       	cpi	r24, 0x75	; 117
     d5e:	29 f4       	brne	.+10     	; 0xd6a <vfprintf+0x232>
     d60:	2f 7e       	andi	r18, 0xEF	; 239
     d62:	b2 2e       	mov	r11, r18
     d64:	2a e0       	ldi	r18, 0x0A	; 10
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	25 c0       	rjmp	.+74     	; 0xdb4 <vfprintf+0x27c>
     d6a:	f2 2f       	mov	r31, r18
     d6c:	f9 7f       	andi	r31, 0xF9	; 249
     d6e:	bf 2e       	mov	r11, r31
     d70:	8f 36       	cpi	r24, 0x6F	; 111
     d72:	c1 f0       	breq	.+48     	; 0xda4 <vfprintf+0x26c>
     d74:	18 f4       	brcc	.+6      	; 0xd7c <vfprintf+0x244>
     d76:	88 35       	cpi	r24, 0x58	; 88
     d78:	79 f0       	breq	.+30     	; 0xd98 <vfprintf+0x260>
     d7a:	ad c0       	rjmp	.+346    	; 0xed6 <vfprintf+0x39e>
     d7c:	80 37       	cpi	r24, 0x70	; 112
     d7e:	19 f0       	breq	.+6      	; 0xd86 <vfprintf+0x24e>
     d80:	88 37       	cpi	r24, 0x78	; 120
     d82:	21 f0       	breq	.+8      	; 0xd8c <vfprintf+0x254>
     d84:	a8 c0       	rjmp	.+336    	; 0xed6 <vfprintf+0x39e>
     d86:	2f 2f       	mov	r18, r31
     d88:	20 61       	ori	r18, 0x10	; 16
     d8a:	b2 2e       	mov	r11, r18
     d8c:	b4 fe       	sbrs	r11, 4
     d8e:	0d c0       	rjmp	.+26     	; 0xdaa <vfprintf+0x272>
     d90:	8b 2d       	mov	r24, r11
     d92:	84 60       	ori	r24, 0x04	; 4
     d94:	b8 2e       	mov	r11, r24
     d96:	09 c0       	rjmp	.+18     	; 0xdaa <vfprintf+0x272>
     d98:	24 ff       	sbrs	r18, 4
     d9a:	0a c0       	rjmp	.+20     	; 0xdb0 <vfprintf+0x278>
     d9c:	9f 2f       	mov	r25, r31
     d9e:	96 60       	ori	r25, 0x06	; 6
     da0:	b9 2e       	mov	r11, r25
     da2:	06 c0       	rjmp	.+12     	; 0xdb0 <vfprintf+0x278>
     da4:	28 e0       	ldi	r18, 0x08	; 8
     da6:	30 e0       	ldi	r19, 0x00	; 0
     da8:	05 c0       	rjmp	.+10     	; 0xdb4 <vfprintf+0x27c>
     daa:	20 e1       	ldi	r18, 0x10	; 16
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	02 c0       	rjmp	.+4      	; 0xdb4 <vfprintf+0x27c>
     db0:	20 e1       	ldi	r18, 0x10	; 16
     db2:	32 e0       	ldi	r19, 0x02	; 2
     db4:	f8 01       	movw	r30, r16
     db6:	b7 fe       	sbrs	r11, 7
     db8:	07 c0       	rjmp	.+14     	; 0xdc8 <vfprintf+0x290>
     dba:	60 81       	ld	r22, Z
     dbc:	71 81       	ldd	r23, Z+1	; 0x01
     dbe:	82 81       	ldd	r24, Z+2	; 0x02
     dc0:	93 81       	ldd	r25, Z+3	; 0x03
     dc2:	0c 5f       	subi	r16, 0xFC	; 252
     dc4:	1f 4f       	sbci	r17, 0xFF	; 255
     dc6:	06 c0       	rjmp	.+12     	; 0xdd4 <vfprintf+0x29c>
     dc8:	60 81       	ld	r22, Z
     dca:	71 81       	ldd	r23, Z+1	; 0x01
     dcc:	80 e0       	ldi	r24, 0x00	; 0
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	0e 5f       	subi	r16, 0xFE	; 254
     dd2:	1f 4f       	sbci	r17, 0xFF	; 255
     dd4:	a4 01       	movw	r20, r8
     dd6:	ec d0       	rcall	.+472    	; 0xfb0 <__ultoa_invert>
     dd8:	a8 2e       	mov	r10, r24
     dda:	a8 18       	sub	r10, r8
     ddc:	fb 2d       	mov	r31, r11
     dde:	ff 77       	andi	r31, 0x7F	; 127
     de0:	7f 2e       	mov	r7, r31
     de2:	76 fe       	sbrs	r7, 6
     de4:	0b c0       	rjmp	.+22     	; 0xdfc <vfprintf+0x2c4>
     de6:	37 2d       	mov	r19, r7
     de8:	3e 7f       	andi	r19, 0xFE	; 254
     dea:	a5 14       	cp	r10, r5
     dec:	50 f4       	brcc	.+20     	; 0xe02 <vfprintf+0x2ca>
     dee:	74 fe       	sbrs	r7, 4
     df0:	0a c0       	rjmp	.+20     	; 0xe06 <vfprintf+0x2ce>
     df2:	72 fc       	sbrc	r7, 2
     df4:	08 c0       	rjmp	.+16     	; 0xe06 <vfprintf+0x2ce>
     df6:	37 2d       	mov	r19, r7
     df8:	3e 7e       	andi	r19, 0xEE	; 238
     dfa:	05 c0       	rjmp	.+10     	; 0xe06 <vfprintf+0x2ce>
     dfc:	ba 2c       	mov	r11, r10
     dfe:	37 2d       	mov	r19, r7
     e00:	03 c0       	rjmp	.+6      	; 0xe08 <vfprintf+0x2d0>
     e02:	ba 2c       	mov	r11, r10
     e04:	01 c0       	rjmp	.+2      	; 0xe08 <vfprintf+0x2d0>
     e06:	b5 2c       	mov	r11, r5
     e08:	34 ff       	sbrs	r19, 4
     e0a:	0d c0       	rjmp	.+26     	; 0xe26 <vfprintf+0x2ee>
     e0c:	fe 01       	movw	r30, r28
     e0e:	ea 0d       	add	r30, r10
     e10:	f1 1d       	adc	r31, r1
     e12:	80 81       	ld	r24, Z
     e14:	80 33       	cpi	r24, 0x30	; 48
     e16:	11 f4       	brne	.+4      	; 0xe1c <vfprintf+0x2e4>
     e18:	39 7e       	andi	r19, 0xE9	; 233
     e1a:	09 c0       	rjmp	.+18     	; 0xe2e <vfprintf+0x2f6>
     e1c:	32 ff       	sbrs	r19, 2
     e1e:	06 c0       	rjmp	.+12     	; 0xe2c <vfprintf+0x2f4>
     e20:	b3 94       	inc	r11
     e22:	b3 94       	inc	r11
     e24:	04 c0       	rjmp	.+8      	; 0xe2e <vfprintf+0x2f6>
     e26:	83 2f       	mov	r24, r19
     e28:	86 78       	andi	r24, 0x86	; 134
     e2a:	09 f0       	breq	.+2      	; 0xe2e <vfprintf+0x2f6>
     e2c:	b3 94       	inc	r11
     e2e:	33 fd       	sbrc	r19, 3
     e30:	12 c0       	rjmp	.+36     	; 0xe56 <vfprintf+0x31e>
     e32:	30 ff       	sbrs	r19, 0
     e34:	06 c0       	rjmp	.+12     	; 0xe42 <vfprintf+0x30a>
     e36:	5a 2c       	mov	r5, r10
     e38:	b3 14       	cp	r11, r3
     e3a:	18 f4       	brcc	.+6      	; 0xe42 <vfprintf+0x30a>
     e3c:	53 0c       	add	r5, r3
     e3e:	5b 18       	sub	r5, r11
     e40:	b3 2c       	mov	r11, r3
     e42:	b3 14       	cp	r11, r3
     e44:	60 f4       	brcc	.+24     	; 0xe5e <vfprintf+0x326>
     e46:	b7 01       	movw	r22, r14
     e48:	80 e2       	ldi	r24, 0x20	; 32
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	3c 87       	std	Y+12, r19	; 0x0c
     e4e:	78 d0       	rcall	.+240    	; 0xf40 <fputc>
     e50:	b3 94       	inc	r11
     e52:	3c 85       	ldd	r19, Y+12	; 0x0c
     e54:	f6 cf       	rjmp	.-20     	; 0xe42 <vfprintf+0x30a>
     e56:	b3 14       	cp	r11, r3
     e58:	10 f4       	brcc	.+4      	; 0xe5e <vfprintf+0x326>
     e5a:	3b 18       	sub	r3, r11
     e5c:	01 c0       	rjmp	.+2      	; 0xe60 <vfprintf+0x328>
     e5e:	31 2c       	mov	r3, r1
     e60:	34 ff       	sbrs	r19, 4
     e62:	11 c0       	rjmp	.+34     	; 0xe86 <vfprintf+0x34e>
     e64:	b7 01       	movw	r22, r14
     e66:	80 e3       	ldi	r24, 0x30	; 48
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	3c 87       	std	Y+12, r19	; 0x0c
     e6c:	69 d0       	rcall	.+210    	; 0xf40 <fputc>
     e6e:	3c 85       	ldd	r19, Y+12	; 0x0c
     e70:	32 ff       	sbrs	r19, 2
     e72:	16 c0       	rjmp	.+44     	; 0xea0 <vfprintf+0x368>
     e74:	31 fd       	sbrc	r19, 1
     e76:	03 c0       	rjmp	.+6      	; 0xe7e <vfprintf+0x346>
     e78:	88 e7       	ldi	r24, 0x78	; 120
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	02 c0       	rjmp	.+4      	; 0xe82 <vfprintf+0x34a>
     e7e:	88 e5       	ldi	r24, 0x58	; 88
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	b7 01       	movw	r22, r14
     e84:	0c c0       	rjmp	.+24     	; 0xe9e <vfprintf+0x366>
     e86:	83 2f       	mov	r24, r19
     e88:	86 78       	andi	r24, 0x86	; 134
     e8a:	51 f0       	breq	.+20     	; 0xea0 <vfprintf+0x368>
     e8c:	31 ff       	sbrs	r19, 1
     e8e:	02 c0       	rjmp	.+4      	; 0xe94 <vfprintf+0x35c>
     e90:	8b e2       	ldi	r24, 0x2B	; 43
     e92:	01 c0       	rjmp	.+2      	; 0xe96 <vfprintf+0x35e>
     e94:	80 e2       	ldi	r24, 0x20	; 32
     e96:	37 fd       	sbrc	r19, 7
     e98:	8d e2       	ldi	r24, 0x2D	; 45
     e9a:	b7 01       	movw	r22, r14
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	50 d0       	rcall	.+160    	; 0xf40 <fputc>
     ea0:	a5 14       	cp	r10, r5
     ea2:	30 f4       	brcc	.+12     	; 0xeb0 <vfprintf+0x378>
     ea4:	b7 01       	movw	r22, r14
     ea6:	80 e3       	ldi	r24, 0x30	; 48
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	4a d0       	rcall	.+148    	; 0xf40 <fputc>
     eac:	5a 94       	dec	r5
     eae:	f8 cf       	rjmp	.-16     	; 0xea0 <vfprintf+0x368>
     eb0:	aa 94       	dec	r10
     eb2:	f4 01       	movw	r30, r8
     eb4:	ea 0d       	add	r30, r10
     eb6:	f1 1d       	adc	r31, r1
     eb8:	80 81       	ld	r24, Z
     eba:	b7 01       	movw	r22, r14
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	40 d0       	rcall	.+128    	; 0xf40 <fputc>
     ec0:	a1 10       	cpse	r10, r1
     ec2:	f6 cf       	rjmp	.-20     	; 0xeb0 <vfprintf+0x378>
     ec4:	33 20       	and	r3, r3
     ec6:	09 f4       	brne	.+2      	; 0xeca <vfprintf+0x392>
     ec8:	5d ce       	rjmp	.-838    	; 0xb84 <vfprintf+0x4c>
     eca:	b7 01       	movw	r22, r14
     ecc:	80 e2       	ldi	r24, 0x20	; 32
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	37 d0       	rcall	.+110    	; 0xf40 <fputc>
     ed2:	3a 94       	dec	r3
     ed4:	f7 cf       	rjmp	.-18     	; 0xec4 <vfprintf+0x38c>
     ed6:	f7 01       	movw	r30, r14
     ed8:	86 81       	ldd	r24, Z+6	; 0x06
     eda:	97 81       	ldd	r25, Z+7	; 0x07
     edc:	02 c0       	rjmp	.+4      	; 0xee2 <vfprintf+0x3aa>
     ede:	8f ef       	ldi	r24, 0xFF	; 255
     ee0:	9f ef       	ldi	r25, 0xFF	; 255
     ee2:	2c 96       	adiw	r28, 0x0c	; 12
     ee4:	0f b6       	in	r0, 0x3f	; 63
     ee6:	f8 94       	cli
     ee8:	de bf       	out	0x3e, r29	; 62
     eea:	0f be       	out	0x3f, r0	; 63
     eec:	cd bf       	out	0x3d, r28	; 61
     eee:	df 91       	pop	r29
     ef0:	cf 91       	pop	r28
     ef2:	1f 91       	pop	r17
     ef4:	0f 91       	pop	r16
     ef6:	ff 90       	pop	r15
     ef8:	ef 90       	pop	r14
     efa:	df 90       	pop	r13
     efc:	cf 90       	pop	r12
     efe:	bf 90       	pop	r11
     f00:	af 90       	pop	r10
     f02:	9f 90       	pop	r9
     f04:	8f 90       	pop	r8
     f06:	7f 90       	pop	r7
     f08:	6f 90       	pop	r6
     f0a:	5f 90       	pop	r5
     f0c:	4f 90       	pop	r4
     f0e:	3f 90       	pop	r3
     f10:	2f 90       	pop	r2
     f12:	08 95       	ret

00000f14 <strnlen_P>:
     f14:	fc 01       	movw	r30, r24
     f16:	05 90       	lpm	r0, Z+
     f18:	61 50       	subi	r22, 0x01	; 1
     f1a:	70 40       	sbci	r23, 0x00	; 0
     f1c:	01 10       	cpse	r0, r1
     f1e:	d8 f7       	brcc	.-10     	; 0xf16 <strnlen_P+0x2>
     f20:	80 95       	com	r24
     f22:	90 95       	com	r25
     f24:	8e 0f       	add	r24, r30
     f26:	9f 1f       	adc	r25, r31
     f28:	08 95       	ret

00000f2a <strnlen>:
     f2a:	fc 01       	movw	r30, r24
     f2c:	61 50       	subi	r22, 0x01	; 1
     f2e:	70 40       	sbci	r23, 0x00	; 0
     f30:	01 90       	ld	r0, Z+
     f32:	01 10       	cpse	r0, r1
     f34:	d8 f7       	brcc	.-10     	; 0xf2c <strnlen+0x2>
     f36:	80 95       	com	r24
     f38:	90 95       	com	r25
     f3a:	8e 0f       	add	r24, r30
     f3c:	9f 1f       	adc	r25, r31
     f3e:	08 95       	ret

00000f40 <fputc>:
     f40:	0f 93       	push	r16
     f42:	1f 93       	push	r17
     f44:	cf 93       	push	r28
     f46:	df 93       	push	r29
     f48:	fb 01       	movw	r30, r22
     f4a:	23 81       	ldd	r18, Z+3	; 0x03
     f4c:	21 fd       	sbrc	r18, 1
     f4e:	03 c0       	rjmp	.+6      	; 0xf56 <fputc+0x16>
     f50:	8f ef       	ldi	r24, 0xFF	; 255
     f52:	9f ef       	ldi	r25, 0xFF	; 255
     f54:	28 c0       	rjmp	.+80     	; 0xfa6 <fputc+0x66>
     f56:	22 ff       	sbrs	r18, 2
     f58:	16 c0       	rjmp	.+44     	; 0xf86 <fputc+0x46>
     f5a:	46 81       	ldd	r20, Z+6	; 0x06
     f5c:	57 81       	ldd	r21, Z+7	; 0x07
     f5e:	24 81       	ldd	r18, Z+4	; 0x04
     f60:	35 81       	ldd	r19, Z+5	; 0x05
     f62:	42 17       	cp	r20, r18
     f64:	53 07       	cpc	r21, r19
     f66:	44 f4       	brge	.+16     	; 0xf78 <fputc+0x38>
     f68:	a0 81       	ld	r26, Z
     f6a:	b1 81       	ldd	r27, Z+1	; 0x01
     f6c:	9d 01       	movw	r18, r26
     f6e:	2f 5f       	subi	r18, 0xFF	; 255
     f70:	3f 4f       	sbci	r19, 0xFF	; 255
     f72:	31 83       	std	Z+1, r19	; 0x01
     f74:	20 83       	st	Z, r18
     f76:	8c 93       	st	X, r24
     f78:	26 81       	ldd	r18, Z+6	; 0x06
     f7a:	37 81       	ldd	r19, Z+7	; 0x07
     f7c:	2f 5f       	subi	r18, 0xFF	; 255
     f7e:	3f 4f       	sbci	r19, 0xFF	; 255
     f80:	37 83       	std	Z+7, r19	; 0x07
     f82:	26 83       	std	Z+6, r18	; 0x06
     f84:	10 c0       	rjmp	.+32     	; 0xfa6 <fputc+0x66>
     f86:	eb 01       	movw	r28, r22
     f88:	09 2f       	mov	r16, r25
     f8a:	18 2f       	mov	r17, r24
     f8c:	00 84       	ldd	r0, Z+8	; 0x08
     f8e:	f1 85       	ldd	r31, Z+9	; 0x09
     f90:	e0 2d       	mov	r30, r0
     f92:	09 95       	icall
     f94:	89 2b       	or	r24, r25
     f96:	e1 f6       	brne	.-72     	; 0xf50 <fputc+0x10>
     f98:	8e 81       	ldd	r24, Y+6	; 0x06
     f9a:	9f 81       	ldd	r25, Y+7	; 0x07
     f9c:	01 96       	adiw	r24, 0x01	; 1
     f9e:	9f 83       	std	Y+7, r25	; 0x07
     fa0:	8e 83       	std	Y+6, r24	; 0x06
     fa2:	81 2f       	mov	r24, r17
     fa4:	90 2f       	mov	r25, r16
     fa6:	df 91       	pop	r29
     fa8:	cf 91       	pop	r28
     faa:	1f 91       	pop	r17
     fac:	0f 91       	pop	r16
     fae:	08 95       	ret

00000fb0 <__ultoa_invert>:
     fb0:	fa 01       	movw	r30, r20
     fb2:	aa 27       	eor	r26, r26
     fb4:	28 30       	cpi	r18, 0x08	; 8
     fb6:	51 f1       	breq	.+84     	; 0x100c <__ultoa_invert+0x5c>
     fb8:	20 31       	cpi	r18, 0x10	; 16
     fba:	81 f1       	breq	.+96     	; 0x101c <__ultoa_invert+0x6c>
     fbc:	e8 94       	clt
     fbe:	6f 93       	push	r22
     fc0:	6e 7f       	andi	r22, 0xFE	; 254
     fc2:	6e 5f       	subi	r22, 0xFE	; 254
     fc4:	7f 4f       	sbci	r23, 0xFF	; 255
     fc6:	8f 4f       	sbci	r24, 0xFF	; 255
     fc8:	9f 4f       	sbci	r25, 0xFF	; 255
     fca:	af 4f       	sbci	r26, 0xFF	; 255
     fcc:	b1 e0       	ldi	r27, 0x01	; 1
     fce:	3e d0       	rcall	.+124    	; 0x104c <__ultoa_invert+0x9c>
     fd0:	b4 e0       	ldi	r27, 0x04	; 4
     fd2:	3c d0       	rcall	.+120    	; 0x104c <__ultoa_invert+0x9c>
     fd4:	67 0f       	add	r22, r23
     fd6:	78 1f       	adc	r23, r24
     fd8:	89 1f       	adc	r24, r25
     fda:	9a 1f       	adc	r25, r26
     fdc:	a1 1d       	adc	r26, r1
     fde:	68 0f       	add	r22, r24
     fe0:	79 1f       	adc	r23, r25
     fe2:	8a 1f       	adc	r24, r26
     fe4:	91 1d       	adc	r25, r1
     fe6:	a1 1d       	adc	r26, r1
     fe8:	6a 0f       	add	r22, r26
     fea:	71 1d       	adc	r23, r1
     fec:	81 1d       	adc	r24, r1
     fee:	91 1d       	adc	r25, r1
     ff0:	a1 1d       	adc	r26, r1
     ff2:	20 d0       	rcall	.+64     	; 0x1034 <__ultoa_invert+0x84>
     ff4:	09 f4       	brne	.+2      	; 0xff8 <__ultoa_invert+0x48>
     ff6:	68 94       	set
     ff8:	3f 91       	pop	r19
     ffa:	2a e0       	ldi	r18, 0x0A	; 10
     ffc:	26 9f       	mul	r18, r22
     ffe:	11 24       	eor	r1, r1
    1000:	30 19       	sub	r19, r0
    1002:	30 5d       	subi	r19, 0xD0	; 208
    1004:	31 93       	st	Z+, r19
    1006:	de f6       	brtc	.-74     	; 0xfbe <__ultoa_invert+0xe>
    1008:	cf 01       	movw	r24, r30
    100a:	08 95       	ret
    100c:	46 2f       	mov	r20, r22
    100e:	47 70       	andi	r20, 0x07	; 7
    1010:	40 5d       	subi	r20, 0xD0	; 208
    1012:	41 93       	st	Z+, r20
    1014:	b3 e0       	ldi	r27, 0x03	; 3
    1016:	0f d0       	rcall	.+30     	; 0x1036 <__ultoa_invert+0x86>
    1018:	c9 f7       	brne	.-14     	; 0x100c <__ultoa_invert+0x5c>
    101a:	f6 cf       	rjmp	.-20     	; 0x1008 <__ultoa_invert+0x58>
    101c:	46 2f       	mov	r20, r22
    101e:	4f 70       	andi	r20, 0x0F	; 15
    1020:	40 5d       	subi	r20, 0xD0	; 208
    1022:	4a 33       	cpi	r20, 0x3A	; 58
    1024:	18 f0       	brcs	.+6      	; 0x102c <__ultoa_invert+0x7c>
    1026:	49 5d       	subi	r20, 0xD9	; 217
    1028:	31 fd       	sbrc	r19, 1
    102a:	40 52       	subi	r20, 0x20	; 32
    102c:	41 93       	st	Z+, r20
    102e:	02 d0       	rcall	.+4      	; 0x1034 <__ultoa_invert+0x84>
    1030:	a9 f7       	brne	.-22     	; 0x101c <__ultoa_invert+0x6c>
    1032:	ea cf       	rjmp	.-44     	; 0x1008 <__ultoa_invert+0x58>
    1034:	b4 e0       	ldi	r27, 0x04	; 4
    1036:	a6 95       	lsr	r26
    1038:	97 95       	ror	r25
    103a:	87 95       	ror	r24
    103c:	77 95       	ror	r23
    103e:	67 95       	ror	r22
    1040:	ba 95       	dec	r27
    1042:	c9 f7       	brne	.-14     	; 0x1036 <__ultoa_invert+0x86>
    1044:	00 97       	sbiw	r24, 0x00	; 0
    1046:	61 05       	cpc	r22, r1
    1048:	71 05       	cpc	r23, r1
    104a:	08 95       	ret
    104c:	9b 01       	movw	r18, r22
    104e:	ac 01       	movw	r20, r24
    1050:	0a 2e       	mov	r0, r26
    1052:	06 94       	lsr	r0
    1054:	57 95       	ror	r21
    1056:	47 95       	ror	r20
    1058:	37 95       	ror	r19
    105a:	27 95       	ror	r18
    105c:	ba 95       	dec	r27
    105e:	c9 f7       	brne	.-14     	; 0x1052 <__ultoa_invert+0xa2>
    1060:	62 0f       	add	r22, r18
    1062:	73 1f       	adc	r23, r19
    1064:	84 1f       	adc	r24, r20
    1066:	95 1f       	adc	r25, r21
    1068:	a0 1d       	adc	r26, r0
    106a:	08 95       	ret

0000106c <_exit>:
    106c:	f8 94       	cli

0000106e <__stop_program>:
    106e:	ff cf       	rjmp	.-2      	; 0x106e <__stop_program>
