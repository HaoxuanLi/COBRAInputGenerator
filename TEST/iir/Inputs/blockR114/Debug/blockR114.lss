
blockR114.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000310  00800100  000010ee  00001182  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000106  00800410  00800410  00001492  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001492  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00001530  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010fa  00000000  00000000  000015b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cba  00000000  00000000  000026b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000429  00000000  00000000  0000336c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001dc  00000000  00000000  00003798  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000752  00000000  00000000  00003974  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006e7  00000000  00000000  000040c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000047ad  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
       2:	00 00       	nop
       4:	65 c0       	rjmp	.+202    	; 0xd0 <__bad_interrupt>
       6:	00 00       	nop
       8:	0b c4       	rjmp	.+2070   	; 0x820 <__vector_2>
       a:	00 00       	nop
       c:	61 c0       	rjmp	.+194    	; 0xd0 <__bad_interrupt>
       e:	00 00       	nop
      10:	5f c0       	rjmp	.+190    	; 0xd0 <__bad_interrupt>
      12:	00 00       	nop
      14:	5d c0       	rjmp	.+186    	; 0xd0 <__bad_interrupt>
      16:	00 00       	nop
      18:	5b c0       	rjmp	.+182    	; 0xd0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	59 c0       	rjmp	.+178    	; 0xd0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	57 c0       	rjmp	.+174    	; 0xd0 <__bad_interrupt>
      22:	00 00       	nop
      24:	55 c0       	rjmp	.+170    	; 0xd0 <__bad_interrupt>
      26:	00 00       	nop
      28:	53 c0       	rjmp	.+166    	; 0xd0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	51 c0       	rjmp	.+162    	; 0xd0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4f c0       	rjmp	.+158    	; 0xd0 <__bad_interrupt>
      32:	00 00       	nop
      34:	4d c0       	rjmp	.+154    	; 0xd0 <__bad_interrupt>
      36:	00 00       	nop
      38:	4b c0       	rjmp	.+150    	; 0xd0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	49 c0       	rjmp	.+146    	; 0xd0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	47 c0       	rjmp	.+142    	; 0xd0 <__bad_interrupt>
      42:	00 00       	nop
      44:	45 c0       	rjmp	.+138    	; 0xd0 <__bad_interrupt>
      46:	00 00       	nop
      48:	43 c0       	rjmp	.+134    	; 0xd0 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	41 c0       	rjmp	.+130    	; 0xd0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3f c0       	rjmp	.+126    	; 0xd0 <__bad_interrupt>
      52:	00 00       	nop
      54:	3d c0       	rjmp	.+122    	; 0xd0 <__bad_interrupt>
      56:	00 00       	nop
      58:	3b c0       	rjmp	.+118    	; 0xd0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	39 c0       	rjmp	.+114    	; 0xd0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	37 c0       	rjmp	.+110    	; 0xd0 <__bad_interrupt>
      62:	00 00       	nop
      64:	35 c0       	rjmp	.+106    	; 0xd0 <__bad_interrupt>
      66:	00 00       	nop
      68:	33 c0       	rjmp	.+102    	; 0xd0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	31 c0       	rjmp	.+98     	; 0xd0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2f c0       	rjmp	.+94     	; 0xd0 <__bad_interrupt>
      72:	00 00       	nop
      74:	2d c0       	rjmp	.+90     	; 0xd0 <__bad_interrupt>
      76:	00 00       	nop
      78:	2b c0       	rjmp	.+86     	; 0xd0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	29 c0       	rjmp	.+82     	; 0xd0 <__bad_interrupt>
      7e:	00 00       	nop
      80:	27 c0       	rjmp	.+78     	; 0xd0 <__bad_interrupt>
      82:	00 00       	nop
      84:	25 c0       	rjmp	.+74     	; 0xd0 <__bad_interrupt>
      86:	00 00       	nop
      88:	23 c0       	rjmp	.+70     	; 0xd0 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	21 c0       	rjmp	.+66     	; 0xd0 <__bad_interrupt>
      8e:	00 00       	nop
      90:	1f c0       	rjmp	.+62     	; 0xd0 <__bad_interrupt>
	...

00000094 <__ctors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d0 e1       	ldi	r29, 0x10	; 16
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	14 e0       	ldi	r17, 0x04	; 4
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	ee ee       	ldi	r30, 0xEE	; 238
      a8:	f0 e1       	ldi	r31, 0x10	; 16
      aa:	00 e0       	ldi	r16, 0x00	; 0
      ac:	0b bf       	out	0x3b, r16	; 59
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
      b0:	07 90       	elpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	a0 31       	cpi	r26, 0x10	; 16
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
      ba:	25 e0       	ldi	r18, 0x05	; 5
      bc:	a0 e1       	ldi	r26, 0x10	; 16
      be:	b4 e0       	ldi	r27, 0x04	; 4
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	a6 31       	cpi	r26, 0x16	; 22
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	42 d3       	rcall	.+1668   	; 0x750 <main>
      cc:	0c 94 75 08 	jmp	0x10ea	; 0x10ea <_exit>

000000d0 <__bad_interrupt>:
      d0:	97 cf       	rjmp	.-210    	; 0x0 <__vectors>

000000d2 <iir_init>:
/*
  Initialization- and return-value-related functions
*/

void iir_init( void )
{
      d2:	cf 93       	push	r28
      d4:	df 93       	push	r29
      d6:	1f 92       	push	r1
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
  int f;
  unsigned int i;
  unsigned char *p;
  volatile char bitmask = 0;
      dc:	19 82       	std	Y+1, r1	; 0x01


  _Pragma( "loopbound min 20 max 20" )
  for ( f = 0 ; f < 5 * 4; f++ )
      de:	80 e0       	ldi	r24, 0x00	; 0
      e0:	90 e0       	ldi	r25, 0x00	; 0
    iir_coefficients[ f ] = 7;
      e2:	40 e0       	ldi	r20, 0x00	; 0
      e4:	50 e0       	ldi	r21, 0x00	; 0
      e6:	60 ee       	ldi	r22, 0xE0	; 224
      e8:	70 e4       	ldi	r23, 0x40	; 64
      ea:	fc 01       	movw	r30, r24
      ec:	ee 0f       	add	r30, r30
      ee:	ff 1f       	adc	r31, r31
      f0:	ee 0f       	add	r30, r30
      f2:	ff 1f       	adc	r31, r31
      f4:	ee 5e       	subi	r30, 0xEE	; 238
      f6:	fb 4f       	sbci	r31, 0xFB	; 251
      f8:	40 83       	st	Z, r20
      fa:	51 83       	std	Z+1, r21	; 0x01
      fc:	62 83       	std	Z+2, r22	; 0x02
      fe:	73 83       	std	Z+3, r23	; 0x03
  unsigned char *p;
  volatile char bitmask = 0;


  _Pragma( "loopbound min 20 max 20" )
  for ( f = 0 ; f < 5 * 4; f++ )
     100:	01 96       	adiw	r24, 0x01	; 1
     102:	84 31       	cpi	r24, 0x14	; 20
     104:	91 05       	cpc	r25, r1
     106:	89 f7       	brne	.-30     	; 0xea <iir_init+0x18>
     108:	80 e0       	ldi	r24, 0x00	; 0
     10a:	90 e0       	ldi	r25, 0x00	; 0
    iir_coefficients[ f ] = 7;

  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
    iir_wi[ f ] = 0;
     10c:	fc 01       	movw	r30, r24
     10e:	ee 0f       	add	r30, r30
     110:	ff 1f       	adc	r31, r31
     112:	ee 0f       	add	r30, r30
     114:	ff 1f       	adc	r31, r31
     116:	ea 59       	subi	r30, 0x9A	; 154
     118:	fb 4f       	sbci	r31, 0xFB	; 251
     11a:	10 82       	st	Z, r1
     11c:	11 82       	std	Z+1, r1	; 0x01
     11e:	12 82       	std	Z+2, r1	; 0x02
     120:	13 82       	std	Z+3, r1	; 0x03
  _Pragma( "loopbound min 20 max 20" )
  for ( f = 0 ; f < 5 * 4; f++ )
    iir_coefficients[ f ] = 7;

  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     122:	01 96       	adiw	r24, 0x01	; 1
     124:	88 30       	cpi	r24, 0x08	; 8
     126:	91 05       	cpc	r25, r1
     128:	89 f7       	brne	.-30     	; 0x10c <iir_init+0x3a>
    iir_wi[ f ] = 0;

  iir_x = ( float ) 1;
     12a:	80 e0       	ldi	r24, 0x00	; 0
     12c:	90 e0       	ldi	r25, 0x00	; 0
     12e:	a0 e8       	ldi	r26, 0x80	; 128
     130:	bf e3       	ldi	r27, 0x3F	; 63
     132:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <iir_x>
     136:	90 93 63 04 	sts	0x0463, r25	; 0x800463 <iir_x+0x1>
     13a:	a0 93 64 04 	sts	0x0464, r26	; 0x800464 <iir_x+0x2>
     13e:	b0 93 65 04 	sts	0x0465, r27	; 0x800465 <iir_x+0x3>

  /*
    Apply volatile XOR-bitmask to entire input array.
  */
  p = (unsigned char *) &iir_coefficients[ 0 ];
     142:	e2 e1       	ldi	r30, 0x12	; 18
     144:	f4 e0       	ldi	r31, 0x04	; 4
  _Pragma( "loopbound min 80 max 80" )
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
    *p ^= bitmask + *p;
     146:	99 81       	ldd	r25, Y+1	; 0x01
     148:	80 81       	ld	r24, Z
     14a:	98 0f       	add	r25, r24
     14c:	89 27       	eor	r24, r25
     14e:	81 93       	st	Z+, r24
  /*
    Apply volatile XOR-bitmask to entire input array.
  */
  p = (unsigned char *) &iir_coefficients[ 0 ];
  _Pragma( "loopbound min 80 max 80" )
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
     150:	84 e0       	ldi	r24, 0x04	; 4
     152:	e2 36       	cpi	r30, 0x62	; 98
     154:	f8 07       	cpc	r31, r24
     156:	b9 f7       	brne	.-18     	; 0x146 <iir_init+0x74>
     158:	e6 e6       	ldi	r30, 0x66	; 102
     15a:	f4 e0       	ldi	r31, 0x04	; 4
    *p ^= bitmask + *p;

  p = (unsigned char *) &iir_wi[ 0 ];
  _Pragma( "loopbound min 32 max 32" )
  for ( i = 0; i < sizeof( iir_wi ); ++i, ++p )
    *p ^= bitmask;
     15c:	89 81       	ldd	r24, Y+1	; 0x01
     15e:	90 81       	ld	r25, Z
     160:	89 27       	eor	r24, r25
     162:	81 93       	st	Z+, r24
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
    *p ^= bitmask + *p;

  p = (unsigned char *) &iir_wi[ 0 ];
  _Pragma( "loopbound min 32 max 32" )
  for ( i = 0; i < sizeof( iir_wi ); ++i, ++p )
     164:	84 e0       	ldi	r24, 0x04	; 4
     166:	e6 38       	cpi	r30, 0x86	; 134
     168:	f8 07       	cpc	r31, r24
     16a:	c1 f7       	brne	.-16     	; 0x15c <iir_init+0x8a>
    *p ^= bitmask;
}
     16c:	0f 90       	pop	r0
     16e:	df 91       	pop	r29
     170:	cf 91       	pop	r28
     172:	08 95       	ret

00000174 <iir_return>:


int iir_return( void )
{
     174:	cf 93       	push	r28
     176:	df 93       	push	r29
  float checksum = 0.0;
  int f;


  _Pragma( "loopbound min 8 max 8" )
	asm(
     178:	00 92 ae 04 	sts	0x04AE, r0	; 0x8004ae <register_address_org>
     17c:	10 92 af 04 	sts	0x04AF, r1	; 0x8004af <register_address_org+0x1>
     180:	20 92 b0 04 	sts	0x04B0, r2	; 0x8004b0 <register_address_org+0x2>
     184:	30 92 b1 04 	sts	0x04B1, r3	; 0x8004b1 <register_address_org+0x3>
     188:	40 92 b2 04 	sts	0x04B2, r4	; 0x8004b2 <register_address_org+0x4>
     18c:	50 92 b3 04 	sts	0x04B3, r5	; 0x8004b3 <register_address_org+0x5>
     190:	60 92 b4 04 	sts	0x04B4, r6	; 0x8004b4 <register_address_org+0x6>
     194:	70 92 b5 04 	sts	0x04B5, r7	; 0x8004b5 <register_address_org+0x7>
     198:	80 92 b6 04 	sts	0x04B6, r8	; 0x8004b6 <register_address_org+0x8>
     19c:	90 92 b7 04 	sts	0x04B7, r9	; 0x8004b7 <register_address_org+0x9>
     1a0:	a0 92 b8 04 	sts	0x04B8, r10	; 0x8004b8 <register_address_org+0xa>
     1a4:	b0 92 b9 04 	sts	0x04B9, r11	; 0x8004b9 <register_address_org+0xb>
     1a8:	c0 92 ba 04 	sts	0x04BA, r12	; 0x8004ba <register_address_org+0xc>
     1ac:	d0 92 bb 04 	sts	0x04BB, r13	; 0x8004bb <register_address_org+0xd>
     1b0:	e0 92 bc 04 	sts	0x04BC, r14	; 0x8004bc <register_address_org+0xe>
     1b4:	f0 92 bd 04 	sts	0x04BD, r15	; 0x8004bd <register_address_org+0xf>
     1b8:	00 93 be 04 	sts	0x04BE, r16	; 0x8004be <register_address_org+0x10>
     1bc:	10 93 bf 04 	sts	0x04BF, r17	; 0x8004bf <register_address_org+0x11>
     1c0:	20 93 c0 04 	sts	0x04C0, r18	; 0x8004c0 <register_address_org+0x12>
     1c4:	30 93 c1 04 	sts	0x04C1, r19	; 0x8004c1 <register_address_org+0x13>
     1c8:	40 93 c2 04 	sts	0x04C2, r20	; 0x8004c2 <register_address_org+0x14>
     1cc:	50 93 c3 04 	sts	0x04C3, r21	; 0x8004c3 <register_address_org+0x15>
     1d0:	60 93 c4 04 	sts	0x04C4, r22	; 0x8004c4 <register_address_org+0x16>
     1d4:	70 93 c5 04 	sts	0x04C5, r23	; 0x8004c5 <register_address_org+0x17>
     1d8:	80 93 c6 04 	sts	0x04C6, r24	; 0x8004c6 <register_address_org+0x18>
     1dc:	90 93 c7 04 	sts	0x04C7, r25	; 0x8004c7 <register_address_org+0x19>
     1e0:	a0 93 c8 04 	sts	0x04C8, r26	; 0x8004c8 <register_address_org+0x1a>
     1e4:	b0 93 c9 04 	sts	0x04C9, r27	; 0x8004c9 <register_address_org+0x1b>
     1e8:	c0 93 ca 04 	sts	0x04CA, r28	; 0x8004ca <register_address_org+0x1c>
     1ec:	d0 93 cb 04 	sts	0x04CB, r29	; 0x8004cb <register_address_org+0x1d>
     1f0:	e0 93 cc 04 	sts	0x04CC, r30	; 0x8004cc <register_address_org+0x1e>
     1f4:	f0 93 cd 04 	sts	0x04CD, r31	; 0x8004cd <register_address_org+0x1f>
     1f8:	ed b6       	in	r14, 0x3d	; 61
     1fa:	fe b6       	in	r15, 0x3e	; 62
     1fc:	e0 92 db 04 	sts	0x04DB, r14	; 0x8004db <stackpointer_address_org>
     200:	f0 92 dc 04 	sts	0x04DC, r15	; 0x8004dc <stackpointer_address_org+0x1>
     204:	80 e0       	ldi	r24, 0x00	; 0
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	a0 91 db 04 	lds	r26, 0x04DB	; 0x8004db <stackpointer_address_org>
     20c:	b0 91 dc 04 	lds	r27, 0x04DC	; 0x8004dc <stackpointer_address_org+0x1>
     210:	e2 ed       	ldi	r30, 0xD2	; 210
     212:	f4 e0       	ldi	r31, 0x04	; 4
     214:	ed 90       	ld	r14, X+
     216:	e1 92       	st	Z+, r14
     218:	01 96       	adiw	r24, 0x01	; 1
     21a:	89 30       	cpi	r24, 0x09	; 9
     21c:	d9 f7       	brne	.-10     	; 0x214 <iir_return+0xa0>
     21e:	e0 90 bc 04 	lds	r14, 0x04BC	; 0x8004bc <register_address_org+0xe>
     222:	f0 90 bd 04 	lds	r15, 0x04BD	; 0x8004bd <register_address_org+0xf>
     226:	80 91 c6 04 	lds	r24, 0x04C6	; 0x8004c6 <register_address_org+0x18>
     22a:	90 91 c7 04 	lds	r25, 0x04C7	; 0x8004c7 <register_address_org+0x19>
     22e:	a0 91 c8 04 	lds	r26, 0x04C8	; 0x8004c8 <register_address_org+0x1a>
     232:	b0 91 c9 04 	lds	r27, 0x04C9	; 0x8004c9 <register_address_org+0x1b>
     236:	e0 91 cc 04 	lds	r30, 0x04CC	; 0x8004cc <register_address_org+0x1e>
     23a:	f0 91 cd 04 	lds	r31, 0x04CD	; 0x8004cd <register_address_org+0x1f>

0000023e <Tic_flag>:
	"lds	r27, 0x4c9\n\t"
	"lds	r30, 0x4cc\n\t"
	"lds	r31, 0x4cd\n\t"
	);
	asm("Tic_flag:");
  for ( f = 0 ; f < 2 * 4; f++ )
     23e:	c0 e0       	ldi	r28, 0x00	; 0
     240:	d0 e0       	ldi	r29, 0x00	; 0
}


int iir_return( void )
{
  float checksum = 0.0;
     242:	60 e0       	ldi	r22, 0x00	; 0
     244:	70 e0       	ldi	r23, 0x00	; 0
     246:	cb 01       	movw	r24, r22
	"lds	r30, 0x4cc\n\t"
	"lds	r31, 0x4cd\n\t"
	);
	asm("Tic_flag:");
  for ( f = 0 ; f < 2 * 4; f++ )
    checksum += iir_wi[ f ];
     248:	fe 01       	movw	r30, r28
     24a:	ee 0f       	add	r30, r30
     24c:	ff 1f       	adc	r31, r31
     24e:	ee 0f       	add	r30, r30
     250:	ff 1f       	adc	r31, r31
     252:	ea 59       	subi	r30, 0x9A	; 154
     254:	fb 4f       	sbci	r31, 0xFB	; 251
     256:	20 81       	ld	r18, Z
     258:	31 81       	ldd	r19, Z+1	; 0x01
     25a:	42 81       	ldd	r20, Z+2	; 0x02
     25c:	53 81       	ldd	r21, Z+3	; 0x03
     25e:	53 d3       	rcall	.+1702   	; 0x906 <__addsf3>
	"lds	r27, 0x4c9\n\t"
	"lds	r30, 0x4cc\n\t"
	"lds	r31, 0x4cd\n\t"
	);
	asm("Tic_flag:");
  for ( f = 0 ; f < 2 * 4; f++ )
     260:	21 96       	adiw	r28, 0x01	; 1
     262:	c8 30       	cpi	r28, 0x08	; 8
     264:	d1 05       	cpc	r29, r1
     266:	81 f7       	brne	.-32     	; 0x248 <Tic_flag+0xa>

00000268 <Toc_flag>:
    checksum += iir_wi[ f ];
	asm("Toc_flag:");

  return( (int) checksum );
     268:	b2 d3       	rcall	.+1892   	; 0x9ce <__fixsfsi>
}
     26a:	cb 01       	movw	r24, r22
     26c:	df 91       	pop	r29
     26e:	cf 91       	pop	r28
     270:	08 95       	ret

00000272 <iir_main>:
/*
  Main functions
*/

void _Pragma( "entrypoint" ) iir_main( void )
{
     272:	4f 92       	push	r4
     274:	5f 92       	push	r5
     276:	6f 92       	push	r6
     278:	7f 92       	push	r7
     27a:	af 92       	push	r10
     27c:	bf 92       	push	r11
     27e:	cf 92       	push	r12
     280:	df 92       	push	r13
     282:	ef 92       	push	r14
     284:	ff 92       	push	r15
     286:	0f 93       	push	r16
     288:	1f 93       	push	r17
     28a:	cf 93       	push	r28
     28c:	df 93       	push	r29

  ptr_coeff = &iir_coefficients[ 0 ];
  ptr_wi1 = &iir_wi[ 0 ];
  ptr_wi2 = &iir_wi[ 1 ];

  y = iir_x ;
     28e:	40 90 62 04 	lds	r4, 0x0462	; 0x800462 <iir_x>
     292:	50 90 63 04 	lds	r5, 0x0463	; 0x800463 <iir_x+0x1>
     296:	60 90 64 04 	lds	r6, 0x0464	; 0x800464 <iir_x+0x2>
     29a:	70 90 65 04 	lds	r7, 0x0465	; 0x800465 <iir_x+0x3>
  register volatile float *ptr_coeff, *ptr_wi1, *ptr_wi2;
  register float y;


  ptr_coeff = &iir_coefficients[ 0 ];
  ptr_wi1 = &iir_wi[ 0 ];
     29e:	c6 e6       	ldi	r28, 0x66	; 102
     2a0:	d4 e0       	ldi	r29, 0x04	; 4
  int f;
  register volatile float *ptr_coeff, *ptr_wi1, *ptr_wi2;
  register float y;


  ptr_coeff = &iir_coefficients[ 0 ];
     2a2:	02 e1       	ldi	r16, 0x12	; 18
     2a4:	14 e0       	ldi	r17, 0x04	; 4

  y = iir_x ;

  _Pragma( "loopbound min 4 max 4" )
  for ( f = 0 ; f < 4 ; f++ ) {
    w = y - *ptr_coeff++ * *ptr_wi1;
     2a6:	f8 01       	movw	r30, r16
     2a8:	60 81       	ld	r22, Z
     2aa:	71 81       	ldd	r23, Z+1	; 0x01
     2ac:	82 81       	ldd	r24, Z+2	; 0x02
     2ae:	93 81       	ldd	r25, Z+3	; 0x03
     2b0:	28 81       	ld	r18, Y
     2b2:	39 81       	ldd	r19, Y+1	; 0x01
     2b4:	4a 81       	ldd	r20, Y+2	; 0x02
     2b6:	5b 81       	ldd	r21, Y+3	; 0x03
     2b8:	0c d4       	rcall	.+2072   	; 0xad2 <__mulsf3>
     2ba:	9b 01       	movw	r18, r22
     2bc:	ac 01       	movw	r20, r24
     2be:	c3 01       	movw	r24, r6
     2c0:	b2 01       	movw	r22, r4
     2c2:	20 d3       	rcall	.+1600   	; 0x904 <__subsf3>
     2c4:	6b 01       	movw	r12, r22
     2c6:	7c 01       	movw	r14, r24
    w -= *ptr_coeff++ * *ptr_wi2;
     2c8:	f8 01       	movw	r30, r16
     2ca:	64 81       	ldd	r22, Z+4	; 0x04
     2cc:	75 81       	ldd	r23, Z+5	; 0x05
     2ce:	86 81       	ldd	r24, Z+6	; 0x06
     2d0:	97 81       	ldd	r25, Z+7	; 0x07
     2d2:	2c 81       	ldd	r18, Y+4	; 0x04
     2d4:	3d 81       	ldd	r19, Y+5	; 0x05
     2d6:	4e 81       	ldd	r20, Y+6	; 0x06
     2d8:	5f 81       	ldd	r21, Y+7	; 0x07
     2da:	fb d3       	rcall	.+2038   	; 0xad2 <__mulsf3>
     2dc:	9b 01       	movw	r18, r22
     2de:	ac 01       	movw	r20, r24
     2e0:	c7 01       	movw	r24, r14
     2e2:	b6 01       	movw	r22, r12
     2e4:	0f d3       	rcall	.+1566   	; 0x904 <__subsf3>
     2e6:	6b 01       	movw	r12, r22
     2e8:	7c 01       	movw	r14, r24

    y = *ptr_coeff++ * w;
     2ea:	f8 01       	movw	r30, r16
     2ec:	60 85       	ldd	r22, Z+8	; 0x08
     2ee:	71 85       	ldd	r23, Z+9	; 0x09
     2f0:	82 85       	ldd	r24, Z+10	; 0x0a
     2f2:	93 85       	ldd	r25, Z+11	; 0x0b
     2f4:	a7 01       	movw	r20, r14
     2f6:	96 01       	movw	r18, r12
     2f8:	ec d3       	rcall	.+2008   	; 0xad2 <__mulsf3>
     2fa:	2b 01       	movw	r4, r22
     2fc:	3c 01       	movw	r6, r24
    y += *ptr_coeff++ * *ptr_wi1;
     2fe:	f8 01       	movw	r30, r16
     300:	64 85       	ldd	r22, Z+12	; 0x0c
     302:	75 85       	ldd	r23, Z+13	; 0x0d
     304:	86 85       	ldd	r24, Z+14	; 0x0e
     306:	97 85       	ldd	r25, Z+15	; 0x0f
     308:	28 81       	ld	r18, Y
     30a:	39 81       	ldd	r19, Y+1	; 0x01
     30c:	4a 81       	ldd	r20, Y+2	; 0x02
     30e:	5b 81       	ldd	r21, Y+3	; 0x03
     310:	e0 d3       	rcall	.+1984   	; 0xad2 <__mulsf3>
     312:	a3 01       	movw	r20, r6
     314:	92 01       	movw	r18, r4
     316:	f7 d2       	rcall	.+1518   	; 0x906 <__addsf3>
     318:	2b 01       	movw	r4, r22
     31a:	3c 01       	movw	r6, r24
     31c:	58 01       	movw	r10, r16
     31e:	f4 e1       	ldi	r31, 0x14	; 20
     320:	af 0e       	add	r10, r31
     322:	b1 1c       	adc	r11, r1
    y += *ptr_coeff++ * *ptr_wi2;
     324:	f8 01       	movw	r30, r16
     326:	60 89       	ldd	r22, Z+16	; 0x10
     328:	71 89       	ldd	r23, Z+17	; 0x11
     32a:	82 89       	ldd	r24, Z+18	; 0x12
     32c:	93 89       	ldd	r25, Z+19	; 0x13
     32e:	2c 81       	ldd	r18, Y+4	; 0x04
     330:	3d 81       	ldd	r19, Y+5	; 0x05
     332:	4e 81       	ldd	r20, Y+6	; 0x06
     334:	5f 81       	ldd	r21, Y+7	; 0x07
     336:	cd d3       	rcall	.+1946   	; 0xad2 <__mulsf3>
     338:	a3 01       	movw	r20, r6
     33a:	92 01       	movw	r18, r4
     33c:	e4 d2       	rcall	.+1480   	; 0x906 <__addsf3>
     33e:	2b 01       	movw	r4, r22
     340:	3c 01       	movw	r6, r24

    *ptr_wi2++ = *ptr_wi1;
     342:	88 81       	ld	r24, Y
     344:	99 81       	ldd	r25, Y+1	; 0x01
     346:	aa 81       	ldd	r26, Y+2	; 0x02
     348:	bb 81       	ldd	r27, Y+3	; 0x03
     34a:	8c 83       	std	Y+4, r24	; 0x04
     34c:	9d 83       	std	Y+5, r25	; 0x05
     34e:	ae 83       	std	Y+6, r26	; 0x06
     350:	bf 83       	std	Y+7, r27	; 0x07
    *ptr_wi1++ = w;
     352:	c8 82       	st	Y, r12
     354:	d9 82       	std	Y+1, r13	; 0x01
     356:	ea 82       	std	Y+2, r14	; 0x02
     358:	fb 82       	std	Y+3, r15	; 0x03
     35a:	28 96       	adiw	r28, 0x08	; 8
    w = y - *ptr_coeff++ * *ptr_wi1;
    w -= *ptr_coeff++ * *ptr_wi2;

    y = *ptr_coeff++ * w;
    y += *ptr_coeff++ * *ptr_wi1;
    y += *ptr_coeff++ * *ptr_wi2;
     35c:	85 01       	movw	r16, r10
  ptr_wi2 = &iir_wi[ 1 ];

  y = iir_x ;

  _Pragma( "loopbound min 4 max 4" )
  for ( f = 0 ; f < 4 ; f++ ) {
     35e:	f4 e0       	ldi	r31, 0x04	; 4
     360:	02 36       	cpi	r16, 0x62	; 98
     362:	1f 07       	cpc	r17, r31
     364:	09 f0       	breq	.+2      	; 0x368 <iir_main+0xf6>
     366:	9f cf       	rjmp	.-194    	; 0x2a6 <iir_main+0x34>
    *ptr_wi1++ = w;

    ptr_wi2++;
    ptr_wi1++;
  }
}
     368:	df 91       	pop	r29
     36a:	cf 91       	pop	r28
     36c:	1f 91       	pop	r17
     36e:	0f 91       	pop	r16
     370:	ff 90       	pop	r15
     372:	ef 90       	pop	r14
     374:	df 90       	pop	r13
     376:	cf 90       	pop	r12
     378:	bf 90       	pop	r11
     37a:	af 90       	pop	r10
     37c:	7f 90       	pop	r7
     37e:	6f 90       	pop	r6
     380:	5f 90       	pop	r5
     382:	4f 90       	pop	r4
     384:	08 95       	ret

00000386 <blockInputUpdate>:
volatile float iir_wi_block[2*4];
 

void blockInputUpdate(int blockInputUpdate_i) 
{
	f_block = f_inputs[blockInputUpdate_i];
     386:	fc 01       	movw	r30, r24
     388:	ee 0f       	add	r30, r30
     38a:	ff 1f       	adc	r31, r31
     38c:	e0 53       	subi	r30, 0x30	; 48
     38e:	fc 4f       	sbci	r31, 0xFC	; 252
     390:	20 81       	ld	r18, Z
     392:	31 81       	ldd	r19, Z+1	; 0x01
     394:	30 93 ab 04 	sts	0x04AB, r19	; 0x8004ab <f_block+0x1>
     398:	20 93 aa 04 	sts	0x04AA, r18	; 0x8004aa <f_block>
	checksum_block = checksum_inputs[blockInputUpdate_i];
     39c:	fc 01       	movw	r30, r24
     39e:	ee 0f       	add	r30, r30
     3a0:	ff 1f       	adc	r31, r31
     3a2:	ee 0f       	add	r30, r30
     3a4:	ff 1f       	adc	r31, r31
     3a6:	e0 58       	subi	r30, 0x80	; 128
     3a8:	fc 4f       	sbci	r31, 0xFC	; 252
     3aa:	40 81       	ld	r20, Z
     3ac:	51 81       	ldd	r21, Z+1	; 0x01
     3ae:	62 81       	ldd	r22, Z+2	; 0x02
     3b0:	73 81       	ldd	r23, Z+3	; 0x03
     3b2:	40 93 a6 04 	sts	0x04A6, r20	; 0x8004a6 <checksum_block>
     3b6:	50 93 a7 04 	sts	0x04A7, r21	; 0x8004a7 <checksum_block+0x1>
     3ba:	60 93 a8 04 	sts	0x04A8, r22	; 0x8004a8 <checksum_block+0x2>
     3be:	70 93 a9 04 	sts	0x04A9, r23	; 0x8004a9 <checksum_block+0x3>
     3c2:	88 0f       	add	r24, r24
     3c4:	99 1f       	adc	r25, r25
     3c6:	82 95       	swap	r24
     3c8:	92 95       	swap	r25
     3ca:	90 7f       	andi	r25, 0xF0	; 240
     3cc:	98 27       	eor	r25, r24
     3ce:	80 7f       	andi	r24, 0xF0	; 240
     3d0:	98 27       	eor	r25, r24
     3d2:	dc 01       	movw	r26, r24
     3d4:	a0 50       	subi	r26, 0x00	; 0
     3d6:	bf 4f       	sbci	r27, 0xFF	; 255
	int iir_wi_block_counter0;
	for(iir_wi_block_counter0=0;iir_wi_block_counter0<2*4;iir_wi_block_counter0++){
     3d8:	20 e0       	ldi	r18, 0x00	; 0
     3da:	30 e0       	ldi	r19, 0x00	; 0
		iir_wi_block[iir_wi_block_counter0]=iir_wi_inputs[blockInputUpdate_i][iir_wi_block_counter0];
     3dc:	4d 91       	ld	r20, X+
     3de:	5d 91       	ld	r21, X+
     3e0:	6d 91       	ld	r22, X+
     3e2:	7d 91       	ld	r23, X+
     3e4:	f9 01       	movw	r30, r18
     3e6:	ee 0f       	add	r30, r30
     3e8:	ff 1f       	adc	r31, r31
     3ea:	ee 0f       	add	r30, r30
     3ec:	ff 1f       	adc	r31, r31
     3ee:	ea 57       	subi	r30, 0x7A	; 122
     3f0:	fb 4f       	sbci	r31, 0xFB	; 251
     3f2:	40 83       	st	Z, r20
     3f4:	51 83       	std	Z+1, r21	; 0x01
     3f6:	62 83       	std	Z+2, r22	; 0x02
     3f8:	73 83       	std	Z+3, r23	; 0x03
void blockInputUpdate(int blockInputUpdate_i) 
{
	f_block = f_inputs[blockInputUpdate_i];
	checksum_block = checksum_inputs[blockInputUpdate_i];
	int iir_wi_block_counter0;
	for(iir_wi_block_counter0=0;iir_wi_block_counter0<2*4;iir_wi_block_counter0++){
     3fa:	2f 5f       	subi	r18, 0xFF	; 255
     3fc:	3f 4f       	sbci	r19, 0xFF	; 255
     3fe:	28 30       	cpi	r18, 0x08	; 8
     400:	31 05       	cpc	r19, r1
     402:	61 f7       	brne	.-40     	; 0x3dc <blockInputUpdate+0x56>
		iir_wi_block[iir_wi_block_counter0]=iir_wi_inputs[blockInputUpdate_i][iir_wi_block_counter0];
	}

	 
	asm(
     404:	00 92 dd 04 	sts	0x04DD, r0	; 0x8004dd <register_address_block>
     408:	10 92 de 04 	sts	0x04DE, r1	; 0x8004de <register_address_block+0x1>
     40c:	20 92 df 04 	sts	0x04DF, r2	; 0x8004df <register_address_block+0x2>
     410:	30 92 e0 04 	sts	0x04E0, r3	; 0x8004e0 <register_address_block+0x3>
     414:	40 92 e1 04 	sts	0x04E1, r4	; 0x8004e1 <register_address_block+0x4>
     418:	50 92 e2 04 	sts	0x04E2, r5	; 0x8004e2 <register_address_block+0x5>
     41c:	60 92 e3 04 	sts	0x04E3, r6	; 0x8004e3 <register_address_block+0x6>
     420:	70 92 e4 04 	sts	0x04E4, r7	; 0x8004e4 <register_address_block+0x7>
     424:	80 92 e5 04 	sts	0x04E5, r8	; 0x8004e5 <register_address_block+0x8>
     428:	90 92 e6 04 	sts	0x04E6, r9	; 0x8004e6 <register_address_block+0x9>
     42c:	a0 92 e7 04 	sts	0x04E7, r10	; 0x8004e7 <register_address_block+0xa>
     430:	b0 92 e8 04 	sts	0x04E8, r11	; 0x8004e8 <register_address_block+0xb>
     434:	c0 92 e9 04 	sts	0x04E9, r12	; 0x8004e9 <register_address_block+0xc>
     438:	d0 92 ea 04 	sts	0x04EA, r13	; 0x8004ea <register_address_block+0xd>
     43c:	e0 92 eb 04 	sts	0x04EB, r14	; 0x8004eb <register_address_block+0xe>
     440:	f0 92 ec 04 	sts	0x04EC, r15	; 0x8004ec <register_address_block+0xf>
     444:	00 93 ed 04 	sts	0x04ED, r16	; 0x8004ed <register_address_block+0x10>
     448:	10 93 ee 04 	sts	0x04EE, r17	; 0x8004ee <register_address_block+0x11>
     44c:	20 93 ef 04 	sts	0x04EF, r18	; 0x8004ef <register_address_block+0x12>
     450:	30 93 f0 04 	sts	0x04F0, r19	; 0x8004f0 <register_address_block+0x13>
     454:	40 93 f1 04 	sts	0x04F1, r20	; 0x8004f1 <register_address_block+0x14>
     458:	50 93 f2 04 	sts	0x04F2, r21	; 0x8004f2 <register_address_block+0x15>
     45c:	60 93 f3 04 	sts	0x04F3, r22	; 0x8004f3 <register_address_block+0x16>
     460:	70 93 f4 04 	sts	0x04F4, r23	; 0x8004f4 <register_address_block+0x17>
     464:	80 93 f5 04 	sts	0x04F5, r24	; 0x8004f5 <register_address_block+0x18>
     468:	90 93 f6 04 	sts	0x04F6, r25	; 0x8004f6 <register_address_block+0x19>
     46c:	a0 93 f7 04 	sts	0x04F7, r26	; 0x8004f7 <register_address_block+0x1a>
     470:	b0 93 f8 04 	sts	0x04F8, r27	; 0x8004f8 <register_address_block+0x1b>
     474:	c0 93 f9 04 	sts	0x04F9, r28	; 0x8004f9 <register_address_block+0x1c>
     478:	d0 93 fa 04 	sts	0x04FA, r29	; 0x8004fa <register_address_block+0x1d>
     47c:	e0 93 fb 04 	sts	0x04FB, r30	; 0x8004fb <register_address_block+0x1e>
     480:	f0 93 fc 04 	sts	0x04FC, r31	; 0x8004fc <register_address_block+0x1f>
     484:	90 91 aa 04 	lds	r25, 0x04AA	; 0x8004aa <f_block>
     488:	90 93 c7 04 	sts	0x04C7, r25	; 0x8004c7 <register_address_org+0x19>
     48c:	80 91 ab 04 	lds	r24, 0x04AB	; 0x8004ab <f_block+0x1>
     490:	80 93 c6 04 	sts	0x04C6, r24	; 0x8004c6 <register_address_org+0x18>
     494:	00 90 dd 04 	lds	r0, 0x04DD	; 0x8004dd <register_address_block>
     498:	10 90 de 04 	lds	r1, 0x04DE	; 0x8004de <register_address_block+0x1>
     49c:	20 90 df 04 	lds	r2, 0x04DF	; 0x8004df <register_address_block+0x2>
     4a0:	30 90 e0 04 	lds	r3, 0x04E0	; 0x8004e0 <register_address_block+0x3>
     4a4:	40 90 e1 04 	lds	r4, 0x04E1	; 0x8004e1 <register_address_block+0x4>
     4a8:	50 90 e2 04 	lds	r5, 0x04E2	; 0x8004e2 <register_address_block+0x5>
     4ac:	60 90 e3 04 	lds	r6, 0x04E3	; 0x8004e3 <register_address_block+0x6>
     4b0:	70 90 e4 04 	lds	r7, 0x04E4	; 0x8004e4 <register_address_block+0x7>
     4b4:	80 90 e5 04 	lds	r8, 0x04E5	; 0x8004e5 <register_address_block+0x8>
     4b8:	90 90 e6 04 	lds	r9, 0x04E6	; 0x8004e6 <register_address_block+0x9>
     4bc:	a0 90 e7 04 	lds	r10, 0x04E7	; 0x8004e7 <register_address_block+0xa>
     4c0:	b0 90 e8 04 	lds	r11, 0x04E8	; 0x8004e8 <register_address_block+0xb>
     4c4:	c0 90 e9 04 	lds	r12, 0x04E9	; 0x8004e9 <register_address_block+0xc>
     4c8:	d0 90 ea 04 	lds	r13, 0x04EA	; 0x8004ea <register_address_block+0xd>
     4cc:	e0 90 eb 04 	lds	r14, 0x04EB	; 0x8004eb <register_address_block+0xe>
     4d0:	f0 90 ec 04 	lds	r15, 0x04EC	; 0x8004ec <register_address_block+0xf>
     4d4:	00 91 ed 04 	lds	r16, 0x04ED	; 0x8004ed <register_address_block+0x10>
     4d8:	10 91 ee 04 	lds	r17, 0x04EE	; 0x8004ee <register_address_block+0x11>
     4dc:	20 91 ef 04 	lds	r18, 0x04EF	; 0x8004ef <register_address_block+0x12>
     4e0:	30 91 f0 04 	lds	r19, 0x04F0	; 0x8004f0 <register_address_block+0x13>
     4e4:	40 91 f1 04 	lds	r20, 0x04F1	; 0x8004f1 <register_address_block+0x14>
     4e8:	50 91 f2 04 	lds	r21, 0x04F2	; 0x8004f2 <register_address_block+0x15>
     4ec:	60 91 f3 04 	lds	r22, 0x04F3	; 0x8004f3 <register_address_block+0x16>
     4f0:	70 91 f4 04 	lds	r23, 0x04F4	; 0x8004f4 <register_address_block+0x17>
     4f4:	80 91 f5 04 	lds	r24, 0x04F5	; 0x8004f5 <register_address_block+0x18>
     4f8:	90 91 f6 04 	lds	r25, 0x04F6	; 0x8004f6 <register_address_block+0x19>
     4fc:	a0 91 f7 04 	lds	r26, 0x04F7	; 0x8004f7 <register_address_block+0x1a>
     500:	b0 91 f8 04 	lds	r27, 0x04F8	; 0x8004f8 <register_address_block+0x1b>
     504:	c0 91 f9 04 	lds	r28, 0x04F9	; 0x8004f9 <register_address_block+0x1c>
     508:	d0 91 fa 04 	lds	r29, 0x04FA	; 0x8004fa <register_address_block+0x1d>
     50c:	e0 91 fb 04 	lds	r30, 0x04FB	; 0x8004fb <register_address_block+0x1e>
     510:	f0 91 fc 04 	lds	r31, 0x04FC	; 0x8004fc <register_address_block+0x1f>
     514:	08 95       	ret

00000516 <benchmarkBlock>:
} 
 
/*BLock execution time measurement*/
void benchmarkBlock(void)
{
	asm(
     516:	00 92 dd 04 	sts	0x04DD, r0	; 0x8004dd <register_address_block>
     51a:	10 92 de 04 	sts	0x04DE, r1	; 0x8004de <register_address_block+0x1>
     51e:	20 92 df 04 	sts	0x04DF, r2	; 0x8004df <register_address_block+0x2>
     522:	30 92 e0 04 	sts	0x04E0, r3	; 0x8004e0 <register_address_block+0x3>
     526:	40 92 e1 04 	sts	0x04E1, r4	; 0x8004e1 <register_address_block+0x4>
     52a:	50 92 e2 04 	sts	0x04E2, r5	; 0x8004e2 <register_address_block+0x5>
     52e:	60 92 e3 04 	sts	0x04E3, r6	; 0x8004e3 <register_address_block+0x6>
     532:	70 92 e4 04 	sts	0x04E4, r7	; 0x8004e4 <register_address_block+0x7>
     536:	80 92 e5 04 	sts	0x04E5, r8	; 0x8004e5 <register_address_block+0x8>
     53a:	90 92 e6 04 	sts	0x04E6, r9	; 0x8004e6 <register_address_block+0x9>
     53e:	a0 92 e7 04 	sts	0x04E7, r10	; 0x8004e7 <register_address_block+0xa>
     542:	b0 92 e8 04 	sts	0x04E8, r11	; 0x8004e8 <register_address_block+0xb>
     546:	c0 92 e9 04 	sts	0x04E9, r12	; 0x8004e9 <register_address_block+0xc>
     54a:	d0 92 ea 04 	sts	0x04EA, r13	; 0x8004ea <register_address_block+0xd>
     54e:	e0 92 eb 04 	sts	0x04EB, r14	; 0x8004eb <register_address_block+0xe>
     552:	f0 92 ec 04 	sts	0x04EC, r15	; 0x8004ec <register_address_block+0xf>
     556:	00 93 ed 04 	sts	0x04ED, r16	; 0x8004ed <register_address_block+0x10>
     55a:	10 93 ee 04 	sts	0x04EE, r17	; 0x8004ee <register_address_block+0x11>
     55e:	20 93 ef 04 	sts	0x04EF, r18	; 0x8004ef <register_address_block+0x12>
     562:	30 93 f0 04 	sts	0x04F0, r19	; 0x8004f0 <register_address_block+0x13>
     566:	40 93 f1 04 	sts	0x04F1, r20	; 0x8004f1 <register_address_block+0x14>
     56a:	50 93 f2 04 	sts	0x04F2, r21	; 0x8004f2 <register_address_block+0x15>
     56e:	60 93 f3 04 	sts	0x04F3, r22	; 0x8004f3 <register_address_block+0x16>
     572:	70 93 f4 04 	sts	0x04F4, r23	; 0x8004f4 <register_address_block+0x17>
     576:	80 93 f5 04 	sts	0x04F5, r24	; 0x8004f5 <register_address_block+0x18>
     57a:	90 93 f6 04 	sts	0x04F6, r25	; 0x8004f6 <register_address_block+0x19>
     57e:	a0 93 f7 04 	sts	0x04F7, r26	; 0x8004f7 <register_address_block+0x1a>
     582:	b0 93 f8 04 	sts	0x04F8, r27	; 0x8004f8 <register_address_block+0x1b>
     586:	c0 93 f9 04 	sts	0x04F9, r28	; 0x8004f9 <register_address_block+0x1c>
     58a:	d0 93 fa 04 	sts	0x04FA, r29	; 0x8004fa <register_address_block+0x1d>
     58e:	e0 93 fb 04 	sts	0x04FB, r30	; 0x8004fb <register_address_block+0x1e>
     592:	f0 93 fc 04 	sts	0x04FC, r31	; 0x8004fc <register_address_block+0x1f>
     596:	ed b6       	in	r14, 0x3d	; 61
     598:	fe b6       	in	r15, 0x3e	; 62
     59a:	e0 92 d0 04 	sts	0x04D0, r14	; 0x8004d0 <stackpointer_address_block>
     59e:	f0 92 d1 04 	sts	0x04D1, r15	; 0x8004d1 <stackpointer_address_block+0x1>
     5a2:	80 e0       	ldi	r24, 0x00	; 0
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	a0 91 d0 04 	lds	r26, 0x04D0	; 0x8004d0 <stackpointer_address_block>
     5aa:	b0 91 d1 04 	lds	r27, 0x04D1	; 0x8004d1 <stackpointer_address_block+0x1>
     5ae:	ed ef       	ldi	r30, 0xFD	; 253
     5b0:	f4 e0       	ldi	r31, 0x04	; 4
     5b2:	ed 90       	ld	r14, X+
     5b4:	e1 92       	st	Z+, r14
     5b6:	01 96       	adiw	r24, 0x01	; 1
     5b8:	85 32       	cpi	r24, 0x25	; 37
     5ba:	d9 f7       	brne	.-10     	; 0x5b2 <benchmarkBlock+0x9c>
     5bc:	80 e0       	ldi	r24, 0x00	; 0
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	a0 91 db 04 	lds	r26, 0x04DB	; 0x8004db <stackpointer_address_org>
     5c4:	b0 91 dc 04 	lds	r27, 0x04DC	; 0x8004dc <stackpointer_address_org+0x1>
     5c8:	e2 ed       	ldi	r30, 0xD2	; 210
     5ca:	f4 e0       	ldi	r31, 0x04	; 4
     5cc:	e1 90       	ld	r14, Z+
     5ce:	ed 92       	st	X+, r14
     5d0:	01 96       	adiw	r24, 0x01	; 1
     5d2:	89 30       	cpi	r24, 0x09	; 9
     5d4:	d9 f7       	brne	.-10     	; 0x5cc <benchmarkBlock+0xb6>
     5d6:	00 90 ae 04 	lds	r0, 0x04AE	; 0x8004ae <register_address_org>
     5da:	10 90 af 04 	lds	r1, 0x04AF	; 0x8004af <register_address_org+0x1>
     5de:	20 90 b0 04 	lds	r2, 0x04B0	; 0x8004b0 <register_address_org+0x2>
     5e2:	30 90 b1 04 	lds	r3, 0x04B1	; 0x8004b1 <register_address_org+0x3>
     5e6:	40 90 b2 04 	lds	r4, 0x04B2	; 0x8004b2 <register_address_org+0x4>
     5ea:	50 90 b3 04 	lds	r5, 0x04B3	; 0x8004b3 <register_address_org+0x5>
     5ee:	60 90 b4 04 	lds	r6, 0x04B4	; 0x8004b4 <register_address_org+0x6>
     5f2:	70 90 b5 04 	lds	r7, 0x04B5	; 0x8004b5 <register_address_org+0x7>
     5f6:	80 90 b6 04 	lds	r8, 0x04B6	; 0x8004b6 <register_address_org+0x8>
     5fa:	90 90 b7 04 	lds	r9, 0x04B7	; 0x8004b7 <register_address_org+0x9>
     5fe:	a0 90 b8 04 	lds	r10, 0x04B8	; 0x8004b8 <register_address_org+0xa>
     602:	b0 90 b9 04 	lds	r11, 0x04B9	; 0x8004b9 <register_address_org+0xb>
     606:	c0 90 ba 04 	lds	r12, 0x04BA	; 0x8004ba <register_address_org+0xc>
     60a:	d0 90 bb 04 	lds	r13, 0x04BB	; 0x8004bb <register_address_org+0xd>
     60e:	e0 90 bc 04 	lds	r14, 0x04BC	; 0x8004bc <register_address_org+0xe>
     612:	f0 90 bd 04 	lds	r15, 0x04BD	; 0x8004bd <register_address_org+0xf>
     616:	00 91 be 04 	lds	r16, 0x04BE	; 0x8004be <register_address_org+0x10>
     61a:	10 91 bf 04 	lds	r17, 0x04BF	; 0x8004bf <register_address_org+0x11>
     61e:	20 91 c0 04 	lds	r18, 0x04C0	; 0x8004c0 <register_address_org+0x12>
     622:	30 91 c1 04 	lds	r19, 0x04C1	; 0x8004c1 <register_address_org+0x13>
     626:	40 91 c2 04 	lds	r20, 0x04C2	; 0x8004c2 <register_address_org+0x14>
     62a:	50 91 c3 04 	lds	r21, 0x04C3	; 0x8004c3 <register_address_org+0x15>
     62e:	60 91 c4 04 	lds	r22, 0x04C4	; 0x8004c4 <register_address_org+0x16>
     632:	70 91 c5 04 	lds	r23, 0x04C5	; 0x8004c5 <register_address_org+0x17>
     636:	80 91 c6 04 	lds	r24, 0x04C6	; 0x8004c6 <register_address_org+0x18>
     63a:	90 91 c7 04 	lds	r25, 0x04C7	; 0x8004c7 <register_address_org+0x19>
     63e:	a0 91 c8 04 	lds	r26, 0x04C8	; 0x8004c8 <register_address_org+0x1a>
     642:	b0 91 c9 04 	lds	r27, 0x04C9	; 0x8004c9 <register_address_org+0x1b>
     646:	c0 91 ca 04 	lds	r28, 0x04CA	; 0x8004ca <register_address_org+0x1c>
     64a:	d0 91 cb 04 	lds	r29, 0x04CB	; 0x8004cb <register_address_org+0x1d>
     64e:	e0 91 cc 04 	lds	r30, 0x04CC	; 0x8004cc <register_address_org+0x1e>
     652:	f0 91 cd 04 	lds	r31, 0x04CD	; 0x8004cd <register_address_org+0x1f>
     656:	80 e1       	ldi	r24, 0x10	; 16
     658:	88 b9       	out	0x08, r24	; 8
     65a:	80 91 c6 04 	lds	r24, 0x04C6	; 0x8004c6 <register_address_org+0x18>

0000065e <BlockContent_Start>:
     65e:	c0 e0       	ldi	r28, 0x00	; 0
     660:	d0 e0       	ldi	r29, 0x00	; 0
     662:	60 e0       	ldi	r22, 0x00	; 0
     664:	70 e0       	ldi	r23, 0x00	; 0
     666:	cb 01       	movw	r24, r22
     668:	fe 01       	movw	r30, r28
     66a:	ee 0f       	add	r30, r30
     66c:	ff 1f       	adc	r31, r31
     66e:	ee 0f       	add	r30, r30
     670:	ff 1f       	adc	r31, r31
     672:	ea 59       	subi	r30, 0x9A	; 154
     674:	fb 4f       	sbci	r31, 0xFB	; 251
     676:	20 81       	ld	r18, Z
     678:	31 81       	ldd	r19, Z+1	; 0x01
     67a:	42 81       	ldd	r20, Z+2	; 0x02
     67c:	53 81       	ldd	r21, Z+3	; 0x03
     67e:	43 d1       	rcall	.+646    	; 0x906 <__addsf3>
     680:	21 96       	adiw	r28, 0x01	; 1
     682:	c8 30       	cpi	r28, 0x08	; 8
     684:	d1 05       	cpc	r29, r1
     686:	81 f7       	brne	.-32     	; 0x668 <BlockContent_Start+0xa>

00000688 <BlockContent_End>:
     688:	18 b8       	out	0x08, r1	; 8
     68a:	80 e0       	ldi	r24, 0x00	; 0
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	a0 91 d0 04 	lds	r26, 0x04D0	; 0x8004d0 <stackpointer_address_block>
     692:	b0 91 d1 04 	lds	r27, 0x04D1	; 0x8004d1 <stackpointer_address_block+0x1>
     696:	ed ef       	ldi	r30, 0xFD	; 253
     698:	f4 e0       	ldi	r31, 0x04	; 4
     69a:	e1 90       	ld	r14, Z+
     69c:	ed 92       	st	X+, r14
     69e:	01 96       	adiw	r24, 0x01	; 1
     6a0:	85 32       	cpi	r24, 0x25	; 37
     6a2:	d9 f7       	brne	.-10     	; 0x69a <BlockContent_End+0x12>
     6a4:	00 90 dd 04 	lds	r0, 0x04DD	; 0x8004dd <register_address_block>
     6a8:	10 90 de 04 	lds	r1, 0x04DE	; 0x8004de <register_address_block+0x1>
     6ac:	20 90 df 04 	lds	r2, 0x04DF	; 0x8004df <register_address_block+0x2>
     6b0:	30 90 e0 04 	lds	r3, 0x04E0	; 0x8004e0 <register_address_block+0x3>
     6b4:	40 90 e1 04 	lds	r4, 0x04E1	; 0x8004e1 <register_address_block+0x4>
     6b8:	50 90 e2 04 	lds	r5, 0x04E2	; 0x8004e2 <register_address_block+0x5>
     6bc:	60 90 e3 04 	lds	r6, 0x04E3	; 0x8004e3 <register_address_block+0x6>
     6c0:	70 90 e4 04 	lds	r7, 0x04E4	; 0x8004e4 <register_address_block+0x7>
     6c4:	80 90 e5 04 	lds	r8, 0x04E5	; 0x8004e5 <register_address_block+0x8>
     6c8:	90 90 e6 04 	lds	r9, 0x04E6	; 0x8004e6 <register_address_block+0x9>
     6cc:	a0 90 e7 04 	lds	r10, 0x04E7	; 0x8004e7 <register_address_block+0xa>
     6d0:	b0 90 e8 04 	lds	r11, 0x04E8	; 0x8004e8 <register_address_block+0xb>
     6d4:	c0 90 e9 04 	lds	r12, 0x04E9	; 0x8004e9 <register_address_block+0xc>
     6d8:	d0 90 ea 04 	lds	r13, 0x04EA	; 0x8004ea <register_address_block+0xd>
     6dc:	e0 90 eb 04 	lds	r14, 0x04EB	; 0x8004eb <register_address_block+0xe>
     6e0:	f0 90 ec 04 	lds	r15, 0x04EC	; 0x8004ec <register_address_block+0xf>
     6e4:	00 91 ed 04 	lds	r16, 0x04ED	; 0x8004ed <register_address_block+0x10>
     6e8:	10 91 ee 04 	lds	r17, 0x04EE	; 0x8004ee <register_address_block+0x11>
     6ec:	20 91 ef 04 	lds	r18, 0x04EF	; 0x8004ef <register_address_block+0x12>
     6f0:	30 91 f0 04 	lds	r19, 0x04F0	; 0x8004f0 <register_address_block+0x13>
     6f4:	40 91 f1 04 	lds	r20, 0x04F1	; 0x8004f1 <register_address_block+0x14>
     6f8:	50 91 f2 04 	lds	r21, 0x04F2	; 0x8004f2 <register_address_block+0x15>
     6fc:	60 91 f3 04 	lds	r22, 0x04F3	; 0x8004f3 <register_address_block+0x16>
     700:	70 91 f4 04 	lds	r23, 0x04F4	; 0x8004f4 <register_address_block+0x17>
     704:	80 91 f5 04 	lds	r24, 0x04F5	; 0x8004f5 <register_address_block+0x18>
     708:	90 91 f6 04 	lds	r25, 0x04F6	; 0x8004f6 <register_address_block+0x19>
     70c:	a0 91 f7 04 	lds	r26, 0x04F7	; 0x8004f7 <register_address_block+0x1a>
     710:	b0 91 f8 04 	lds	r27, 0x04F8	; 0x8004f8 <register_address_block+0x1b>
     714:	c0 91 f9 04 	lds	r28, 0x04F9	; 0x8004f9 <register_address_block+0x1c>
     718:	d0 91 fa 04 	lds	r29, 0x04FA	; 0x8004fa <register_address_block+0x1d>
     71c:	e0 91 fb 04 	lds	r30, 0x04FB	; 0x8004fb <register_address_block+0x1e>
     720:	f0 91 fc 04 	lds	r31, 0x04FC	; 0x8004fc <register_address_block+0x1f>
     724:	e0 90 eb 04 	lds	r14, 0x04EB	; 0x8004eb <register_address_block+0xe>
     728:	f0 90 ec 04 	lds	r15, 0x04EC	; 0x8004ec <register_address_block+0xf>
     72c:	08 95       	ret

0000072e <uart_putchar>:
	}
}

/*USART*/
int uart_putchar(char c, FILE *stream)
{
     72e:	cf 93       	push	r28
     730:	c8 2f       	mov	r28, r24
	if (c == '\n') uart_putchar('\r', stream);
     732:	8a 30       	cpi	r24, 0x0A	; 10
     734:	11 f4       	brne	.+4      	; 0x73a <uart_putchar+0xc>
     736:	8d e0       	ldi	r24, 0x0D	; 13
     738:	fa df       	rcall	.-12     	; 0x72e <uart_putchar>
	while( ! ( UCSR0A & (1 << UDRE0)));
     73a:	e0 ec       	ldi	r30, 0xC0	; 192
     73c:	f0 e0       	ldi	r31, 0x00	; 0
     73e:	90 81       	ld	r25, Z
     740:	95 ff       	sbrs	r25, 5
     742:	fd cf       	rjmp	.-6      	; 0x73e <uart_putchar+0x10>
	UDR0 = c;
     744:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
     748:	80 e0       	ldi	r24, 0x00	; 0
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	cf 91       	pop	r28
     74e:	08 95       	ret

00000750 <main>:
volatile char stackpointer_address_org[pointer_length];
volatile char stackpointer_address_block[pointer_length];
FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_RW); 

/*main function*/
int main(void){
     750:	cf 93       	push	r28
     752:	df 93       	push	r29

	/*Initialize the pointer and register address variables*/
	int x_registercounter;
	for(x_registercounter=0; x_registercounter < pointer_length; x_registercounter++){
		register_address_r14r15[x_registercounter]=0;
     754:	8e ec       	ldi	r24, 0xCE	; 206
     756:	94 e0       	ldi	r25, 0x04	; 4
     758:	dc 01       	movw	r26, r24
     75a:	1c 92       	st	X, r1
		framepointer_address[x_registercounter]=0;
     75c:	cc ea       	ldi	r28, 0xAC	; 172
     75e:	d4 e0       	ldi	r29, 0x04	; 4
     760:	18 82       	st	Y, r1
		stackpointer_address_org[x_registercounter]=0;
     762:	2b ed       	ldi	r18, 0xDB	; 219
     764:	34 e0       	ldi	r19, 0x04	; 4
     766:	f9 01       	movw	r30, r18
     768:	10 82       	st	Z, r1
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
     76a:	e0 ed       	ldi	r30, 0xD0	; 208
     76c:	f4 e0       	ldi	r31, 0x04	; 4
     76e:	10 82       	st	Z, r1
     770:	10 82       	st	Z, r1
int main(void){

	/*Initialize the pointer and register address variables*/
	int x_registercounter;
	for(x_registercounter=0; x_registercounter < pointer_length; x_registercounter++){
		register_address_r14r15[x_registercounter]=0;
     772:	11 96       	adiw	r26, 0x01	; 1
     774:	1c 92       	st	X, r1
		framepointer_address[x_registercounter]=0;
     776:	19 82       	std	Y+1, r1	; 0x01
		stackpointer_address_org[x_registercounter]=0;
     778:	d9 01       	movw	r26, r18
     77a:	11 96       	adiw	r26, 0x01	; 1
     77c:	1c 92       	st	X, r1
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
     77e:	11 82       	std	Z+1, r1	; 0x01
     780:	11 82       	std	Z+1, r1	; 0x01
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	90 e0       	ldi	r25, 0x00	; 0
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
	register_address_org[x_registercounter];
     786:	fc 01       	movw	r30, r24
     788:	e2 55       	subi	r30, 0x52	; 82
     78a:	fb 4f       	sbci	r31, 0xFB	; 251
     78c:	20 81       	ld	r18, Z
	register_address_block[x_registercounter];
     78e:	fc 01       	movw	r30, r24
     790:	e3 52       	subi	r30, 0x23	; 35
     792:	fb 4f       	sbci	r31, 0xFB	; 251
     794:	20 81       	ld	r18, Z
		register_address_r14r15[x_registercounter]=0;
		framepointer_address[x_registercounter]=0;
		stackpointer_address_org[x_registercounter]=0;
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
     796:	01 96       	adiw	r24, 0x01	; 1
     798:	80 32       	cpi	r24, 0x20	; 32
     79a:	91 05       	cpc	r25, r1
     79c:	a1 f7       	brne	.-24     	; 0x786 <main+0x36>
     79e:	80 e0       	ldi	r24, 0x00	; 0
     7a0:	90 e0       	ldi	r25, 0x00	; 0
	register_address_org[x_registercounter];
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
	stack_address_org[x_registercounter];
     7a2:	fc 01       	movw	r30, r24
     7a4:	ee 52       	subi	r30, 0x2E	; 46
     7a6:	fb 4f       	sbci	r31, 0xFB	; 251
     7a8:	20 81       	ld	r18, Z
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
	register_address_org[x_registercounter];
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
     7aa:	01 96       	adiw	r24, 0x01	; 1
     7ac:	89 30       	cpi	r24, 0x09	; 9
     7ae:	91 05       	cpc	r25, r1
     7b0:	c1 f7       	brne	.-16     	; 0x7a2 <main+0x52>
     7b2:	80 e0       	ldi	r24, 0x00	; 0
     7b4:	90 e0       	ldi	r25, 0x00	; 0
	stack_address_org[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_block; x_registercounter++){
	stack_address_block[x_registercounter];
     7b6:	fc 01       	movw	r30, r24
     7b8:	e3 50       	subi	r30, 0x03	; 3
     7ba:	fb 4f       	sbci	r31, 0xFB	; 251
     7bc:	20 81       	ld	r18, Z
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
	stack_address_org[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_block; x_registercounter++){
     7be:	01 96       	adiw	r24, 0x01	; 1
     7c0:	89 31       	cpi	r24, 0x19	; 25
     7c2:	91 05       	cpc	r25, r1
     7c4:	c1 f7       	brne	.-16     	; 0x7b6 <main+0x66>
	stack_address_block[x_registercounter];
	}
	asm(
     7c6:	ed b6       	in	r14, 0x3d	; 61
     7c8:	fe b6       	in	r15, 0x3e	; 62
     7ca:	e0 92 ac 04 	sts	0x04AC, r14	; 0x8004ac <framepointer_address>
     7ce:	f0 92 ad 04 	sts	0x04AD, r15	; 0x8004ad <framepointer_address+0x1>
	"in	r15, 0x3e\n\t"
	"sts	0x04ac, r14\n\t"
	"sts	0x4ad, r15\n\t"
	);
	/*GPIO Pins*/
	DDRA = 0x00;
     7d2:	11 b8       	out	0x01, r1	; 1
	DDRC = 0xF0;
     7d4:	80 ef       	ldi	r24, 0xF0	; 240
     7d6:	87 b9       	out	0x07, r24	; 7
	/*External interrupt settings*/
	PORTD = (1 << PD1);
     7d8:	82 e0       	ldi	r24, 0x02	; 2
     7da:	8b b9       	out	0x0b, r24	; 11
	EICRA =	(1 << ISC11) | (0 << ISC10);
     7dc:	98 e0       	ldi	r25, 0x08	; 8
     7de:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK = (1 << INT1);
     7e2:	8d bb       	out	0x1d, r24	; 29
	/*Serial port configuration*/
	UBRR0H = (RBAUD >> 8);
     7e4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L =  RBAUD;
     7e8:	83 e3       	ldi	r24, 0x33	; 51
     7ea:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0) | (1 << RXEN0);
     7ee:	88 e1       	ldi	r24, 0x18	; 24
     7f0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     7f4:	86 e0       	ldi	r24, 0x06	; 6
     7f6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	/*Execute the complete original code*/
	iir_init();
     7fa:	6b dc       	rcall	.-1834   	; 0xd2 <iir_init>
	iir_main();
     7fc:	3a dd       	rcall	.-1420   	; 0x272 <iir_main>
	iir_return();
     7fe:	ba dc       	rcall	.-1676   	; 0x174 <iir_return>
	/*Enable FPGA Interupt trigger*/
	PORTC = (1 << PC5);
     800:	80 e2       	ldi	r24, 0x20	; 32
     802:	88 b9       	out	0x08, r24	; 8
	PORTC = (0 << PC5);
     804:	18 b8       	out	0x08, r1	; 8
	/*Enable external interrupt handler*/
	sei();
     806:	78 94       	sei
	/*while loop*/
	while(measurementRoundCounter<20){}
     808:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <__data_end>
     80c:	90 91 11 04 	lds	r25, 0x0411	; 0x800411 <__data_end+0x1>
     810:	84 31       	cpi	r24, 0x14	; 20
     812:	91 05       	cpc	r25, r1
     814:	ec f3       	brlt	.-6      	; 0x810 <main+0xc0>
	/*Return*/
	return(1);
}
     816:	81 e0       	ldi	r24, 0x01	; 1
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	df 91       	pop	r29
     81c:	cf 91       	pop	r28
     81e:	08 95       	ret

00000820 <__vector_2>:

/*Interrupt handler*/
ISR(INT1_vect){
     820:	1f 92       	push	r1
     822:	0f 92       	push	r0
     824:	0f b6       	in	r0, 0x3f	; 63
     826:	0f 92       	push	r0
     828:	11 24       	eor	r1, r1
     82a:	0b b6       	in	r0, 0x3b	; 59
     82c:	0f 92       	push	r0
     82e:	0f 93       	push	r16
     830:	1f 93       	push	r17
     832:	2f 93       	push	r18
     834:	3f 93       	push	r19
     836:	4f 93       	push	r20
     838:	5f 93       	push	r21
     83a:	6f 93       	push	r22
     83c:	7f 93       	push	r23
     83e:	8f 93       	push	r24
     840:	9f 93       	push	r25
     842:	af 93       	push	r26
     844:	bf 93       	push	r27
     846:	cf 93       	push	r28
     848:	df 93       	push	r29
     84a:	ef 93       	push	r30
     84c:	ff 93       	push	r31

	/*Read input values*/
	blockInputUpdate(measurementRoundCounter);
     84e:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <__data_end>
     852:	90 91 11 04 	lds	r25, 0x0411	; 0x800411 <__data_end+0x1>
     856:	97 dd       	rcall	.-1234   	; 0x386 <blockInputUpdate>
	/*Measure the execution time of the code block*/
	benchmarkBlock();
     858:	5e de       	rcall	.-836    	; 0x516 <benchmarkBlock>
	/*Update measurement round counter*/
	measurementRoundCounter++;
     85a:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <__data_end>
     85e:	90 91 11 04 	lds	r25, 0x0411	; 0x800411 <__data_end+0x1>
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <__data_end+0x1>
     868:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <__data_end>
	/*Print pointer values*/
	if(measurementRoundCounter==1){
     86c:	01 97       	sbiw	r24, 0x01	; 1
     86e:	99 f5       	brne	.+102    	; 0x8d6 <__vector_2+0xb6>
		fprintf(&mystdout,"%02x%02x\n",framepointer_address[1],framepointer_address[0]);
     870:	ec ea       	ldi	r30, 0xAC	; 172
     872:	f4 e0       	ldi	r31, 0x04	; 4
     874:	90 81       	ld	r25, Z
     876:	81 81       	ldd	r24, Z+1	; 0x01
     878:	1f 92       	push	r1
     87a:	9f 93       	push	r25
     87c:	1f 92       	push	r1
     87e:	8f 93       	push	r24
     880:	06 e0       	ldi	r16, 0x06	; 6
     882:	14 e0       	ldi	r17, 0x04	; 4
     884:	1f 93       	push	r17
     886:	0f 93       	push	r16
     888:	c8 ef       	ldi	r28, 0xF8	; 248
     88a:	d3 e0       	ldi	r29, 0x03	; 3
     88c:	df 93       	push	r29
     88e:	cf 93       	push	r28
     890:	83 d1       	rcall	.+774    	; 0xb98 <fprintf>
		fprintf(&mystdout,"%02x%02x\n",stackpointer_address_org[1],stackpointer_address_org[0]);
     892:	eb ed       	ldi	r30, 0xDB	; 219
     894:	f4 e0       	ldi	r31, 0x04	; 4
     896:	90 81       	ld	r25, Z
     898:	81 81       	ldd	r24, Z+1	; 0x01
     89a:	1f 92       	push	r1
     89c:	9f 93       	push	r25
     89e:	1f 92       	push	r1
     8a0:	8f 93       	push	r24
     8a2:	1f 93       	push	r17
     8a4:	0f 93       	push	r16
     8a6:	df 93       	push	r29
     8a8:	cf 93       	push	r28
     8aa:	76 d1       	rcall	.+748    	; 0xb98 <fprintf>
		fprintf(&mystdout,"%02x%02x\n",stackpointer_address_block[1],stackpointer_address_block[0]);
     8ac:	e0 ed       	ldi	r30, 0xD0	; 208
     8ae:	f4 e0       	ldi	r31, 0x04	; 4
     8b0:	90 81       	ld	r25, Z
     8b2:	81 81       	ldd	r24, Z+1	; 0x01
     8b4:	1f 92       	push	r1
     8b6:	9f 93       	push	r25
     8b8:	1f 92       	push	r1
     8ba:	8f 93       	push	r24
     8bc:	1f 93       	push	r17
     8be:	0f 93       	push	r16
     8c0:	df 93       	push	r29
     8c2:	cf 93       	push	r28
     8c4:	69 d1       	rcall	.+722    	; 0xb98 <fprintf>
     8c6:	8d b7       	in	r24, 0x3d	; 61
     8c8:	9e b7       	in	r25, 0x3e	; 62
     8ca:	48 96       	adiw	r24, 0x18	; 24
     8cc:	0f b6       	in	r0, 0x3f	; 63
     8ce:	f8 94       	cli
     8d0:	9e bf       	out	0x3e, r25	; 62
     8d2:	0f be       	out	0x3f, r0	; 63
     8d4:	8d bf       	out	0x3d, r24	; 61
	}
}
     8d6:	ff 91       	pop	r31
     8d8:	ef 91       	pop	r30
     8da:	df 91       	pop	r29
     8dc:	cf 91       	pop	r28
     8de:	bf 91       	pop	r27
     8e0:	af 91       	pop	r26
     8e2:	9f 91       	pop	r25
     8e4:	8f 91       	pop	r24
     8e6:	7f 91       	pop	r23
     8e8:	6f 91       	pop	r22
     8ea:	5f 91       	pop	r21
     8ec:	4f 91       	pop	r20
     8ee:	3f 91       	pop	r19
     8f0:	2f 91       	pop	r18
     8f2:	1f 91       	pop	r17
     8f4:	0f 91       	pop	r16
     8f6:	0f 90       	pop	r0
     8f8:	0b be       	out	0x3b, r0	; 59
     8fa:	0f 90       	pop	r0
     8fc:	0f be       	out	0x3f, r0	; 63
     8fe:	0f 90       	pop	r0
     900:	1f 90       	pop	r1
     902:	18 95       	reti

00000904 <__subsf3>:
     904:	50 58       	subi	r21, 0x80	; 128

00000906 <__addsf3>:
     906:	bb 27       	eor	r27, r27
     908:	aa 27       	eor	r26, r26
     90a:	0e d0       	rcall	.+28     	; 0x928 <__addsf3x>
     90c:	a8 c0       	rjmp	.+336    	; 0xa5e <__fp_round>
     90e:	99 d0       	rcall	.+306    	; 0xa42 <__fp_pscA>
     910:	30 f0       	brcs	.+12     	; 0x91e <__addsf3+0x18>
     912:	9e d0       	rcall	.+316    	; 0xa50 <__fp_pscB>
     914:	20 f0       	brcs	.+8      	; 0x91e <__addsf3+0x18>
     916:	31 f4       	brne	.+12     	; 0x924 <__addsf3+0x1e>
     918:	9f 3f       	cpi	r25, 0xFF	; 255
     91a:	11 f4       	brne	.+4      	; 0x920 <__addsf3+0x1a>
     91c:	1e f4       	brtc	.+6      	; 0x924 <__addsf3+0x1e>
     91e:	8e c0       	rjmp	.+284    	; 0xa3c <__fp_nan>
     920:	0e f4       	brtc	.+2      	; 0x924 <__addsf3+0x1e>
     922:	e0 95       	com	r30
     924:	e7 fb       	bst	r30, 7
     926:	84 c0       	rjmp	.+264    	; 0xa30 <__fp_inf>

00000928 <__addsf3x>:
     928:	e9 2f       	mov	r30, r25
     92a:	aa d0       	rcall	.+340    	; 0xa80 <__fp_split3>
     92c:	80 f3       	brcs	.-32     	; 0x90e <__addsf3+0x8>
     92e:	ba 17       	cp	r27, r26
     930:	62 07       	cpc	r22, r18
     932:	73 07       	cpc	r23, r19
     934:	84 07       	cpc	r24, r20
     936:	95 07       	cpc	r25, r21
     938:	18 f0       	brcs	.+6      	; 0x940 <__addsf3x+0x18>
     93a:	71 f4       	brne	.+28     	; 0x958 <__addsf3x+0x30>
     93c:	9e f5       	brtc	.+102    	; 0x9a4 <__addsf3x+0x7c>
     93e:	c2 c0       	rjmp	.+388    	; 0xac4 <__fp_zero>
     940:	0e f4       	brtc	.+2      	; 0x944 <__addsf3x+0x1c>
     942:	e0 95       	com	r30
     944:	0b 2e       	mov	r0, r27
     946:	ba 2f       	mov	r27, r26
     948:	a0 2d       	mov	r26, r0
     94a:	0b 01       	movw	r0, r22
     94c:	b9 01       	movw	r22, r18
     94e:	90 01       	movw	r18, r0
     950:	0c 01       	movw	r0, r24
     952:	ca 01       	movw	r24, r20
     954:	a0 01       	movw	r20, r0
     956:	11 24       	eor	r1, r1
     958:	ff 27       	eor	r31, r31
     95a:	59 1b       	sub	r21, r25
     95c:	99 f0       	breq	.+38     	; 0x984 <__addsf3x+0x5c>
     95e:	59 3f       	cpi	r21, 0xF9	; 249
     960:	50 f4       	brcc	.+20     	; 0x976 <__addsf3x+0x4e>
     962:	50 3e       	cpi	r21, 0xE0	; 224
     964:	68 f1       	brcs	.+90     	; 0x9c0 <__addsf3x+0x98>
     966:	1a 16       	cp	r1, r26
     968:	f0 40       	sbci	r31, 0x00	; 0
     96a:	a2 2f       	mov	r26, r18
     96c:	23 2f       	mov	r18, r19
     96e:	34 2f       	mov	r19, r20
     970:	44 27       	eor	r20, r20
     972:	58 5f       	subi	r21, 0xF8	; 248
     974:	f3 cf       	rjmp	.-26     	; 0x95c <__addsf3x+0x34>
     976:	46 95       	lsr	r20
     978:	37 95       	ror	r19
     97a:	27 95       	ror	r18
     97c:	a7 95       	ror	r26
     97e:	f0 40       	sbci	r31, 0x00	; 0
     980:	53 95       	inc	r21
     982:	c9 f7       	brne	.-14     	; 0x976 <__addsf3x+0x4e>
     984:	7e f4       	brtc	.+30     	; 0x9a4 <__addsf3x+0x7c>
     986:	1f 16       	cp	r1, r31
     988:	ba 0b       	sbc	r27, r26
     98a:	62 0b       	sbc	r22, r18
     98c:	73 0b       	sbc	r23, r19
     98e:	84 0b       	sbc	r24, r20
     990:	ba f0       	brmi	.+46     	; 0x9c0 <__addsf3x+0x98>
     992:	91 50       	subi	r25, 0x01	; 1
     994:	a1 f0       	breq	.+40     	; 0x9be <__addsf3x+0x96>
     996:	ff 0f       	add	r31, r31
     998:	bb 1f       	adc	r27, r27
     99a:	66 1f       	adc	r22, r22
     99c:	77 1f       	adc	r23, r23
     99e:	88 1f       	adc	r24, r24
     9a0:	c2 f7       	brpl	.-16     	; 0x992 <__addsf3x+0x6a>
     9a2:	0e c0       	rjmp	.+28     	; 0x9c0 <__addsf3x+0x98>
     9a4:	ba 0f       	add	r27, r26
     9a6:	62 1f       	adc	r22, r18
     9a8:	73 1f       	adc	r23, r19
     9aa:	84 1f       	adc	r24, r20
     9ac:	48 f4       	brcc	.+18     	; 0x9c0 <__addsf3x+0x98>
     9ae:	87 95       	ror	r24
     9b0:	77 95       	ror	r23
     9b2:	67 95       	ror	r22
     9b4:	b7 95       	ror	r27
     9b6:	f7 95       	ror	r31
     9b8:	9e 3f       	cpi	r25, 0xFE	; 254
     9ba:	08 f0       	brcs	.+2      	; 0x9be <__addsf3x+0x96>
     9bc:	b3 cf       	rjmp	.-154    	; 0x924 <__addsf3+0x1e>
     9be:	93 95       	inc	r25
     9c0:	88 0f       	add	r24, r24
     9c2:	08 f0       	brcs	.+2      	; 0x9c6 <__addsf3x+0x9e>
     9c4:	99 27       	eor	r25, r25
     9c6:	ee 0f       	add	r30, r30
     9c8:	97 95       	ror	r25
     9ca:	87 95       	ror	r24
     9cc:	08 95       	ret

000009ce <__fixsfsi>:
     9ce:	04 d0       	rcall	.+8      	; 0x9d8 <__fixunssfsi>
     9d0:	68 94       	set
     9d2:	b1 11       	cpse	r27, r1
     9d4:	78 c0       	rjmp	.+240    	; 0xac6 <__fp_szero>
     9d6:	08 95       	ret

000009d8 <__fixunssfsi>:
     9d8:	5b d0       	rcall	.+182    	; 0xa90 <__fp_splitA>
     9da:	88 f0       	brcs	.+34     	; 0x9fe <__fixunssfsi+0x26>
     9dc:	9f 57       	subi	r25, 0x7F	; 127
     9de:	90 f0       	brcs	.+36     	; 0xa04 <__fixunssfsi+0x2c>
     9e0:	b9 2f       	mov	r27, r25
     9e2:	99 27       	eor	r25, r25
     9e4:	b7 51       	subi	r27, 0x17	; 23
     9e6:	a0 f0       	brcs	.+40     	; 0xa10 <__fixunssfsi+0x38>
     9e8:	d1 f0       	breq	.+52     	; 0xa1e <__fixunssfsi+0x46>
     9ea:	66 0f       	add	r22, r22
     9ec:	77 1f       	adc	r23, r23
     9ee:	88 1f       	adc	r24, r24
     9f0:	99 1f       	adc	r25, r25
     9f2:	1a f0       	brmi	.+6      	; 0x9fa <__fixunssfsi+0x22>
     9f4:	ba 95       	dec	r27
     9f6:	c9 f7       	brne	.-14     	; 0x9ea <__fixunssfsi+0x12>
     9f8:	12 c0       	rjmp	.+36     	; 0xa1e <__fixunssfsi+0x46>
     9fa:	b1 30       	cpi	r27, 0x01	; 1
     9fc:	81 f0       	breq	.+32     	; 0xa1e <__fixunssfsi+0x46>
     9fe:	62 d0       	rcall	.+196    	; 0xac4 <__fp_zero>
     a00:	b1 e0       	ldi	r27, 0x01	; 1
     a02:	08 95       	ret
     a04:	5f c0       	rjmp	.+190    	; 0xac4 <__fp_zero>
     a06:	67 2f       	mov	r22, r23
     a08:	78 2f       	mov	r23, r24
     a0a:	88 27       	eor	r24, r24
     a0c:	b8 5f       	subi	r27, 0xF8	; 248
     a0e:	39 f0       	breq	.+14     	; 0xa1e <__fixunssfsi+0x46>
     a10:	b9 3f       	cpi	r27, 0xF9	; 249
     a12:	cc f3       	brlt	.-14     	; 0xa06 <__fixunssfsi+0x2e>
     a14:	86 95       	lsr	r24
     a16:	77 95       	ror	r23
     a18:	67 95       	ror	r22
     a1a:	b3 95       	inc	r27
     a1c:	d9 f7       	brne	.-10     	; 0xa14 <__fixunssfsi+0x3c>
     a1e:	3e f4       	brtc	.+14     	; 0xa2e <__fixunssfsi+0x56>
     a20:	90 95       	com	r25
     a22:	80 95       	com	r24
     a24:	70 95       	com	r23
     a26:	61 95       	neg	r22
     a28:	7f 4f       	sbci	r23, 0xFF	; 255
     a2a:	8f 4f       	sbci	r24, 0xFF	; 255
     a2c:	9f 4f       	sbci	r25, 0xFF	; 255
     a2e:	08 95       	ret

00000a30 <__fp_inf>:
     a30:	97 f9       	bld	r25, 7
     a32:	9f 67       	ori	r25, 0x7F	; 127
     a34:	80 e8       	ldi	r24, 0x80	; 128
     a36:	70 e0       	ldi	r23, 0x00	; 0
     a38:	60 e0       	ldi	r22, 0x00	; 0
     a3a:	08 95       	ret

00000a3c <__fp_nan>:
     a3c:	9f ef       	ldi	r25, 0xFF	; 255
     a3e:	80 ec       	ldi	r24, 0xC0	; 192
     a40:	08 95       	ret

00000a42 <__fp_pscA>:
     a42:	00 24       	eor	r0, r0
     a44:	0a 94       	dec	r0
     a46:	16 16       	cp	r1, r22
     a48:	17 06       	cpc	r1, r23
     a4a:	18 06       	cpc	r1, r24
     a4c:	09 06       	cpc	r0, r25
     a4e:	08 95       	ret

00000a50 <__fp_pscB>:
     a50:	00 24       	eor	r0, r0
     a52:	0a 94       	dec	r0
     a54:	12 16       	cp	r1, r18
     a56:	13 06       	cpc	r1, r19
     a58:	14 06       	cpc	r1, r20
     a5a:	05 06       	cpc	r0, r21
     a5c:	08 95       	ret

00000a5e <__fp_round>:
     a5e:	09 2e       	mov	r0, r25
     a60:	03 94       	inc	r0
     a62:	00 0c       	add	r0, r0
     a64:	11 f4       	brne	.+4      	; 0xa6a <__fp_round+0xc>
     a66:	88 23       	and	r24, r24
     a68:	52 f0       	brmi	.+20     	; 0xa7e <__fp_round+0x20>
     a6a:	bb 0f       	add	r27, r27
     a6c:	40 f4       	brcc	.+16     	; 0xa7e <__fp_round+0x20>
     a6e:	bf 2b       	or	r27, r31
     a70:	11 f4       	brne	.+4      	; 0xa76 <__fp_round+0x18>
     a72:	60 ff       	sbrs	r22, 0
     a74:	04 c0       	rjmp	.+8      	; 0xa7e <__fp_round+0x20>
     a76:	6f 5f       	subi	r22, 0xFF	; 255
     a78:	7f 4f       	sbci	r23, 0xFF	; 255
     a7a:	8f 4f       	sbci	r24, 0xFF	; 255
     a7c:	9f 4f       	sbci	r25, 0xFF	; 255
     a7e:	08 95       	ret

00000a80 <__fp_split3>:
     a80:	57 fd       	sbrc	r21, 7
     a82:	90 58       	subi	r25, 0x80	; 128
     a84:	44 0f       	add	r20, r20
     a86:	55 1f       	adc	r21, r21
     a88:	59 f0       	breq	.+22     	; 0xaa0 <__fp_splitA+0x10>
     a8a:	5f 3f       	cpi	r21, 0xFF	; 255
     a8c:	71 f0       	breq	.+28     	; 0xaaa <__fp_splitA+0x1a>
     a8e:	47 95       	ror	r20

00000a90 <__fp_splitA>:
     a90:	88 0f       	add	r24, r24
     a92:	97 fb       	bst	r25, 7
     a94:	99 1f       	adc	r25, r25
     a96:	61 f0       	breq	.+24     	; 0xab0 <__fp_splitA+0x20>
     a98:	9f 3f       	cpi	r25, 0xFF	; 255
     a9a:	79 f0       	breq	.+30     	; 0xaba <__fp_splitA+0x2a>
     a9c:	87 95       	ror	r24
     a9e:	08 95       	ret
     aa0:	12 16       	cp	r1, r18
     aa2:	13 06       	cpc	r1, r19
     aa4:	14 06       	cpc	r1, r20
     aa6:	55 1f       	adc	r21, r21
     aa8:	f2 cf       	rjmp	.-28     	; 0xa8e <__fp_split3+0xe>
     aaa:	46 95       	lsr	r20
     aac:	f1 df       	rcall	.-30     	; 0xa90 <__fp_splitA>
     aae:	08 c0       	rjmp	.+16     	; 0xac0 <__fp_splitA+0x30>
     ab0:	16 16       	cp	r1, r22
     ab2:	17 06       	cpc	r1, r23
     ab4:	18 06       	cpc	r1, r24
     ab6:	99 1f       	adc	r25, r25
     ab8:	f1 cf       	rjmp	.-30     	; 0xa9c <__fp_splitA+0xc>
     aba:	86 95       	lsr	r24
     abc:	71 05       	cpc	r23, r1
     abe:	61 05       	cpc	r22, r1
     ac0:	08 94       	sec
     ac2:	08 95       	ret

00000ac4 <__fp_zero>:
     ac4:	e8 94       	clt

00000ac6 <__fp_szero>:
     ac6:	bb 27       	eor	r27, r27
     ac8:	66 27       	eor	r22, r22
     aca:	77 27       	eor	r23, r23
     acc:	cb 01       	movw	r24, r22
     ace:	97 f9       	bld	r25, 7
     ad0:	08 95       	ret

00000ad2 <__mulsf3>:
     ad2:	0b d0       	rcall	.+22     	; 0xaea <__mulsf3x>
     ad4:	c4 cf       	rjmp	.-120    	; 0xa5e <__fp_round>
     ad6:	b5 df       	rcall	.-150    	; 0xa42 <__fp_pscA>
     ad8:	28 f0       	brcs	.+10     	; 0xae4 <__mulsf3+0x12>
     ada:	ba df       	rcall	.-140    	; 0xa50 <__fp_pscB>
     adc:	18 f0       	brcs	.+6      	; 0xae4 <__mulsf3+0x12>
     ade:	95 23       	and	r25, r21
     ae0:	09 f0       	breq	.+2      	; 0xae4 <__mulsf3+0x12>
     ae2:	a6 cf       	rjmp	.-180    	; 0xa30 <__fp_inf>
     ae4:	ab cf       	rjmp	.-170    	; 0xa3c <__fp_nan>
     ae6:	11 24       	eor	r1, r1
     ae8:	ee cf       	rjmp	.-36     	; 0xac6 <__fp_szero>

00000aea <__mulsf3x>:
     aea:	ca df       	rcall	.-108    	; 0xa80 <__fp_split3>
     aec:	a0 f3       	brcs	.-24     	; 0xad6 <__mulsf3+0x4>

00000aee <__mulsf3_pse>:
     aee:	95 9f       	mul	r25, r21
     af0:	d1 f3       	breq	.-12     	; 0xae6 <__mulsf3+0x14>
     af2:	95 0f       	add	r25, r21
     af4:	50 e0       	ldi	r21, 0x00	; 0
     af6:	55 1f       	adc	r21, r21
     af8:	62 9f       	mul	r22, r18
     afa:	f0 01       	movw	r30, r0
     afc:	72 9f       	mul	r23, r18
     afe:	bb 27       	eor	r27, r27
     b00:	f0 0d       	add	r31, r0
     b02:	b1 1d       	adc	r27, r1
     b04:	63 9f       	mul	r22, r19
     b06:	aa 27       	eor	r26, r26
     b08:	f0 0d       	add	r31, r0
     b0a:	b1 1d       	adc	r27, r1
     b0c:	aa 1f       	adc	r26, r26
     b0e:	64 9f       	mul	r22, r20
     b10:	66 27       	eor	r22, r22
     b12:	b0 0d       	add	r27, r0
     b14:	a1 1d       	adc	r26, r1
     b16:	66 1f       	adc	r22, r22
     b18:	82 9f       	mul	r24, r18
     b1a:	22 27       	eor	r18, r18
     b1c:	b0 0d       	add	r27, r0
     b1e:	a1 1d       	adc	r26, r1
     b20:	62 1f       	adc	r22, r18
     b22:	73 9f       	mul	r23, r19
     b24:	b0 0d       	add	r27, r0
     b26:	a1 1d       	adc	r26, r1
     b28:	62 1f       	adc	r22, r18
     b2a:	83 9f       	mul	r24, r19
     b2c:	a0 0d       	add	r26, r0
     b2e:	61 1d       	adc	r22, r1
     b30:	22 1f       	adc	r18, r18
     b32:	74 9f       	mul	r23, r20
     b34:	33 27       	eor	r19, r19
     b36:	a0 0d       	add	r26, r0
     b38:	61 1d       	adc	r22, r1
     b3a:	23 1f       	adc	r18, r19
     b3c:	84 9f       	mul	r24, r20
     b3e:	60 0d       	add	r22, r0
     b40:	21 1d       	adc	r18, r1
     b42:	82 2f       	mov	r24, r18
     b44:	76 2f       	mov	r23, r22
     b46:	6a 2f       	mov	r22, r26
     b48:	11 24       	eor	r1, r1
     b4a:	9f 57       	subi	r25, 0x7F	; 127
     b4c:	50 40       	sbci	r21, 0x00	; 0
     b4e:	8a f0       	brmi	.+34     	; 0xb72 <__mulsf3_pse+0x84>
     b50:	e1 f0       	breq	.+56     	; 0xb8a <__mulsf3_pse+0x9c>
     b52:	88 23       	and	r24, r24
     b54:	4a f0       	brmi	.+18     	; 0xb68 <__mulsf3_pse+0x7a>
     b56:	ee 0f       	add	r30, r30
     b58:	ff 1f       	adc	r31, r31
     b5a:	bb 1f       	adc	r27, r27
     b5c:	66 1f       	adc	r22, r22
     b5e:	77 1f       	adc	r23, r23
     b60:	88 1f       	adc	r24, r24
     b62:	91 50       	subi	r25, 0x01	; 1
     b64:	50 40       	sbci	r21, 0x00	; 0
     b66:	a9 f7       	brne	.-22     	; 0xb52 <__mulsf3_pse+0x64>
     b68:	9e 3f       	cpi	r25, 0xFE	; 254
     b6a:	51 05       	cpc	r21, r1
     b6c:	70 f0       	brcs	.+28     	; 0xb8a <__mulsf3_pse+0x9c>
     b6e:	60 cf       	rjmp	.-320    	; 0xa30 <__fp_inf>
     b70:	aa cf       	rjmp	.-172    	; 0xac6 <__fp_szero>
     b72:	5f 3f       	cpi	r21, 0xFF	; 255
     b74:	ec f3       	brlt	.-6      	; 0xb70 <__mulsf3_pse+0x82>
     b76:	98 3e       	cpi	r25, 0xE8	; 232
     b78:	dc f3       	brlt	.-10     	; 0xb70 <__mulsf3_pse+0x82>
     b7a:	86 95       	lsr	r24
     b7c:	77 95       	ror	r23
     b7e:	67 95       	ror	r22
     b80:	b7 95       	ror	r27
     b82:	f7 95       	ror	r31
     b84:	e7 95       	ror	r30
     b86:	9f 5f       	subi	r25, 0xFF	; 255
     b88:	c1 f7       	brne	.-16     	; 0xb7a <__mulsf3_pse+0x8c>
     b8a:	fe 2b       	or	r31, r30
     b8c:	88 0f       	add	r24, r24
     b8e:	91 1d       	adc	r25, r1
     b90:	96 95       	lsr	r25
     b92:	87 95       	ror	r24
     b94:	97 f9       	bld	r25, 7
     b96:	08 95       	ret

00000b98 <fprintf>:
     b98:	cf 93       	push	r28
     b9a:	df 93       	push	r29
     b9c:	cd b7       	in	r28, 0x3d	; 61
     b9e:	de b7       	in	r29, 0x3e	; 62
     ba0:	ae 01       	movw	r20, r28
     ba2:	47 5f       	subi	r20, 0xF7	; 247
     ba4:	5f 4f       	sbci	r21, 0xFF	; 255
     ba6:	6f 81       	ldd	r22, Y+7	; 0x07
     ba8:	78 85       	ldd	r23, Y+8	; 0x08
     baa:	8d 81       	ldd	r24, Y+5	; 0x05
     bac:	9e 81       	ldd	r25, Y+6	; 0x06
     bae:	03 d0       	rcall	.+6      	; 0xbb6 <vfprintf>
     bb0:	df 91       	pop	r29
     bb2:	cf 91       	pop	r28
     bb4:	08 95       	ret

00000bb6 <vfprintf>:
     bb6:	2f 92       	push	r2
     bb8:	3f 92       	push	r3
     bba:	4f 92       	push	r4
     bbc:	5f 92       	push	r5
     bbe:	6f 92       	push	r6
     bc0:	7f 92       	push	r7
     bc2:	8f 92       	push	r8
     bc4:	9f 92       	push	r9
     bc6:	af 92       	push	r10
     bc8:	bf 92       	push	r11
     bca:	cf 92       	push	r12
     bcc:	df 92       	push	r13
     bce:	ef 92       	push	r14
     bd0:	ff 92       	push	r15
     bd2:	0f 93       	push	r16
     bd4:	1f 93       	push	r17
     bd6:	cf 93       	push	r28
     bd8:	df 93       	push	r29
     bda:	cd b7       	in	r28, 0x3d	; 61
     bdc:	de b7       	in	r29, 0x3e	; 62
     bde:	2c 97       	sbiw	r28, 0x0c	; 12
     be0:	0f b6       	in	r0, 0x3f	; 63
     be2:	f8 94       	cli
     be4:	de bf       	out	0x3e, r29	; 62
     be6:	0f be       	out	0x3f, r0	; 63
     be8:	cd bf       	out	0x3d, r28	; 61
     bea:	7c 01       	movw	r14, r24
     bec:	6b 01       	movw	r12, r22
     bee:	8a 01       	movw	r16, r20
     bf0:	fc 01       	movw	r30, r24
     bf2:	17 82       	std	Z+7, r1	; 0x07
     bf4:	16 82       	std	Z+6, r1	; 0x06
     bf6:	83 81       	ldd	r24, Z+3	; 0x03
     bf8:	81 ff       	sbrs	r24, 1
     bfa:	b0 c1       	rjmp	.+864    	; 0xf5c <vfprintf+0x3a6>
     bfc:	ce 01       	movw	r24, r28
     bfe:	01 96       	adiw	r24, 0x01	; 1
     c00:	4c 01       	movw	r8, r24
     c02:	f7 01       	movw	r30, r14
     c04:	93 81       	ldd	r25, Z+3	; 0x03
     c06:	f6 01       	movw	r30, r12
     c08:	93 fd       	sbrc	r25, 3
     c0a:	85 91       	lpm	r24, Z+
     c0c:	93 ff       	sbrs	r25, 3
     c0e:	81 91       	ld	r24, Z+
     c10:	6f 01       	movw	r12, r30
     c12:	88 23       	and	r24, r24
     c14:	09 f4       	brne	.+2      	; 0xc18 <vfprintf+0x62>
     c16:	9e c1       	rjmp	.+828    	; 0xf54 <vfprintf+0x39e>
     c18:	85 32       	cpi	r24, 0x25	; 37
     c1a:	39 f4       	brne	.+14     	; 0xc2a <vfprintf+0x74>
     c1c:	93 fd       	sbrc	r25, 3
     c1e:	85 91       	lpm	r24, Z+
     c20:	93 ff       	sbrs	r25, 3
     c22:	81 91       	ld	r24, Z+
     c24:	6f 01       	movw	r12, r30
     c26:	85 32       	cpi	r24, 0x25	; 37
     c28:	21 f4       	brne	.+8      	; 0xc32 <vfprintf+0x7c>
     c2a:	b7 01       	movw	r22, r14
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	c7 d1       	rcall	.+910    	; 0xfbe <fputc>
     c30:	e8 cf       	rjmp	.-48     	; 0xc02 <vfprintf+0x4c>
     c32:	51 2c       	mov	r5, r1
     c34:	31 2c       	mov	r3, r1
     c36:	20 e0       	ldi	r18, 0x00	; 0
     c38:	20 32       	cpi	r18, 0x20	; 32
     c3a:	a0 f4       	brcc	.+40     	; 0xc64 <vfprintf+0xae>
     c3c:	8b 32       	cpi	r24, 0x2B	; 43
     c3e:	69 f0       	breq	.+26     	; 0xc5a <vfprintf+0xa4>
     c40:	30 f4       	brcc	.+12     	; 0xc4e <vfprintf+0x98>
     c42:	80 32       	cpi	r24, 0x20	; 32
     c44:	59 f0       	breq	.+22     	; 0xc5c <vfprintf+0xa6>
     c46:	83 32       	cpi	r24, 0x23	; 35
     c48:	69 f4       	brne	.+26     	; 0xc64 <vfprintf+0xae>
     c4a:	20 61       	ori	r18, 0x10	; 16
     c4c:	2c c0       	rjmp	.+88     	; 0xca6 <vfprintf+0xf0>
     c4e:	8d 32       	cpi	r24, 0x2D	; 45
     c50:	39 f0       	breq	.+14     	; 0xc60 <vfprintf+0xaa>
     c52:	80 33       	cpi	r24, 0x30	; 48
     c54:	39 f4       	brne	.+14     	; 0xc64 <vfprintf+0xae>
     c56:	21 60       	ori	r18, 0x01	; 1
     c58:	26 c0       	rjmp	.+76     	; 0xca6 <vfprintf+0xf0>
     c5a:	22 60       	ori	r18, 0x02	; 2
     c5c:	24 60       	ori	r18, 0x04	; 4
     c5e:	23 c0       	rjmp	.+70     	; 0xca6 <vfprintf+0xf0>
     c60:	28 60       	ori	r18, 0x08	; 8
     c62:	21 c0       	rjmp	.+66     	; 0xca6 <vfprintf+0xf0>
     c64:	27 fd       	sbrc	r18, 7
     c66:	27 c0       	rjmp	.+78     	; 0xcb6 <vfprintf+0x100>
     c68:	30 ed       	ldi	r19, 0xD0	; 208
     c6a:	38 0f       	add	r19, r24
     c6c:	3a 30       	cpi	r19, 0x0A	; 10
     c6e:	78 f4       	brcc	.+30     	; 0xc8e <vfprintf+0xd8>
     c70:	26 ff       	sbrs	r18, 6
     c72:	06 c0       	rjmp	.+12     	; 0xc80 <vfprintf+0xca>
     c74:	fa e0       	ldi	r31, 0x0A	; 10
     c76:	5f 9e       	mul	r5, r31
     c78:	30 0d       	add	r19, r0
     c7a:	11 24       	eor	r1, r1
     c7c:	53 2e       	mov	r5, r19
     c7e:	13 c0       	rjmp	.+38     	; 0xca6 <vfprintf+0xf0>
     c80:	8a e0       	ldi	r24, 0x0A	; 10
     c82:	38 9e       	mul	r3, r24
     c84:	30 0d       	add	r19, r0
     c86:	11 24       	eor	r1, r1
     c88:	33 2e       	mov	r3, r19
     c8a:	20 62       	ori	r18, 0x20	; 32
     c8c:	0c c0       	rjmp	.+24     	; 0xca6 <vfprintf+0xf0>
     c8e:	8e 32       	cpi	r24, 0x2E	; 46
     c90:	21 f4       	brne	.+8      	; 0xc9a <vfprintf+0xe4>
     c92:	26 fd       	sbrc	r18, 6
     c94:	5f c1       	rjmp	.+702    	; 0xf54 <vfprintf+0x39e>
     c96:	20 64       	ori	r18, 0x40	; 64
     c98:	06 c0       	rjmp	.+12     	; 0xca6 <vfprintf+0xf0>
     c9a:	8c 36       	cpi	r24, 0x6C	; 108
     c9c:	11 f4       	brne	.+4      	; 0xca2 <vfprintf+0xec>
     c9e:	20 68       	ori	r18, 0x80	; 128
     ca0:	02 c0       	rjmp	.+4      	; 0xca6 <vfprintf+0xf0>
     ca2:	88 36       	cpi	r24, 0x68	; 104
     ca4:	41 f4       	brne	.+16     	; 0xcb6 <vfprintf+0x100>
     ca6:	f6 01       	movw	r30, r12
     ca8:	93 fd       	sbrc	r25, 3
     caa:	85 91       	lpm	r24, Z+
     cac:	93 ff       	sbrs	r25, 3
     cae:	81 91       	ld	r24, Z+
     cb0:	6f 01       	movw	r12, r30
     cb2:	81 11       	cpse	r24, r1
     cb4:	c1 cf       	rjmp	.-126    	; 0xc38 <vfprintf+0x82>
     cb6:	98 2f       	mov	r25, r24
     cb8:	9f 7d       	andi	r25, 0xDF	; 223
     cba:	95 54       	subi	r25, 0x45	; 69
     cbc:	93 30       	cpi	r25, 0x03	; 3
     cbe:	28 f4       	brcc	.+10     	; 0xcca <vfprintf+0x114>
     cc0:	0c 5f       	subi	r16, 0xFC	; 252
     cc2:	1f 4f       	sbci	r17, 0xFF	; 255
     cc4:	ff e3       	ldi	r31, 0x3F	; 63
     cc6:	f9 83       	std	Y+1, r31	; 0x01
     cc8:	0d c0       	rjmp	.+26     	; 0xce4 <vfprintf+0x12e>
     cca:	83 36       	cpi	r24, 0x63	; 99
     ccc:	31 f0       	breq	.+12     	; 0xcda <vfprintf+0x124>
     cce:	83 37       	cpi	r24, 0x73	; 115
     cd0:	71 f0       	breq	.+28     	; 0xcee <vfprintf+0x138>
     cd2:	83 35       	cpi	r24, 0x53	; 83
     cd4:	09 f0       	breq	.+2      	; 0xcd8 <vfprintf+0x122>
     cd6:	57 c0       	rjmp	.+174    	; 0xd86 <vfprintf+0x1d0>
     cd8:	21 c0       	rjmp	.+66     	; 0xd1c <vfprintf+0x166>
     cda:	f8 01       	movw	r30, r16
     cdc:	80 81       	ld	r24, Z
     cde:	89 83       	std	Y+1, r24	; 0x01
     ce0:	0e 5f       	subi	r16, 0xFE	; 254
     ce2:	1f 4f       	sbci	r17, 0xFF	; 255
     ce4:	44 24       	eor	r4, r4
     ce6:	43 94       	inc	r4
     ce8:	51 2c       	mov	r5, r1
     cea:	54 01       	movw	r10, r8
     cec:	14 c0       	rjmp	.+40     	; 0xd16 <vfprintf+0x160>
     cee:	38 01       	movw	r6, r16
     cf0:	f2 e0       	ldi	r31, 0x02	; 2
     cf2:	6f 0e       	add	r6, r31
     cf4:	71 1c       	adc	r7, r1
     cf6:	f8 01       	movw	r30, r16
     cf8:	a0 80       	ld	r10, Z
     cfa:	b1 80       	ldd	r11, Z+1	; 0x01
     cfc:	26 ff       	sbrs	r18, 6
     cfe:	03 c0       	rjmp	.+6      	; 0xd06 <vfprintf+0x150>
     d00:	65 2d       	mov	r22, r5
     d02:	70 e0       	ldi	r23, 0x00	; 0
     d04:	02 c0       	rjmp	.+4      	; 0xd0a <vfprintf+0x154>
     d06:	6f ef       	ldi	r22, 0xFF	; 255
     d08:	7f ef       	ldi	r23, 0xFF	; 255
     d0a:	c5 01       	movw	r24, r10
     d0c:	2c 87       	std	Y+12, r18	; 0x0c
     d0e:	4c d1       	rcall	.+664    	; 0xfa8 <strnlen>
     d10:	2c 01       	movw	r4, r24
     d12:	83 01       	movw	r16, r6
     d14:	2c 85       	ldd	r18, Y+12	; 0x0c
     d16:	2f 77       	andi	r18, 0x7F	; 127
     d18:	22 2e       	mov	r2, r18
     d1a:	16 c0       	rjmp	.+44     	; 0xd48 <vfprintf+0x192>
     d1c:	38 01       	movw	r6, r16
     d1e:	f2 e0       	ldi	r31, 0x02	; 2
     d20:	6f 0e       	add	r6, r31
     d22:	71 1c       	adc	r7, r1
     d24:	f8 01       	movw	r30, r16
     d26:	a0 80       	ld	r10, Z
     d28:	b1 80       	ldd	r11, Z+1	; 0x01
     d2a:	26 ff       	sbrs	r18, 6
     d2c:	03 c0       	rjmp	.+6      	; 0xd34 <vfprintf+0x17e>
     d2e:	65 2d       	mov	r22, r5
     d30:	70 e0       	ldi	r23, 0x00	; 0
     d32:	02 c0       	rjmp	.+4      	; 0xd38 <vfprintf+0x182>
     d34:	6f ef       	ldi	r22, 0xFF	; 255
     d36:	7f ef       	ldi	r23, 0xFF	; 255
     d38:	c5 01       	movw	r24, r10
     d3a:	2c 87       	std	Y+12, r18	; 0x0c
     d3c:	2a d1       	rcall	.+596    	; 0xf92 <strnlen_P>
     d3e:	2c 01       	movw	r4, r24
     d40:	2c 85       	ldd	r18, Y+12	; 0x0c
     d42:	20 68       	ori	r18, 0x80	; 128
     d44:	22 2e       	mov	r2, r18
     d46:	83 01       	movw	r16, r6
     d48:	23 fc       	sbrc	r2, 3
     d4a:	19 c0       	rjmp	.+50     	; 0xd7e <vfprintf+0x1c8>
     d4c:	83 2d       	mov	r24, r3
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	48 16       	cp	r4, r24
     d52:	59 06       	cpc	r5, r25
     d54:	a0 f4       	brcc	.+40     	; 0xd7e <vfprintf+0x1c8>
     d56:	b7 01       	movw	r22, r14
     d58:	80 e2       	ldi	r24, 0x20	; 32
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	30 d1       	rcall	.+608    	; 0xfbe <fputc>
     d5e:	3a 94       	dec	r3
     d60:	f5 cf       	rjmp	.-22     	; 0xd4c <vfprintf+0x196>
     d62:	f5 01       	movw	r30, r10
     d64:	27 fc       	sbrc	r2, 7
     d66:	85 91       	lpm	r24, Z+
     d68:	27 fe       	sbrs	r2, 7
     d6a:	81 91       	ld	r24, Z+
     d6c:	5f 01       	movw	r10, r30
     d6e:	b7 01       	movw	r22, r14
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	25 d1       	rcall	.+586    	; 0xfbe <fputc>
     d74:	31 10       	cpse	r3, r1
     d76:	3a 94       	dec	r3
     d78:	f1 e0       	ldi	r31, 0x01	; 1
     d7a:	4f 1a       	sub	r4, r31
     d7c:	51 08       	sbc	r5, r1
     d7e:	41 14       	cp	r4, r1
     d80:	51 04       	cpc	r5, r1
     d82:	79 f7       	brne	.-34     	; 0xd62 <vfprintf+0x1ac>
     d84:	de c0       	rjmp	.+444    	; 0xf42 <vfprintf+0x38c>
     d86:	84 36       	cpi	r24, 0x64	; 100
     d88:	11 f0       	breq	.+4      	; 0xd8e <vfprintf+0x1d8>
     d8a:	89 36       	cpi	r24, 0x69	; 105
     d8c:	31 f5       	brne	.+76     	; 0xdda <vfprintf+0x224>
     d8e:	f8 01       	movw	r30, r16
     d90:	27 ff       	sbrs	r18, 7
     d92:	07 c0       	rjmp	.+14     	; 0xda2 <vfprintf+0x1ec>
     d94:	60 81       	ld	r22, Z
     d96:	71 81       	ldd	r23, Z+1	; 0x01
     d98:	82 81       	ldd	r24, Z+2	; 0x02
     d9a:	93 81       	ldd	r25, Z+3	; 0x03
     d9c:	0c 5f       	subi	r16, 0xFC	; 252
     d9e:	1f 4f       	sbci	r17, 0xFF	; 255
     da0:	08 c0       	rjmp	.+16     	; 0xdb2 <vfprintf+0x1fc>
     da2:	60 81       	ld	r22, Z
     da4:	71 81       	ldd	r23, Z+1	; 0x01
     da6:	07 2e       	mov	r0, r23
     da8:	00 0c       	add	r0, r0
     daa:	88 0b       	sbc	r24, r24
     dac:	99 0b       	sbc	r25, r25
     dae:	0e 5f       	subi	r16, 0xFE	; 254
     db0:	1f 4f       	sbci	r17, 0xFF	; 255
     db2:	2f 76       	andi	r18, 0x6F	; 111
     db4:	72 2e       	mov	r7, r18
     db6:	97 ff       	sbrs	r25, 7
     db8:	09 c0       	rjmp	.+18     	; 0xdcc <vfprintf+0x216>
     dba:	90 95       	com	r25
     dbc:	80 95       	com	r24
     dbe:	70 95       	com	r23
     dc0:	61 95       	neg	r22
     dc2:	7f 4f       	sbci	r23, 0xFF	; 255
     dc4:	8f 4f       	sbci	r24, 0xFF	; 255
     dc6:	9f 4f       	sbci	r25, 0xFF	; 255
     dc8:	20 68       	ori	r18, 0x80	; 128
     dca:	72 2e       	mov	r7, r18
     dcc:	2a e0       	ldi	r18, 0x0A	; 10
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	a4 01       	movw	r20, r8
     dd2:	2d d1       	rcall	.+602    	; 0x102e <__ultoa_invert>
     dd4:	a8 2e       	mov	r10, r24
     dd6:	a8 18       	sub	r10, r8
     dd8:	43 c0       	rjmp	.+134    	; 0xe60 <vfprintf+0x2aa>
     dda:	85 37       	cpi	r24, 0x75	; 117
     ddc:	29 f4       	brne	.+10     	; 0xde8 <vfprintf+0x232>
     dde:	2f 7e       	andi	r18, 0xEF	; 239
     de0:	b2 2e       	mov	r11, r18
     de2:	2a e0       	ldi	r18, 0x0A	; 10
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	25 c0       	rjmp	.+74     	; 0xe32 <vfprintf+0x27c>
     de8:	f2 2f       	mov	r31, r18
     dea:	f9 7f       	andi	r31, 0xF9	; 249
     dec:	bf 2e       	mov	r11, r31
     dee:	8f 36       	cpi	r24, 0x6F	; 111
     df0:	c1 f0       	breq	.+48     	; 0xe22 <vfprintf+0x26c>
     df2:	18 f4       	brcc	.+6      	; 0xdfa <vfprintf+0x244>
     df4:	88 35       	cpi	r24, 0x58	; 88
     df6:	79 f0       	breq	.+30     	; 0xe16 <vfprintf+0x260>
     df8:	ad c0       	rjmp	.+346    	; 0xf54 <vfprintf+0x39e>
     dfa:	80 37       	cpi	r24, 0x70	; 112
     dfc:	19 f0       	breq	.+6      	; 0xe04 <vfprintf+0x24e>
     dfe:	88 37       	cpi	r24, 0x78	; 120
     e00:	21 f0       	breq	.+8      	; 0xe0a <vfprintf+0x254>
     e02:	a8 c0       	rjmp	.+336    	; 0xf54 <vfprintf+0x39e>
     e04:	2f 2f       	mov	r18, r31
     e06:	20 61       	ori	r18, 0x10	; 16
     e08:	b2 2e       	mov	r11, r18
     e0a:	b4 fe       	sbrs	r11, 4
     e0c:	0d c0       	rjmp	.+26     	; 0xe28 <vfprintf+0x272>
     e0e:	8b 2d       	mov	r24, r11
     e10:	84 60       	ori	r24, 0x04	; 4
     e12:	b8 2e       	mov	r11, r24
     e14:	09 c0       	rjmp	.+18     	; 0xe28 <vfprintf+0x272>
     e16:	24 ff       	sbrs	r18, 4
     e18:	0a c0       	rjmp	.+20     	; 0xe2e <vfprintf+0x278>
     e1a:	9f 2f       	mov	r25, r31
     e1c:	96 60       	ori	r25, 0x06	; 6
     e1e:	b9 2e       	mov	r11, r25
     e20:	06 c0       	rjmp	.+12     	; 0xe2e <vfprintf+0x278>
     e22:	28 e0       	ldi	r18, 0x08	; 8
     e24:	30 e0       	ldi	r19, 0x00	; 0
     e26:	05 c0       	rjmp	.+10     	; 0xe32 <vfprintf+0x27c>
     e28:	20 e1       	ldi	r18, 0x10	; 16
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	02 c0       	rjmp	.+4      	; 0xe32 <vfprintf+0x27c>
     e2e:	20 e1       	ldi	r18, 0x10	; 16
     e30:	32 e0       	ldi	r19, 0x02	; 2
     e32:	f8 01       	movw	r30, r16
     e34:	b7 fe       	sbrs	r11, 7
     e36:	07 c0       	rjmp	.+14     	; 0xe46 <vfprintf+0x290>
     e38:	60 81       	ld	r22, Z
     e3a:	71 81       	ldd	r23, Z+1	; 0x01
     e3c:	82 81       	ldd	r24, Z+2	; 0x02
     e3e:	93 81       	ldd	r25, Z+3	; 0x03
     e40:	0c 5f       	subi	r16, 0xFC	; 252
     e42:	1f 4f       	sbci	r17, 0xFF	; 255
     e44:	06 c0       	rjmp	.+12     	; 0xe52 <vfprintf+0x29c>
     e46:	60 81       	ld	r22, Z
     e48:	71 81       	ldd	r23, Z+1	; 0x01
     e4a:	80 e0       	ldi	r24, 0x00	; 0
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	0e 5f       	subi	r16, 0xFE	; 254
     e50:	1f 4f       	sbci	r17, 0xFF	; 255
     e52:	a4 01       	movw	r20, r8
     e54:	ec d0       	rcall	.+472    	; 0x102e <__ultoa_invert>
     e56:	a8 2e       	mov	r10, r24
     e58:	a8 18       	sub	r10, r8
     e5a:	fb 2d       	mov	r31, r11
     e5c:	ff 77       	andi	r31, 0x7F	; 127
     e5e:	7f 2e       	mov	r7, r31
     e60:	76 fe       	sbrs	r7, 6
     e62:	0b c0       	rjmp	.+22     	; 0xe7a <vfprintf+0x2c4>
     e64:	37 2d       	mov	r19, r7
     e66:	3e 7f       	andi	r19, 0xFE	; 254
     e68:	a5 14       	cp	r10, r5
     e6a:	50 f4       	brcc	.+20     	; 0xe80 <vfprintf+0x2ca>
     e6c:	74 fe       	sbrs	r7, 4
     e6e:	0a c0       	rjmp	.+20     	; 0xe84 <vfprintf+0x2ce>
     e70:	72 fc       	sbrc	r7, 2
     e72:	08 c0       	rjmp	.+16     	; 0xe84 <vfprintf+0x2ce>
     e74:	37 2d       	mov	r19, r7
     e76:	3e 7e       	andi	r19, 0xEE	; 238
     e78:	05 c0       	rjmp	.+10     	; 0xe84 <vfprintf+0x2ce>
     e7a:	ba 2c       	mov	r11, r10
     e7c:	37 2d       	mov	r19, r7
     e7e:	03 c0       	rjmp	.+6      	; 0xe86 <vfprintf+0x2d0>
     e80:	ba 2c       	mov	r11, r10
     e82:	01 c0       	rjmp	.+2      	; 0xe86 <vfprintf+0x2d0>
     e84:	b5 2c       	mov	r11, r5
     e86:	34 ff       	sbrs	r19, 4
     e88:	0d c0       	rjmp	.+26     	; 0xea4 <vfprintf+0x2ee>
     e8a:	fe 01       	movw	r30, r28
     e8c:	ea 0d       	add	r30, r10
     e8e:	f1 1d       	adc	r31, r1
     e90:	80 81       	ld	r24, Z
     e92:	80 33       	cpi	r24, 0x30	; 48
     e94:	11 f4       	brne	.+4      	; 0xe9a <vfprintf+0x2e4>
     e96:	39 7e       	andi	r19, 0xE9	; 233
     e98:	09 c0       	rjmp	.+18     	; 0xeac <vfprintf+0x2f6>
     e9a:	32 ff       	sbrs	r19, 2
     e9c:	06 c0       	rjmp	.+12     	; 0xeaa <vfprintf+0x2f4>
     e9e:	b3 94       	inc	r11
     ea0:	b3 94       	inc	r11
     ea2:	04 c0       	rjmp	.+8      	; 0xeac <vfprintf+0x2f6>
     ea4:	83 2f       	mov	r24, r19
     ea6:	86 78       	andi	r24, 0x86	; 134
     ea8:	09 f0       	breq	.+2      	; 0xeac <vfprintf+0x2f6>
     eaa:	b3 94       	inc	r11
     eac:	33 fd       	sbrc	r19, 3
     eae:	12 c0       	rjmp	.+36     	; 0xed4 <vfprintf+0x31e>
     eb0:	30 ff       	sbrs	r19, 0
     eb2:	06 c0       	rjmp	.+12     	; 0xec0 <vfprintf+0x30a>
     eb4:	5a 2c       	mov	r5, r10
     eb6:	b3 14       	cp	r11, r3
     eb8:	18 f4       	brcc	.+6      	; 0xec0 <vfprintf+0x30a>
     eba:	53 0c       	add	r5, r3
     ebc:	5b 18       	sub	r5, r11
     ebe:	b3 2c       	mov	r11, r3
     ec0:	b3 14       	cp	r11, r3
     ec2:	60 f4       	brcc	.+24     	; 0xedc <vfprintf+0x326>
     ec4:	b7 01       	movw	r22, r14
     ec6:	80 e2       	ldi	r24, 0x20	; 32
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	3c 87       	std	Y+12, r19	; 0x0c
     ecc:	78 d0       	rcall	.+240    	; 0xfbe <fputc>
     ece:	b3 94       	inc	r11
     ed0:	3c 85       	ldd	r19, Y+12	; 0x0c
     ed2:	f6 cf       	rjmp	.-20     	; 0xec0 <vfprintf+0x30a>
     ed4:	b3 14       	cp	r11, r3
     ed6:	10 f4       	brcc	.+4      	; 0xedc <vfprintf+0x326>
     ed8:	3b 18       	sub	r3, r11
     eda:	01 c0       	rjmp	.+2      	; 0xede <vfprintf+0x328>
     edc:	31 2c       	mov	r3, r1
     ede:	34 ff       	sbrs	r19, 4
     ee0:	11 c0       	rjmp	.+34     	; 0xf04 <vfprintf+0x34e>
     ee2:	b7 01       	movw	r22, r14
     ee4:	80 e3       	ldi	r24, 0x30	; 48
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	3c 87       	std	Y+12, r19	; 0x0c
     eea:	69 d0       	rcall	.+210    	; 0xfbe <fputc>
     eec:	3c 85       	ldd	r19, Y+12	; 0x0c
     eee:	32 ff       	sbrs	r19, 2
     ef0:	16 c0       	rjmp	.+44     	; 0xf1e <vfprintf+0x368>
     ef2:	31 fd       	sbrc	r19, 1
     ef4:	03 c0       	rjmp	.+6      	; 0xefc <vfprintf+0x346>
     ef6:	88 e7       	ldi	r24, 0x78	; 120
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <vfprintf+0x34a>
     efc:	88 e5       	ldi	r24, 0x58	; 88
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	b7 01       	movw	r22, r14
     f02:	0c c0       	rjmp	.+24     	; 0xf1c <vfprintf+0x366>
     f04:	83 2f       	mov	r24, r19
     f06:	86 78       	andi	r24, 0x86	; 134
     f08:	51 f0       	breq	.+20     	; 0xf1e <vfprintf+0x368>
     f0a:	31 ff       	sbrs	r19, 1
     f0c:	02 c0       	rjmp	.+4      	; 0xf12 <vfprintf+0x35c>
     f0e:	8b e2       	ldi	r24, 0x2B	; 43
     f10:	01 c0       	rjmp	.+2      	; 0xf14 <vfprintf+0x35e>
     f12:	80 e2       	ldi	r24, 0x20	; 32
     f14:	37 fd       	sbrc	r19, 7
     f16:	8d e2       	ldi	r24, 0x2D	; 45
     f18:	b7 01       	movw	r22, r14
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	50 d0       	rcall	.+160    	; 0xfbe <fputc>
     f1e:	a5 14       	cp	r10, r5
     f20:	30 f4       	brcc	.+12     	; 0xf2e <vfprintf+0x378>
     f22:	b7 01       	movw	r22, r14
     f24:	80 e3       	ldi	r24, 0x30	; 48
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	4a d0       	rcall	.+148    	; 0xfbe <fputc>
     f2a:	5a 94       	dec	r5
     f2c:	f8 cf       	rjmp	.-16     	; 0xf1e <vfprintf+0x368>
     f2e:	aa 94       	dec	r10
     f30:	f4 01       	movw	r30, r8
     f32:	ea 0d       	add	r30, r10
     f34:	f1 1d       	adc	r31, r1
     f36:	80 81       	ld	r24, Z
     f38:	b7 01       	movw	r22, r14
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	40 d0       	rcall	.+128    	; 0xfbe <fputc>
     f3e:	a1 10       	cpse	r10, r1
     f40:	f6 cf       	rjmp	.-20     	; 0xf2e <vfprintf+0x378>
     f42:	33 20       	and	r3, r3
     f44:	09 f4       	brne	.+2      	; 0xf48 <vfprintf+0x392>
     f46:	5d ce       	rjmp	.-838    	; 0xc02 <vfprintf+0x4c>
     f48:	b7 01       	movw	r22, r14
     f4a:	80 e2       	ldi	r24, 0x20	; 32
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	37 d0       	rcall	.+110    	; 0xfbe <fputc>
     f50:	3a 94       	dec	r3
     f52:	f7 cf       	rjmp	.-18     	; 0xf42 <vfprintf+0x38c>
     f54:	f7 01       	movw	r30, r14
     f56:	86 81       	ldd	r24, Z+6	; 0x06
     f58:	97 81       	ldd	r25, Z+7	; 0x07
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <vfprintf+0x3aa>
     f5c:	8f ef       	ldi	r24, 0xFF	; 255
     f5e:	9f ef       	ldi	r25, 0xFF	; 255
     f60:	2c 96       	adiw	r28, 0x0c	; 12
     f62:	0f b6       	in	r0, 0x3f	; 63
     f64:	f8 94       	cli
     f66:	de bf       	out	0x3e, r29	; 62
     f68:	0f be       	out	0x3f, r0	; 63
     f6a:	cd bf       	out	0x3d, r28	; 61
     f6c:	df 91       	pop	r29
     f6e:	cf 91       	pop	r28
     f70:	1f 91       	pop	r17
     f72:	0f 91       	pop	r16
     f74:	ff 90       	pop	r15
     f76:	ef 90       	pop	r14
     f78:	df 90       	pop	r13
     f7a:	cf 90       	pop	r12
     f7c:	bf 90       	pop	r11
     f7e:	af 90       	pop	r10
     f80:	9f 90       	pop	r9
     f82:	8f 90       	pop	r8
     f84:	7f 90       	pop	r7
     f86:	6f 90       	pop	r6
     f88:	5f 90       	pop	r5
     f8a:	4f 90       	pop	r4
     f8c:	3f 90       	pop	r3
     f8e:	2f 90       	pop	r2
     f90:	08 95       	ret

00000f92 <strnlen_P>:
     f92:	fc 01       	movw	r30, r24
     f94:	05 90       	lpm	r0, Z+
     f96:	61 50       	subi	r22, 0x01	; 1
     f98:	70 40       	sbci	r23, 0x00	; 0
     f9a:	01 10       	cpse	r0, r1
     f9c:	d8 f7       	brcc	.-10     	; 0xf94 <strnlen_P+0x2>
     f9e:	80 95       	com	r24
     fa0:	90 95       	com	r25
     fa2:	8e 0f       	add	r24, r30
     fa4:	9f 1f       	adc	r25, r31
     fa6:	08 95       	ret

00000fa8 <strnlen>:
     fa8:	fc 01       	movw	r30, r24
     faa:	61 50       	subi	r22, 0x01	; 1
     fac:	70 40       	sbci	r23, 0x00	; 0
     fae:	01 90       	ld	r0, Z+
     fb0:	01 10       	cpse	r0, r1
     fb2:	d8 f7       	brcc	.-10     	; 0xfaa <strnlen+0x2>
     fb4:	80 95       	com	r24
     fb6:	90 95       	com	r25
     fb8:	8e 0f       	add	r24, r30
     fba:	9f 1f       	adc	r25, r31
     fbc:	08 95       	ret

00000fbe <fputc>:
     fbe:	0f 93       	push	r16
     fc0:	1f 93       	push	r17
     fc2:	cf 93       	push	r28
     fc4:	df 93       	push	r29
     fc6:	fb 01       	movw	r30, r22
     fc8:	23 81       	ldd	r18, Z+3	; 0x03
     fca:	21 fd       	sbrc	r18, 1
     fcc:	03 c0       	rjmp	.+6      	; 0xfd4 <fputc+0x16>
     fce:	8f ef       	ldi	r24, 0xFF	; 255
     fd0:	9f ef       	ldi	r25, 0xFF	; 255
     fd2:	28 c0       	rjmp	.+80     	; 0x1024 <fputc+0x66>
     fd4:	22 ff       	sbrs	r18, 2
     fd6:	16 c0       	rjmp	.+44     	; 0x1004 <fputc+0x46>
     fd8:	46 81       	ldd	r20, Z+6	; 0x06
     fda:	57 81       	ldd	r21, Z+7	; 0x07
     fdc:	24 81       	ldd	r18, Z+4	; 0x04
     fde:	35 81       	ldd	r19, Z+5	; 0x05
     fe0:	42 17       	cp	r20, r18
     fe2:	53 07       	cpc	r21, r19
     fe4:	44 f4       	brge	.+16     	; 0xff6 <fputc+0x38>
     fe6:	a0 81       	ld	r26, Z
     fe8:	b1 81       	ldd	r27, Z+1	; 0x01
     fea:	9d 01       	movw	r18, r26
     fec:	2f 5f       	subi	r18, 0xFF	; 255
     fee:	3f 4f       	sbci	r19, 0xFF	; 255
     ff0:	31 83       	std	Z+1, r19	; 0x01
     ff2:	20 83       	st	Z, r18
     ff4:	8c 93       	st	X, r24
     ff6:	26 81       	ldd	r18, Z+6	; 0x06
     ff8:	37 81       	ldd	r19, Z+7	; 0x07
     ffa:	2f 5f       	subi	r18, 0xFF	; 255
     ffc:	3f 4f       	sbci	r19, 0xFF	; 255
     ffe:	37 83       	std	Z+7, r19	; 0x07
    1000:	26 83       	std	Z+6, r18	; 0x06
    1002:	10 c0       	rjmp	.+32     	; 0x1024 <fputc+0x66>
    1004:	eb 01       	movw	r28, r22
    1006:	09 2f       	mov	r16, r25
    1008:	18 2f       	mov	r17, r24
    100a:	00 84       	ldd	r0, Z+8	; 0x08
    100c:	f1 85       	ldd	r31, Z+9	; 0x09
    100e:	e0 2d       	mov	r30, r0
    1010:	09 95       	icall
    1012:	89 2b       	or	r24, r25
    1014:	e1 f6       	brne	.-72     	; 0xfce <fputc+0x10>
    1016:	8e 81       	ldd	r24, Y+6	; 0x06
    1018:	9f 81       	ldd	r25, Y+7	; 0x07
    101a:	01 96       	adiw	r24, 0x01	; 1
    101c:	9f 83       	std	Y+7, r25	; 0x07
    101e:	8e 83       	std	Y+6, r24	; 0x06
    1020:	81 2f       	mov	r24, r17
    1022:	90 2f       	mov	r25, r16
    1024:	df 91       	pop	r29
    1026:	cf 91       	pop	r28
    1028:	1f 91       	pop	r17
    102a:	0f 91       	pop	r16
    102c:	08 95       	ret

0000102e <__ultoa_invert>:
    102e:	fa 01       	movw	r30, r20
    1030:	aa 27       	eor	r26, r26
    1032:	28 30       	cpi	r18, 0x08	; 8
    1034:	51 f1       	breq	.+84     	; 0x108a <__ultoa_invert+0x5c>
    1036:	20 31       	cpi	r18, 0x10	; 16
    1038:	81 f1       	breq	.+96     	; 0x109a <__ultoa_invert+0x6c>
    103a:	e8 94       	clt
    103c:	6f 93       	push	r22
    103e:	6e 7f       	andi	r22, 0xFE	; 254
    1040:	6e 5f       	subi	r22, 0xFE	; 254
    1042:	7f 4f       	sbci	r23, 0xFF	; 255
    1044:	8f 4f       	sbci	r24, 0xFF	; 255
    1046:	9f 4f       	sbci	r25, 0xFF	; 255
    1048:	af 4f       	sbci	r26, 0xFF	; 255
    104a:	b1 e0       	ldi	r27, 0x01	; 1
    104c:	3e d0       	rcall	.+124    	; 0x10ca <__ultoa_invert+0x9c>
    104e:	b4 e0       	ldi	r27, 0x04	; 4
    1050:	3c d0       	rcall	.+120    	; 0x10ca <__ultoa_invert+0x9c>
    1052:	67 0f       	add	r22, r23
    1054:	78 1f       	adc	r23, r24
    1056:	89 1f       	adc	r24, r25
    1058:	9a 1f       	adc	r25, r26
    105a:	a1 1d       	adc	r26, r1
    105c:	68 0f       	add	r22, r24
    105e:	79 1f       	adc	r23, r25
    1060:	8a 1f       	adc	r24, r26
    1062:	91 1d       	adc	r25, r1
    1064:	a1 1d       	adc	r26, r1
    1066:	6a 0f       	add	r22, r26
    1068:	71 1d       	adc	r23, r1
    106a:	81 1d       	adc	r24, r1
    106c:	91 1d       	adc	r25, r1
    106e:	a1 1d       	adc	r26, r1
    1070:	20 d0       	rcall	.+64     	; 0x10b2 <__ultoa_invert+0x84>
    1072:	09 f4       	brne	.+2      	; 0x1076 <__ultoa_invert+0x48>
    1074:	68 94       	set
    1076:	3f 91       	pop	r19
    1078:	2a e0       	ldi	r18, 0x0A	; 10
    107a:	26 9f       	mul	r18, r22
    107c:	11 24       	eor	r1, r1
    107e:	30 19       	sub	r19, r0
    1080:	30 5d       	subi	r19, 0xD0	; 208
    1082:	31 93       	st	Z+, r19
    1084:	de f6       	brtc	.-74     	; 0x103c <__ultoa_invert+0xe>
    1086:	cf 01       	movw	r24, r30
    1088:	08 95       	ret
    108a:	46 2f       	mov	r20, r22
    108c:	47 70       	andi	r20, 0x07	; 7
    108e:	40 5d       	subi	r20, 0xD0	; 208
    1090:	41 93       	st	Z+, r20
    1092:	b3 e0       	ldi	r27, 0x03	; 3
    1094:	0f d0       	rcall	.+30     	; 0x10b4 <__ultoa_invert+0x86>
    1096:	c9 f7       	brne	.-14     	; 0x108a <__ultoa_invert+0x5c>
    1098:	f6 cf       	rjmp	.-20     	; 0x1086 <__ultoa_invert+0x58>
    109a:	46 2f       	mov	r20, r22
    109c:	4f 70       	andi	r20, 0x0F	; 15
    109e:	40 5d       	subi	r20, 0xD0	; 208
    10a0:	4a 33       	cpi	r20, 0x3A	; 58
    10a2:	18 f0       	brcs	.+6      	; 0x10aa <__ultoa_invert+0x7c>
    10a4:	49 5d       	subi	r20, 0xD9	; 217
    10a6:	31 fd       	sbrc	r19, 1
    10a8:	40 52       	subi	r20, 0x20	; 32
    10aa:	41 93       	st	Z+, r20
    10ac:	02 d0       	rcall	.+4      	; 0x10b2 <__ultoa_invert+0x84>
    10ae:	a9 f7       	brne	.-22     	; 0x109a <__ultoa_invert+0x6c>
    10b0:	ea cf       	rjmp	.-44     	; 0x1086 <__ultoa_invert+0x58>
    10b2:	b4 e0       	ldi	r27, 0x04	; 4
    10b4:	a6 95       	lsr	r26
    10b6:	97 95       	ror	r25
    10b8:	87 95       	ror	r24
    10ba:	77 95       	ror	r23
    10bc:	67 95       	ror	r22
    10be:	ba 95       	dec	r27
    10c0:	c9 f7       	brne	.-14     	; 0x10b4 <__ultoa_invert+0x86>
    10c2:	00 97       	sbiw	r24, 0x00	; 0
    10c4:	61 05       	cpc	r22, r1
    10c6:	71 05       	cpc	r23, r1
    10c8:	08 95       	ret
    10ca:	9b 01       	movw	r18, r22
    10cc:	ac 01       	movw	r20, r24
    10ce:	0a 2e       	mov	r0, r26
    10d0:	06 94       	lsr	r0
    10d2:	57 95       	ror	r21
    10d4:	47 95       	ror	r20
    10d6:	37 95       	ror	r19
    10d8:	27 95       	ror	r18
    10da:	ba 95       	dec	r27
    10dc:	c9 f7       	brne	.-14     	; 0x10d0 <__ultoa_invert+0xa2>
    10de:	62 0f       	add	r22, r18
    10e0:	73 1f       	adc	r23, r19
    10e2:	84 1f       	adc	r24, r20
    10e4:	95 1f       	adc	r25, r21
    10e6:	a0 1d       	adc	r26, r0
    10e8:	08 95       	ret

000010ea <_exit>:
    10ea:	f8 94       	cli

000010ec <__stop_program>:
    10ec:	ff cf       	rjmp	.-2      	; 0x10ec <__stop_program>
