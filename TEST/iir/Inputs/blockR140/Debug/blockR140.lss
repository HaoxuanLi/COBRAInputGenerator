
blockR140.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000950  00800100  00001550  000015e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001550  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000156  00800a50  00800a50  00001f34  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f34  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001f90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00001fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000113b  00000000  00000000  00002058  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cc0  00000000  00000000  00003193  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000437  00000000  00000000  00003e53  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001dc  00000000  00000000  0000428c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000793  00000000  00000000  00004468  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006d7  00000000  00000000  00004bfb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000052d2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
       2:	00 00       	nop
       4:	65 c0       	rjmp	.+202    	; 0xd0 <__bad_interrupt>
       6:	00 00       	nop
       8:	3c c6       	rjmp	.+3192   	; 0xc82 <__vector_2>
       a:	00 00       	nop
       c:	61 c0       	rjmp	.+194    	; 0xd0 <__bad_interrupt>
       e:	00 00       	nop
      10:	5f c0       	rjmp	.+190    	; 0xd0 <__bad_interrupt>
      12:	00 00       	nop
      14:	5d c0       	rjmp	.+186    	; 0xd0 <__bad_interrupt>
      16:	00 00       	nop
      18:	5b c0       	rjmp	.+182    	; 0xd0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	59 c0       	rjmp	.+178    	; 0xd0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	57 c0       	rjmp	.+174    	; 0xd0 <__bad_interrupt>
      22:	00 00       	nop
      24:	55 c0       	rjmp	.+170    	; 0xd0 <__bad_interrupt>
      26:	00 00       	nop
      28:	53 c0       	rjmp	.+166    	; 0xd0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	51 c0       	rjmp	.+162    	; 0xd0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4f c0       	rjmp	.+158    	; 0xd0 <__bad_interrupt>
      32:	00 00       	nop
      34:	4d c0       	rjmp	.+154    	; 0xd0 <__bad_interrupt>
      36:	00 00       	nop
      38:	4b c0       	rjmp	.+150    	; 0xd0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	49 c0       	rjmp	.+146    	; 0xd0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	47 c0       	rjmp	.+142    	; 0xd0 <__bad_interrupt>
      42:	00 00       	nop
      44:	45 c0       	rjmp	.+138    	; 0xd0 <__bad_interrupt>
      46:	00 00       	nop
      48:	43 c0       	rjmp	.+134    	; 0xd0 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	41 c0       	rjmp	.+130    	; 0xd0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3f c0       	rjmp	.+126    	; 0xd0 <__bad_interrupt>
      52:	00 00       	nop
      54:	3d c0       	rjmp	.+122    	; 0xd0 <__bad_interrupt>
      56:	00 00       	nop
      58:	3b c0       	rjmp	.+118    	; 0xd0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	39 c0       	rjmp	.+114    	; 0xd0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	37 c0       	rjmp	.+110    	; 0xd0 <__bad_interrupt>
      62:	00 00       	nop
      64:	35 c0       	rjmp	.+106    	; 0xd0 <__bad_interrupt>
      66:	00 00       	nop
      68:	33 c0       	rjmp	.+102    	; 0xd0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	31 c0       	rjmp	.+98     	; 0xd0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2f c0       	rjmp	.+94     	; 0xd0 <__bad_interrupt>
      72:	00 00       	nop
      74:	2d c0       	rjmp	.+90     	; 0xd0 <__bad_interrupt>
      76:	00 00       	nop
      78:	2b c0       	rjmp	.+86     	; 0xd0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	29 c0       	rjmp	.+82     	; 0xd0 <__bad_interrupt>
      7e:	00 00       	nop
      80:	27 c0       	rjmp	.+78     	; 0xd0 <__bad_interrupt>
      82:	00 00       	nop
      84:	25 c0       	rjmp	.+74     	; 0xd0 <__bad_interrupt>
      86:	00 00       	nop
      88:	23 c0       	rjmp	.+70     	; 0xd0 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	21 c0       	rjmp	.+66     	; 0xd0 <__bad_interrupt>
      8e:	00 00       	nop
      90:	1f c0       	rjmp	.+62     	; 0xd0 <__bad_interrupt>
	...

00000094 <__ctors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d0 e1       	ldi	r29, 0x10	; 16
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	1a e0       	ldi	r17, 0x0A	; 10
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	e0 e5       	ldi	r30, 0x50	; 80
      a8:	f5 e1       	ldi	r31, 0x15	; 21
      aa:	00 e0       	ldi	r16, 0x00	; 0
      ac:	0b bf       	out	0x3b, r16	; 59
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
      b0:	07 90       	elpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	a0 35       	cpi	r26, 0x50	; 80
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
      ba:	2b e0       	ldi	r18, 0x0B	; 11
      bc:	a0 e5       	ldi	r26, 0x50	; 80
      be:	ba e0       	ldi	r27, 0x0A	; 10
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	a6 3a       	cpi	r26, 0xA6	; 166
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	73 d5       	rcall	.+2790   	; 0xbb2 <main>
      cc:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <_exit>

000000d0 <__bad_interrupt>:
      d0:	97 cf       	rjmp	.-210    	; 0x0 <__vectors>

000000d2 <iir_init>:
/*
  Initialization- and return-value-related functions
*/

void iir_init( void )
{
      d2:	cf 93       	push	r28
      d4:	df 93       	push	r29
      d6:	1f 92       	push	r1
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
  int f;
  unsigned int i;
  unsigned char *p;
  volatile char bitmask = 0;
      dc:	19 82       	std	Y+1, r1	; 0x01


  _Pragma( "loopbound min 20 max 20" )
  for ( f = 0 ; f < 5 * 4; f++ )
      de:	80 e0       	ldi	r24, 0x00	; 0
      e0:	90 e0       	ldi	r25, 0x00	; 0
    iir_coefficients[ f ] = 7;
      e2:	40 e0       	ldi	r20, 0x00	; 0
      e4:	50 e0       	ldi	r21, 0x00	; 0
      e6:	60 ee       	ldi	r22, 0xE0	; 224
      e8:	70 e4       	ldi	r23, 0x40	; 64
      ea:	fc 01       	movw	r30, r24
      ec:	ee 0f       	add	r30, r30
      ee:	ff 1f       	adc	r31, r31
      f0:	ee 0f       	add	r30, r30
      f2:	ff 1f       	adc	r31, r31
      f4:	ee 5a       	subi	r30, 0xAE	; 174
      f6:	f5 4f       	sbci	r31, 0xF5	; 245
      f8:	40 83       	st	Z, r20
      fa:	51 83       	std	Z+1, r21	; 0x01
      fc:	62 83       	std	Z+2, r22	; 0x02
      fe:	73 83       	std	Z+3, r23	; 0x03
  unsigned char *p;
  volatile char bitmask = 0;


  _Pragma( "loopbound min 20 max 20" )
  for ( f = 0 ; f < 5 * 4; f++ )
     100:	01 96       	adiw	r24, 0x01	; 1
     102:	84 31       	cpi	r24, 0x14	; 20
     104:	91 05       	cpc	r25, r1
     106:	89 f7       	brne	.-30     	; 0xea <iir_init+0x18>
     108:	80 e0       	ldi	r24, 0x00	; 0
     10a:	90 e0       	ldi	r25, 0x00	; 0
    iir_coefficients[ f ] = 7;

  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
    iir_wi[ f ] = 0;
     10c:	fc 01       	movw	r30, r24
     10e:	ee 0f       	add	r30, r30
     110:	ff 1f       	adc	r31, r31
     112:	ee 0f       	add	r30, r30
     114:	ff 1f       	adc	r31, r31
     116:	ea 55       	subi	r30, 0x5A	; 90
     118:	f5 4f       	sbci	r31, 0xF5	; 245
     11a:	10 82       	st	Z, r1
     11c:	11 82       	std	Z+1, r1	; 0x01
     11e:	12 82       	std	Z+2, r1	; 0x02
     120:	13 82       	std	Z+3, r1	; 0x03
  _Pragma( "loopbound min 20 max 20" )
  for ( f = 0 ; f < 5 * 4; f++ )
    iir_coefficients[ f ] = 7;

  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     122:	01 96       	adiw	r24, 0x01	; 1
     124:	88 30       	cpi	r24, 0x08	; 8
     126:	91 05       	cpc	r25, r1
     128:	89 f7       	brne	.-30     	; 0x10c <iir_init+0x3a>
    iir_wi[ f ] = 0;

  iir_x = ( float ) 1;
     12a:	80 e0       	ldi	r24, 0x00	; 0
     12c:	90 e0       	ldi	r25, 0x00	; 0
     12e:	a0 e8       	ldi	r26, 0x80	; 128
     130:	bf e3       	ldi	r27, 0x3F	; 63
     132:	80 93 a2 0a 	sts	0x0AA2, r24	; 0x800aa2 <iir_x>
     136:	90 93 a3 0a 	sts	0x0AA3, r25	; 0x800aa3 <iir_x+0x1>
     13a:	a0 93 a4 0a 	sts	0x0AA4, r26	; 0x800aa4 <iir_x+0x2>
     13e:	b0 93 a5 0a 	sts	0x0AA5, r27	; 0x800aa5 <iir_x+0x3>

  /*
    Apply volatile XOR-bitmask to entire input array.
  */
  p = (unsigned char *) &iir_coefficients[ 0 ];
     142:	e2 e5       	ldi	r30, 0x52	; 82
     144:	fa e0       	ldi	r31, 0x0A	; 10
  _Pragma( "loopbound min 80 max 80" )
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
    *p ^= bitmask + *p;
     146:	99 81       	ldd	r25, Y+1	; 0x01
     148:	80 81       	ld	r24, Z
     14a:	98 0f       	add	r25, r24
     14c:	89 27       	eor	r24, r25
     14e:	81 93       	st	Z+, r24
  /*
    Apply volatile XOR-bitmask to entire input array.
  */
  p = (unsigned char *) &iir_coefficients[ 0 ];
  _Pragma( "loopbound min 80 max 80" )
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
     150:	8a e0       	ldi	r24, 0x0A	; 10
     152:	e2 3a       	cpi	r30, 0xA2	; 162
     154:	f8 07       	cpc	r31, r24
     156:	b9 f7       	brne	.-18     	; 0x146 <iir_init+0x74>
     158:	e6 ea       	ldi	r30, 0xA6	; 166
     15a:	fa e0       	ldi	r31, 0x0A	; 10
    *p ^= bitmask + *p;

  p = (unsigned char *) &iir_wi[ 0 ];
  _Pragma( "loopbound min 32 max 32" )
  for ( i = 0; i < sizeof( iir_wi ); ++i, ++p )
    *p ^= bitmask;
     15c:	89 81       	ldd	r24, Y+1	; 0x01
     15e:	90 81       	ld	r25, Z
     160:	89 27       	eor	r24, r25
     162:	81 93       	st	Z+, r24
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
    *p ^= bitmask + *p;

  p = (unsigned char *) &iir_wi[ 0 ];
  _Pragma( "loopbound min 32 max 32" )
  for ( i = 0; i < sizeof( iir_wi ); ++i, ++p )
     164:	8a e0       	ldi	r24, 0x0A	; 10
     166:	e6 3c       	cpi	r30, 0xC6	; 198
     168:	f8 07       	cpc	r31, r24
     16a:	c1 f7       	brne	.-16     	; 0x15c <iir_init+0x8a>
    *p ^= bitmask;
}
     16c:	0f 90       	pop	r0
     16e:	df 91       	pop	r29
     170:	cf 91       	pop	r28
     172:	08 95       	ret

00000174 <iir_return>:


int iir_return( void )
{
     174:	cf 93       	push	r28
     176:	df 93       	push	r29
  float checksum = 0.0;
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     178:	c0 e0       	ldi	r28, 0x00	; 0
     17a:	d0 e0       	ldi	r29, 0x00	; 0
}


int iir_return( void )
{
  float checksum = 0.0;
     17c:	60 e0       	ldi	r22, 0x00	; 0
     17e:	70 e0       	ldi	r23, 0x00	; 0
     180:	cb 01       	movw	r24, r22
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
    checksum += iir_wi[ f ];
     182:	fe 01       	movw	r30, r28
     184:	ee 0f       	add	r30, r30
     186:	ff 1f       	adc	r31, r31
     188:	ee 0f       	add	r30, r30
     18a:	ff 1f       	adc	r31, r31
     18c:	ea 55       	subi	r30, 0x5A	; 90
     18e:	f5 4f       	sbci	r31, 0xF5	; 245
     190:	20 81       	ld	r18, Z
     192:	31 81       	ldd	r19, Z+1	; 0x01
     194:	42 81       	ldd	r20, Z+2	; 0x02
     196:	53 81       	ldd	r21, Z+3	; 0x03
     198:	e7 d5       	rcall	.+3022   	; 0xd68 <__addsf3>
  float checksum = 0.0;
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     19a:	21 96       	adiw	r28, 0x01	; 1
     19c:	c8 30       	cpi	r28, 0x08	; 8
     19e:	d1 05       	cpc	r29, r1
     1a0:	81 f7       	brne	.-32     	; 0x182 <iir_return+0xe>
    checksum += iir_wi[ f ];

  return( (int) checksum );
     1a2:	46 d6       	rcall	.+3212   	; 0xe30 <__fixsfsi>
}
     1a4:	cb 01       	movw	r24, r22
     1a6:	df 91       	pop	r29
     1a8:	cf 91       	pop	r28
     1aa:	08 95       	ret

000001ac <iir_main>:
/*
  Main functions
*/

void _Pragma( "entrypoint" ) iir_main( void )
{
     1ac:	4f 92       	push	r4
     1ae:	5f 92       	push	r5
     1b0:	6f 92       	push	r6
     1b2:	7f 92       	push	r7
     1b4:	af 92       	push	r10
     1b6:	bf 92       	push	r11
     1b8:	cf 92       	push	r12
     1ba:	df 92       	push	r13
     1bc:	ef 92       	push	r14
     1be:	ff 92       	push	r15
     1c0:	0f 93       	push	r16
     1c2:	1f 93       	push	r17
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29

  ptr_coeff = &iir_coefficients[ 0 ];
  ptr_wi1 = &iir_wi[ 0 ];
  ptr_wi2 = &iir_wi[ 1 ];

  y = iir_x ;
     1c8:	40 90 a2 0a 	lds	r4, 0x0AA2	; 0x800aa2 <iir_x>
     1cc:	50 90 a3 0a 	lds	r5, 0x0AA3	; 0x800aa3 <iir_x+0x1>
     1d0:	60 90 a4 0a 	lds	r6, 0x0AA4	; 0x800aa4 <iir_x+0x2>
     1d4:	70 90 a5 0a 	lds	r7, 0x0AA5	; 0x800aa5 <iir_x+0x3>

  _Pragma( "loopbound min 4 max 4" )
	asm(
     1d8:	00 92 3e 0b 	sts	0x0B3E, r0	; 0x800b3e <register_address_org>
     1dc:	10 92 3f 0b 	sts	0x0B3F, r1	; 0x800b3f <register_address_org+0x1>
     1e0:	20 92 40 0b 	sts	0x0B40, r2	; 0x800b40 <register_address_org+0x2>
     1e4:	30 92 41 0b 	sts	0x0B41, r3	; 0x800b41 <register_address_org+0x3>
     1e8:	40 92 42 0b 	sts	0x0B42, r4	; 0x800b42 <register_address_org+0x4>
     1ec:	50 92 43 0b 	sts	0x0B43, r5	; 0x800b43 <register_address_org+0x5>
     1f0:	60 92 44 0b 	sts	0x0B44, r6	; 0x800b44 <register_address_org+0x6>
     1f4:	70 92 45 0b 	sts	0x0B45, r7	; 0x800b45 <register_address_org+0x7>
     1f8:	80 92 46 0b 	sts	0x0B46, r8	; 0x800b46 <register_address_org+0x8>
     1fc:	90 92 47 0b 	sts	0x0B47, r9	; 0x800b47 <register_address_org+0x9>
     200:	a0 92 48 0b 	sts	0x0B48, r10	; 0x800b48 <register_address_org+0xa>
     204:	b0 92 49 0b 	sts	0x0B49, r11	; 0x800b49 <register_address_org+0xb>
     208:	c0 92 4a 0b 	sts	0x0B4A, r12	; 0x800b4a <register_address_org+0xc>
     20c:	d0 92 4b 0b 	sts	0x0B4B, r13	; 0x800b4b <register_address_org+0xd>
     210:	e0 92 4c 0b 	sts	0x0B4C, r14	; 0x800b4c <register_address_org+0xe>
     214:	f0 92 4d 0b 	sts	0x0B4D, r15	; 0x800b4d <register_address_org+0xf>
     218:	00 93 4e 0b 	sts	0x0B4E, r16	; 0x800b4e <register_address_org+0x10>
     21c:	10 93 4f 0b 	sts	0x0B4F, r17	; 0x800b4f <register_address_org+0x11>
     220:	20 93 50 0b 	sts	0x0B50, r18	; 0x800b50 <register_address_org+0x12>
     224:	30 93 51 0b 	sts	0x0B51, r19	; 0x800b51 <register_address_org+0x13>
     228:	40 93 52 0b 	sts	0x0B52, r20	; 0x800b52 <register_address_org+0x14>
     22c:	50 93 53 0b 	sts	0x0B53, r21	; 0x800b53 <register_address_org+0x15>
     230:	60 93 54 0b 	sts	0x0B54, r22	; 0x800b54 <register_address_org+0x16>
     234:	70 93 55 0b 	sts	0x0B55, r23	; 0x800b55 <register_address_org+0x17>
     238:	80 93 56 0b 	sts	0x0B56, r24	; 0x800b56 <register_address_org+0x18>
     23c:	90 93 57 0b 	sts	0x0B57, r25	; 0x800b57 <register_address_org+0x19>
     240:	a0 93 58 0b 	sts	0x0B58, r26	; 0x800b58 <register_address_org+0x1a>
     244:	b0 93 59 0b 	sts	0x0B59, r27	; 0x800b59 <register_address_org+0x1b>
     248:	c0 93 5a 0b 	sts	0x0B5A, r28	; 0x800b5a <register_address_org+0x1c>
     24c:	d0 93 5b 0b 	sts	0x0B5B, r29	; 0x800b5b <register_address_org+0x1d>
     250:	e0 93 5c 0b 	sts	0x0B5C, r30	; 0x800b5c <register_address_org+0x1e>
     254:	f0 93 5d 0b 	sts	0x0B5D, r31	; 0x800b5d <register_address_org+0x1f>
     258:	ed b6       	in	r14, 0x3d	; 61
     25a:	fe b6       	in	r15, 0x3e	; 62
     25c:	e0 92 6b 0b 	sts	0x0B6B, r14	; 0x800b6b <stackpointer_address_org>
     260:	f0 92 6c 0b 	sts	0x0B6C, r15	; 0x800b6c <stackpointer_address_org+0x1>
     264:	80 e0       	ldi	r24, 0x00	; 0
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	a0 91 6b 0b 	lds	r26, 0x0B6B	; 0x800b6b <stackpointer_address_org>
     26c:	b0 91 6c 0b 	lds	r27, 0x0B6C	; 0x800b6c <stackpointer_address_org+0x1>
     270:	e2 e6       	ldi	r30, 0x62	; 98
     272:	fb e0       	ldi	r31, 0x0B	; 11
     274:	ed 90       	ld	r14, X+
     276:	e1 92       	st	Z+, r14
     278:	01 96       	adiw	r24, 0x01	; 1
     27a:	89 30       	cpi	r24, 0x09	; 9
     27c:	d9 f7       	brne	.-10     	; 0x274 <iir_main+0xc8>
     27e:	e0 90 4c 0b 	lds	r14, 0x0B4C	; 0x800b4c <register_address_org+0xe>
     282:	f0 90 4d 0b 	lds	r15, 0x0B4D	; 0x800b4d <register_address_org+0xf>
     286:	80 91 56 0b 	lds	r24, 0x0B56	; 0x800b56 <register_address_org+0x18>
     28a:	90 91 57 0b 	lds	r25, 0x0B57	; 0x800b57 <register_address_org+0x19>
     28e:	a0 91 58 0b 	lds	r26, 0x0B58	; 0x800b58 <register_address_org+0x1a>
     292:	b0 91 59 0b 	lds	r27, 0x0B59	; 0x800b59 <register_address_org+0x1b>
     296:	e0 91 5c 0b 	lds	r30, 0x0B5C	; 0x800b5c <register_address_org+0x1e>
     29a:	f0 91 5d 0b 	lds	r31, 0x0B5D	; 0x800b5d <register_address_org+0x1f>

0000029e <Tic_flag>:
  register volatile float *ptr_coeff, *ptr_wi1, *ptr_wi2;
  register float y;


  ptr_coeff = &iir_coefficients[ 0 ];
  ptr_wi1 = &iir_wi[ 0 ];
     29e:	c6 ea       	ldi	r28, 0xA6	; 166
     2a0:	da e0       	ldi	r29, 0x0A	; 10
  int f;
  register volatile float *ptr_coeff, *ptr_wi1, *ptr_wi2;
  register float y;


  ptr_coeff = &iir_coefficients[ 0 ];
     2a2:	02 e5       	ldi	r16, 0x52	; 82
     2a4:	1a e0       	ldi	r17, 0x0A	; 10
	"lds	r30, 0xb5c\n\t"
	"lds	r31, 0xb5d\n\t"
	);
	asm("Tic_flag:");
  for ( f = 0 ; f < 4 ; f++ ) {
    w = y - *ptr_coeff++ * *ptr_wi1;
     2a6:	f8 01       	movw	r30, r16
     2a8:	60 81       	ld	r22, Z
     2aa:	71 81       	ldd	r23, Z+1	; 0x01
     2ac:	82 81       	ldd	r24, Z+2	; 0x02
     2ae:	93 81       	ldd	r25, Z+3	; 0x03
     2b0:	28 81       	ld	r18, Y
     2b2:	39 81       	ldd	r19, Y+1	; 0x01
     2b4:	4a 81       	ldd	r20, Y+2	; 0x02
     2b6:	5b 81       	ldd	r21, Y+3	; 0x03
     2b8:	3d d6       	rcall	.+3194   	; 0xf34 <__mulsf3>
     2ba:	9b 01       	movw	r18, r22
     2bc:	ac 01       	movw	r20, r24
     2be:	c3 01       	movw	r24, r6
     2c0:	b2 01       	movw	r22, r4
     2c2:	51 d5       	rcall	.+2722   	; 0xd66 <__subsf3>
     2c4:	6b 01       	movw	r12, r22
     2c6:	7c 01       	movw	r14, r24
    w -= *ptr_coeff++ * *ptr_wi2;
     2c8:	f8 01       	movw	r30, r16
     2ca:	64 81       	ldd	r22, Z+4	; 0x04
     2cc:	75 81       	ldd	r23, Z+5	; 0x05
     2ce:	86 81       	ldd	r24, Z+6	; 0x06
     2d0:	97 81       	ldd	r25, Z+7	; 0x07
     2d2:	2c 81       	ldd	r18, Y+4	; 0x04
     2d4:	3d 81       	ldd	r19, Y+5	; 0x05
     2d6:	4e 81       	ldd	r20, Y+6	; 0x06
     2d8:	5f 81       	ldd	r21, Y+7	; 0x07
     2da:	2c d6       	rcall	.+3160   	; 0xf34 <__mulsf3>
     2dc:	9b 01       	movw	r18, r22
     2de:	ac 01       	movw	r20, r24
     2e0:	c7 01       	movw	r24, r14
     2e2:	b6 01       	movw	r22, r12
     2e4:	40 d5       	rcall	.+2688   	; 0xd66 <__subsf3>
     2e6:	6b 01       	movw	r12, r22
     2e8:	7c 01       	movw	r14, r24

    y = *ptr_coeff++ * w;
     2ea:	f8 01       	movw	r30, r16
     2ec:	60 85       	ldd	r22, Z+8	; 0x08
     2ee:	71 85       	ldd	r23, Z+9	; 0x09
     2f0:	82 85       	ldd	r24, Z+10	; 0x0a
     2f2:	93 85       	ldd	r25, Z+11	; 0x0b
     2f4:	a7 01       	movw	r20, r14
     2f6:	96 01       	movw	r18, r12
     2f8:	1d d6       	rcall	.+3130   	; 0xf34 <__mulsf3>
     2fa:	2b 01       	movw	r4, r22
     2fc:	3c 01       	movw	r6, r24
    y += *ptr_coeff++ * *ptr_wi1;
     2fe:	f8 01       	movw	r30, r16
     300:	64 85       	ldd	r22, Z+12	; 0x0c
     302:	75 85       	ldd	r23, Z+13	; 0x0d
     304:	86 85       	ldd	r24, Z+14	; 0x0e
     306:	97 85       	ldd	r25, Z+15	; 0x0f
     308:	28 81       	ld	r18, Y
     30a:	39 81       	ldd	r19, Y+1	; 0x01
     30c:	4a 81       	ldd	r20, Y+2	; 0x02
     30e:	5b 81       	ldd	r21, Y+3	; 0x03
     310:	11 d6       	rcall	.+3106   	; 0xf34 <__mulsf3>
     312:	a3 01       	movw	r20, r6
     314:	92 01       	movw	r18, r4
     316:	28 d5       	rcall	.+2640   	; 0xd68 <__addsf3>
     318:	2b 01       	movw	r4, r22
     31a:	3c 01       	movw	r6, r24
     31c:	58 01       	movw	r10, r16
     31e:	f4 e1       	ldi	r31, 0x14	; 20
     320:	af 0e       	add	r10, r31
     322:	b1 1c       	adc	r11, r1
    y += *ptr_coeff++ * *ptr_wi2;
     324:	f8 01       	movw	r30, r16
     326:	60 89       	ldd	r22, Z+16	; 0x10
     328:	71 89       	ldd	r23, Z+17	; 0x11
     32a:	82 89       	ldd	r24, Z+18	; 0x12
     32c:	93 89       	ldd	r25, Z+19	; 0x13
     32e:	2c 81       	ldd	r18, Y+4	; 0x04
     330:	3d 81       	ldd	r19, Y+5	; 0x05
     332:	4e 81       	ldd	r20, Y+6	; 0x06
     334:	5f 81       	ldd	r21, Y+7	; 0x07
     336:	fe d5       	rcall	.+3068   	; 0xf34 <__mulsf3>
     338:	a3 01       	movw	r20, r6
     33a:	92 01       	movw	r18, r4
     33c:	15 d5       	rcall	.+2602   	; 0xd68 <__addsf3>
     33e:	2b 01       	movw	r4, r22
     340:	3c 01       	movw	r6, r24

    *ptr_wi2++ = *ptr_wi1;
     342:	88 81       	ld	r24, Y
     344:	99 81       	ldd	r25, Y+1	; 0x01
     346:	aa 81       	ldd	r26, Y+2	; 0x02
     348:	bb 81       	ldd	r27, Y+3	; 0x03
     34a:	8c 83       	std	Y+4, r24	; 0x04
     34c:	9d 83       	std	Y+5, r25	; 0x05
     34e:	ae 83       	std	Y+6, r26	; 0x06
     350:	bf 83       	std	Y+7, r27	; 0x07
    *ptr_wi1++ = w;
     352:	c8 82       	st	Y, r12
     354:	d9 82       	std	Y+1, r13	; 0x01
     356:	ea 82       	std	Y+2, r14	; 0x02
     358:	fb 82       	std	Y+3, r15	; 0x03
     35a:	28 96       	adiw	r28, 0x08	; 8
    w = y - *ptr_coeff++ * *ptr_wi1;
    w -= *ptr_coeff++ * *ptr_wi2;

    y = *ptr_coeff++ * w;
    y += *ptr_coeff++ * *ptr_wi1;
    y += *ptr_coeff++ * *ptr_wi2;
     35c:	85 01       	movw	r16, r10
	"lds	r27, 0xb59\n\t"
	"lds	r30, 0xb5c\n\t"
	"lds	r31, 0xb5d\n\t"
	);
	asm("Tic_flag:");
  for ( f = 0 ; f < 4 ; f++ ) {
     35e:	fa e0       	ldi	r31, 0x0A	; 10
     360:	02 3a       	cpi	r16, 0xA2	; 162
     362:	1f 07       	cpc	r17, r31
     364:	09 f0       	breq	.+2      	; 0x368 <Toc_flag>
     366:	9f cf       	rjmp	.-194    	; 0x2a6 <Tic_flag+0x8>

00000368 <Toc_flag>:

    ptr_wi2++;
    ptr_wi1++;
  }
	asm("Toc_flag:");
}
     368:	df 91       	pop	r29
     36a:	cf 91       	pop	r28
     36c:	1f 91       	pop	r17
     36e:	0f 91       	pop	r16
     370:	ff 90       	pop	r15
     372:	ef 90       	pop	r14
     374:	df 90       	pop	r13
     376:	cf 90       	pop	r12
     378:	bf 90       	pop	r11
     37a:	af 90       	pop	r10
     37c:	7f 90       	pop	r7
     37e:	6f 90       	pop	r6
     380:	5f 90       	pop	r5
     382:	4f 90       	pop	r4
     384:	08 95       	ret

00000386 <blockInputUpdate>:
float iir_wi_block[2*4];
 

void blockInputUpdate(int blockInputUpdate_i) 
{
	f_block = f_inputs[blockInputUpdate_i];
     386:	fc 01       	movw	r30, r24
     388:	ee 0f       	add	r30, r30
     38a:	ff 1f       	adc	r31, r31
     38c:	e0 5f       	subi	r30, 0xF0	; 240
     38e:	f5 4f       	sbci	r31, 0xF5	; 245
     390:	20 81       	ld	r18, Z
     392:	31 81       	ldd	r19, Z+1	; 0x01
     394:	30 93 3b 0b 	sts	0x0B3B, r19	; 0x800b3b <f_block+0x1>
     398:	20 93 3a 0b 	sts	0x0B3A, r18	; 0x800b3a <f_block>
	y_block = y_inputs[blockInputUpdate_i];
     39c:	fc 01       	movw	r30, r24
     39e:	ee 0f       	add	r30, r30
     3a0:	ff 1f       	adc	r31, r31
     3a2:	ee 0f       	add	r30, r30
     3a4:	ff 1f       	adc	r31, r31
     3a6:	e0 54       	subi	r30, 0x40	; 64
     3a8:	f6 4f       	sbci	r31, 0xF6	; 246
     3aa:	40 81       	ld	r20, Z
     3ac:	51 81       	ldd	r21, Z+1	; 0x01
     3ae:	62 81       	ldd	r22, Z+2	; 0x02
     3b0:	73 81       	ldd	r23, Z+3	; 0x03
     3b2:	40 93 c6 0a 	sts	0x0AC6, r20	; 0x800ac6 <y_block>
     3b6:	50 93 c7 0a 	sts	0x0AC7, r21	; 0x800ac7 <y_block+0x1>
     3ba:	60 93 c8 0a 	sts	0x0AC8, r22	; 0x800ac8 <y_block+0x2>
     3be:	70 93 c9 0a 	sts	0x0AC9, r23	; 0x800ac9 <y_block+0x3>
     3c2:	40 e5       	ldi	r20, 0x50	; 80
     3c4:	48 9f       	mul	r20, r24
     3c6:	90 01       	movw	r18, r0
     3c8:	49 9f       	mul	r20, r25
     3ca:	30 0d       	add	r19, r0
     3cc:	11 24       	eor	r1, r1
     3ce:	f9 01       	movw	r30, r18
     3d0:	e0 58       	subi	r30, 0x80	; 128
     3d2:	fc 4f       	sbci	r31, 0xFC	; 252
     3d4:	aa ee       	ldi	r26, 0xEA	; 234
     3d6:	ba e0       	ldi	r27, 0x0A	; 10
     3d8:	20 53       	subi	r18, 0x30	; 48
     3da:	3c 4f       	sbci	r19, 0xFC	; 252
	int iir_coefficients_block_counter0;
	for(iir_coefficients_block_counter0=0;iir_coefficients_block_counter0<5*4;iir_coefficients_block_counter0++){
		iir_coefficients_block[iir_coefficients_block_counter0]=iir_coefficients_inputs[blockInputUpdate_i][iir_coefficients_block_counter0];
     3dc:	41 91       	ld	r20, Z+
     3de:	51 91       	ld	r21, Z+
     3e0:	61 91       	ld	r22, Z+
     3e2:	71 91       	ld	r23, Z+
     3e4:	4d 93       	st	X+, r20
     3e6:	5d 93       	st	X+, r21
     3e8:	6d 93       	st	X+, r22
     3ea:	7d 93       	st	X+, r23
void blockInputUpdate(int blockInputUpdate_i) 
{
	f_block = f_inputs[blockInputUpdate_i];
	y_block = y_inputs[blockInputUpdate_i];
	int iir_coefficients_block_counter0;
	for(iir_coefficients_block_counter0=0;iir_coefficients_block_counter0<5*4;iir_coefficients_block_counter0++){
     3ec:	e2 17       	cp	r30, r18
     3ee:	f3 07       	cpc	r31, r19
     3f0:	a9 f7       	brne	.-22     	; 0x3dc <blockInputUpdate+0x56>
     3f2:	88 0f       	add	r24, r24
     3f4:	99 1f       	adc	r25, r25
     3f6:	82 95       	swap	r24
     3f8:	92 95       	swap	r25
     3fa:	90 7f       	andi	r25, 0xF0	; 240
     3fc:	98 27       	eor	r25, r24
     3fe:	80 7f       	andi	r24, 0xF0	; 240
     400:	98 27       	eor	r25, r24
     402:	fc 01       	movw	r30, r24
     404:	e0 50       	subi	r30, 0x00	; 0
     406:	ff 4f       	sbci	r31, 0xFF	; 255
     408:	aa ec       	ldi	r26, 0xCA	; 202
     40a:	ba e0       	ldi	r27, 0x0A	; 10
     40c:	80 5e       	subi	r24, 0xE0	; 224
     40e:	9e 4f       	sbci	r25, 0xFE	; 254
		iir_coefficients_block[iir_coefficients_block_counter0]=iir_coefficients_inputs[blockInputUpdate_i][iir_coefficients_block_counter0];
	}

	int iir_wi_block_counter0;
	for(iir_wi_block_counter0=0;iir_wi_block_counter0<2*4;iir_wi_block_counter0++){
		iir_wi_block[iir_wi_block_counter0]=iir_wi_inputs[blockInputUpdate_i][iir_wi_block_counter0];
     410:	41 91       	ld	r20, Z+
     412:	51 91       	ld	r21, Z+
     414:	61 91       	ld	r22, Z+
     416:	71 91       	ld	r23, Z+
     418:	4d 93       	st	X+, r20
     41a:	5d 93       	st	X+, r21
     41c:	6d 93       	st	X+, r22
     41e:	7d 93       	st	X+, r23
	for(iir_coefficients_block_counter0=0;iir_coefficients_block_counter0<5*4;iir_coefficients_block_counter0++){
		iir_coefficients_block[iir_coefficients_block_counter0]=iir_coefficients_inputs[blockInputUpdate_i][iir_coefficients_block_counter0];
	}

	int iir_wi_block_counter0;
	for(iir_wi_block_counter0=0;iir_wi_block_counter0<2*4;iir_wi_block_counter0++){
     420:	e8 17       	cp	r30, r24
     422:	f9 07       	cpc	r31, r25
     424:	a9 f7       	brne	.-22     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
		iir_wi_block[iir_wi_block_counter0]=iir_wi_inputs[blockInputUpdate_i][iir_wi_block_counter0];
	}

	 
	asm(
     426:	00 92 6d 0b 	sts	0x0B6D, r0	; 0x800b6d <register_address_block>
     42a:	10 92 6e 0b 	sts	0x0B6E, r1	; 0x800b6e <register_address_block+0x1>
     42e:	20 92 6f 0b 	sts	0x0B6F, r2	; 0x800b6f <register_address_block+0x2>
     432:	30 92 70 0b 	sts	0x0B70, r3	; 0x800b70 <register_address_block+0x3>
     436:	40 92 71 0b 	sts	0x0B71, r4	; 0x800b71 <register_address_block+0x4>
     43a:	50 92 72 0b 	sts	0x0B72, r5	; 0x800b72 <register_address_block+0x5>
     43e:	60 92 73 0b 	sts	0x0B73, r6	; 0x800b73 <register_address_block+0x6>
     442:	70 92 74 0b 	sts	0x0B74, r7	; 0x800b74 <register_address_block+0x7>
     446:	80 92 75 0b 	sts	0x0B75, r8	; 0x800b75 <register_address_block+0x8>
     44a:	90 92 76 0b 	sts	0x0B76, r9	; 0x800b76 <register_address_block+0x9>
     44e:	a0 92 77 0b 	sts	0x0B77, r10	; 0x800b77 <register_address_block+0xa>
     452:	b0 92 78 0b 	sts	0x0B78, r11	; 0x800b78 <register_address_block+0xb>
     456:	c0 92 79 0b 	sts	0x0B79, r12	; 0x800b79 <register_address_block+0xc>
     45a:	d0 92 7a 0b 	sts	0x0B7A, r13	; 0x800b7a <register_address_block+0xd>
     45e:	e0 92 7b 0b 	sts	0x0B7B, r14	; 0x800b7b <register_address_block+0xe>
     462:	f0 92 7c 0b 	sts	0x0B7C, r15	; 0x800b7c <register_address_block+0xf>
     466:	00 93 7d 0b 	sts	0x0B7D, r16	; 0x800b7d <register_address_block+0x10>
     46a:	10 93 7e 0b 	sts	0x0B7E, r17	; 0x800b7e <register_address_block+0x11>
     46e:	20 93 7f 0b 	sts	0x0B7F, r18	; 0x800b7f <register_address_block+0x12>
     472:	30 93 80 0b 	sts	0x0B80, r19	; 0x800b80 <register_address_block+0x13>
     476:	40 93 81 0b 	sts	0x0B81, r20	; 0x800b81 <register_address_block+0x14>
     47a:	50 93 82 0b 	sts	0x0B82, r21	; 0x800b82 <register_address_block+0x15>
     47e:	60 93 83 0b 	sts	0x0B83, r22	; 0x800b83 <register_address_block+0x16>
     482:	70 93 84 0b 	sts	0x0B84, r23	; 0x800b84 <register_address_block+0x17>
     486:	80 93 85 0b 	sts	0x0B85, r24	; 0x800b85 <register_address_block+0x18>
     48a:	90 93 86 0b 	sts	0x0B86, r25	; 0x800b86 <register_address_block+0x19>
     48e:	a0 93 87 0b 	sts	0x0B87, r26	; 0x800b87 <register_address_block+0x1a>
     492:	b0 93 88 0b 	sts	0x0B88, r27	; 0x800b88 <register_address_block+0x1b>
     496:	c0 93 89 0b 	sts	0x0B89, r28	; 0x800b89 <register_address_block+0x1c>
     49a:	d0 93 8a 0b 	sts	0x0B8A, r29	; 0x800b8a <register_address_block+0x1d>
     49e:	e0 93 8b 0b 	sts	0x0B8B, r30	; 0x800b8b <register_address_block+0x1e>
     4a2:	f0 93 8c 0b 	sts	0x0B8C, r31	; 0x800b8c <register_address_block+0x1f>
     4a6:	90 91 3a 0b 	lds	r25, 0x0B3A	; 0x800b3a <f_block>
     4aa:	90 93 57 0b 	sts	0x0B57, r25	; 0x800b57 <register_address_org+0x19>
     4ae:	80 91 3b 0b 	lds	r24, 0x0B3B	; 0x800b3b <f_block+0x1>
     4b2:	80 93 56 0b 	sts	0x0B56, r24	; 0x800b56 <register_address_org+0x18>
     4b6:	70 90 c6 0a 	lds	r7, 0x0AC6	; 0x800ac6 <y_block>
     4ba:	70 92 45 0b 	sts	0x0B45, r7	; 0x800b45 <register_address_org+0x7>
     4be:	60 90 c7 0a 	lds	r6, 0x0AC7	; 0x800ac7 <y_block+0x1>
     4c2:	60 92 44 0b 	sts	0x0B44, r6	; 0x800b44 <register_address_org+0x6>
     4c6:	50 90 c8 0a 	lds	r5, 0x0AC8	; 0x800ac8 <y_block+0x2>
     4ca:	50 92 43 0b 	sts	0x0B43, r5	; 0x800b43 <register_address_org+0x5>
     4ce:	40 90 c9 0a 	lds	r4, 0x0AC9	; 0x800ac9 <y_block+0x3>
     4d2:	40 92 42 0b 	sts	0x0B42, r4	; 0x800b42 <register_address_org+0x4>
     4d6:	e0 90 ea 0a 	lds	r14, 0x0AEA	; 0x800aea <iir_coefficients_block>
     4da:	e0 92 52 0a 	sts	0x0A52, r14	; 0x800a52 <iir_coefficients>
     4de:	e0 90 eb 0a 	lds	r14, 0x0AEB	; 0x800aeb <iir_coefficients_block+0x1>
     4e2:	e0 92 53 0a 	sts	0x0A53, r14	; 0x800a53 <iir_coefficients+0x1>
     4e6:	e0 90 ec 0a 	lds	r14, 0x0AEC	; 0x800aec <iir_coefficients_block+0x2>
     4ea:	e0 92 54 0a 	sts	0x0A54, r14	; 0x800a54 <iir_coefficients+0x2>
     4ee:	e0 90 ed 0a 	lds	r14, 0x0AED	; 0x800aed <iir_coefficients_block+0x3>
     4f2:	e0 92 55 0a 	sts	0x0A55, r14	; 0x800a55 <iir_coefficients+0x3>
     4f6:	e0 90 ee 0a 	lds	r14, 0x0AEE	; 0x800aee <iir_coefficients_block+0x4>
     4fa:	e0 92 56 0a 	sts	0x0A56, r14	; 0x800a56 <iir_coefficients+0x4>
     4fe:	e0 90 ef 0a 	lds	r14, 0x0AEF	; 0x800aef <iir_coefficients_block+0x5>
     502:	e0 92 57 0a 	sts	0x0A57, r14	; 0x800a57 <iir_coefficients+0x5>
     506:	e0 90 f0 0a 	lds	r14, 0x0AF0	; 0x800af0 <iir_coefficients_block+0x6>
     50a:	e0 92 58 0a 	sts	0x0A58, r14	; 0x800a58 <iir_coefficients+0x6>
     50e:	e0 90 f1 0a 	lds	r14, 0x0AF1	; 0x800af1 <iir_coefficients_block+0x7>
     512:	e0 92 59 0a 	sts	0x0A59, r14	; 0x800a59 <iir_coefficients+0x7>
     516:	e0 90 f2 0a 	lds	r14, 0x0AF2	; 0x800af2 <iir_coefficients_block+0x8>
     51a:	e0 92 5a 0a 	sts	0x0A5A, r14	; 0x800a5a <iir_coefficients+0x8>
     51e:	e0 90 f3 0a 	lds	r14, 0x0AF3	; 0x800af3 <iir_coefficients_block+0x9>
     522:	e0 92 5b 0a 	sts	0x0A5B, r14	; 0x800a5b <iir_coefficients+0x9>
     526:	e0 90 f4 0a 	lds	r14, 0x0AF4	; 0x800af4 <iir_coefficients_block+0xa>
     52a:	e0 92 5c 0a 	sts	0x0A5C, r14	; 0x800a5c <iir_coefficients+0xa>
     52e:	e0 90 f5 0a 	lds	r14, 0x0AF5	; 0x800af5 <iir_coefficients_block+0xb>
     532:	e0 92 5d 0a 	sts	0x0A5D, r14	; 0x800a5d <iir_coefficients+0xb>
     536:	e0 90 f6 0a 	lds	r14, 0x0AF6	; 0x800af6 <iir_coefficients_block+0xc>
     53a:	e0 92 5e 0a 	sts	0x0A5E, r14	; 0x800a5e <iir_coefficients+0xc>
     53e:	e0 90 f7 0a 	lds	r14, 0x0AF7	; 0x800af7 <iir_coefficients_block+0xd>
     542:	e0 92 5f 0a 	sts	0x0A5F, r14	; 0x800a5f <iir_coefficients+0xd>
     546:	e0 90 f8 0a 	lds	r14, 0x0AF8	; 0x800af8 <iir_coefficients_block+0xe>
     54a:	e0 92 60 0a 	sts	0x0A60, r14	; 0x800a60 <iir_coefficients+0xe>
     54e:	e0 90 f9 0a 	lds	r14, 0x0AF9	; 0x800af9 <iir_coefficients_block+0xf>
     552:	e0 92 61 0a 	sts	0x0A61, r14	; 0x800a61 <iir_coefficients+0xf>
     556:	e0 90 fa 0a 	lds	r14, 0x0AFA	; 0x800afa <iir_coefficients_block+0x10>
     55a:	e0 92 62 0a 	sts	0x0A62, r14	; 0x800a62 <iir_coefficients+0x10>
     55e:	e0 90 fb 0a 	lds	r14, 0x0AFB	; 0x800afb <iir_coefficients_block+0x11>
     562:	e0 92 63 0a 	sts	0x0A63, r14	; 0x800a63 <iir_coefficients+0x11>
     566:	e0 90 fc 0a 	lds	r14, 0x0AFC	; 0x800afc <iir_coefficients_block+0x12>
     56a:	e0 92 64 0a 	sts	0x0A64, r14	; 0x800a64 <iir_coefficients+0x12>
     56e:	e0 90 fd 0a 	lds	r14, 0x0AFD	; 0x800afd <iir_coefficients_block+0x13>
     572:	e0 92 65 0a 	sts	0x0A65, r14	; 0x800a65 <iir_coefficients+0x13>
     576:	e0 90 fe 0a 	lds	r14, 0x0AFE	; 0x800afe <iir_coefficients_block+0x14>
     57a:	e0 92 66 0a 	sts	0x0A66, r14	; 0x800a66 <iir_coefficients+0x14>
     57e:	e0 90 ff 0a 	lds	r14, 0x0AFF	; 0x800aff <iir_coefficients_block+0x15>
     582:	e0 92 67 0a 	sts	0x0A67, r14	; 0x800a67 <iir_coefficients+0x15>
     586:	e0 90 00 0b 	lds	r14, 0x0B00	; 0x800b00 <iir_coefficients_block+0x16>
     58a:	e0 92 68 0a 	sts	0x0A68, r14	; 0x800a68 <iir_coefficients+0x16>
     58e:	e0 90 01 0b 	lds	r14, 0x0B01	; 0x800b01 <iir_coefficients_block+0x17>
     592:	e0 92 69 0a 	sts	0x0A69, r14	; 0x800a69 <iir_coefficients+0x17>
     596:	e0 90 02 0b 	lds	r14, 0x0B02	; 0x800b02 <iir_coefficients_block+0x18>
     59a:	e0 92 6a 0a 	sts	0x0A6A, r14	; 0x800a6a <iir_coefficients+0x18>
     59e:	e0 90 03 0b 	lds	r14, 0x0B03	; 0x800b03 <iir_coefficients_block+0x19>
     5a2:	e0 92 6b 0a 	sts	0x0A6B, r14	; 0x800a6b <iir_coefficients+0x19>
     5a6:	e0 90 04 0b 	lds	r14, 0x0B04	; 0x800b04 <iir_coefficients_block+0x1a>
     5aa:	e0 92 6c 0a 	sts	0x0A6C, r14	; 0x800a6c <iir_coefficients+0x1a>
     5ae:	e0 90 05 0b 	lds	r14, 0x0B05	; 0x800b05 <iir_coefficients_block+0x1b>
     5b2:	e0 92 6d 0a 	sts	0x0A6D, r14	; 0x800a6d <iir_coefficients+0x1b>
     5b6:	e0 90 06 0b 	lds	r14, 0x0B06	; 0x800b06 <iir_coefficients_block+0x1c>
     5ba:	e0 92 6e 0a 	sts	0x0A6E, r14	; 0x800a6e <iir_coefficients+0x1c>
     5be:	e0 90 07 0b 	lds	r14, 0x0B07	; 0x800b07 <iir_coefficients_block+0x1d>
     5c2:	e0 92 6f 0a 	sts	0x0A6F, r14	; 0x800a6f <iir_coefficients+0x1d>
     5c6:	e0 90 08 0b 	lds	r14, 0x0B08	; 0x800b08 <iir_coefficients_block+0x1e>
     5ca:	e0 92 70 0a 	sts	0x0A70, r14	; 0x800a70 <iir_coefficients+0x1e>
     5ce:	e0 90 09 0b 	lds	r14, 0x0B09	; 0x800b09 <iir_coefficients_block+0x1f>
     5d2:	e0 92 71 0a 	sts	0x0A71, r14	; 0x800a71 <iir_coefficients+0x1f>
     5d6:	e0 90 0a 0b 	lds	r14, 0x0B0A	; 0x800b0a <iir_coefficients_block+0x20>
     5da:	e0 92 72 0a 	sts	0x0A72, r14	; 0x800a72 <iir_coefficients+0x20>
     5de:	e0 90 0b 0b 	lds	r14, 0x0B0B	; 0x800b0b <iir_coefficients_block+0x21>
     5e2:	e0 92 73 0a 	sts	0x0A73, r14	; 0x800a73 <iir_coefficients+0x21>
     5e6:	e0 90 0c 0b 	lds	r14, 0x0B0C	; 0x800b0c <iir_coefficients_block+0x22>
     5ea:	e0 92 74 0a 	sts	0x0A74, r14	; 0x800a74 <iir_coefficients+0x22>
     5ee:	e0 90 0d 0b 	lds	r14, 0x0B0D	; 0x800b0d <iir_coefficients_block+0x23>
     5f2:	e0 92 75 0a 	sts	0x0A75, r14	; 0x800a75 <iir_coefficients+0x23>
     5f6:	e0 90 0e 0b 	lds	r14, 0x0B0E	; 0x800b0e <iir_coefficients_block+0x24>
     5fa:	e0 92 76 0a 	sts	0x0A76, r14	; 0x800a76 <iir_coefficients+0x24>
     5fe:	e0 90 0f 0b 	lds	r14, 0x0B0F	; 0x800b0f <iir_coefficients_block+0x25>
     602:	e0 92 77 0a 	sts	0x0A77, r14	; 0x800a77 <iir_coefficients+0x25>
     606:	e0 90 10 0b 	lds	r14, 0x0B10	; 0x800b10 <iir_coefficients_block+0x26>
     60a:	e0 92 78 0a 	sts	0x0A78, r14	; 0x800a78 <iir_coefficients+0x26>
     60e:	e0 90 11 0b 	lds	r14, 0x0B11	; 0x800b11 <iir_coefficients_block+0x27>
     612:	e0 92 79 0a 	sts	0x0A79, r14	; 0x800a79 <iir_coefficients+0x27>
     616:	e0 90 12 0b 	lds	r14, 0x0B12	; 0x800b12 <iir_coefficients_block+0x28>
     61a:	e0 92 7a 0a 	sts	0x0A7A, r14	; 0x800a7a <iir_coefficients+0x28>
     61e:	e0 90 13 0b 	lds	r14, 0x0B13	; 0x800b13 <iir_coefficients_block+0x29>
     622:	e0 92 7b 0a 	sts	0x0A7B, r14	; 0x800a7b <iir_coefficients+0x29>
     626:	e0 90 14 0b 	lds	r14, 0x0B14	; 0x800b14 <iir_coefficients_block+0x2a>
     62a:	e0 92 7c 0a 	sts	0x0A7C, r14	; 0x800a7c <iir_coefficients+0x2a>
     62e:	e0 90 15 0b 	lds	r14, 0x0B15	; 0x800b15 <iir_coefficients_block+0x2b>
     632:	e0 92 7d 0a 	sts	0x0A7D, r14	; 0x800a7d <iir_coefficients+0x2b>
     636:	e0 90 16 0b 	lds	r14, 0x0B16	; 0x800b16 <iir_coefficients_block+0x2c>
     63a:	e0 92 7e 0a 	sts	0x0A7E, r14	; 0x800a7e <iir_coefficients+0x2c>
     63e:	e0 90 17 0b 	lds	r14, 0x0B17	; 0x800b17 <iir_coefficients_block+0x2d>
     642:	e0 92 7f 0a 	sts	0x0A7F, r14	; 0x800a7f <iir_coefficients+0x2d>
     646:	e0 90 18 0b 	lds	r14, 0x0B18	; 0x800b18 <iir_coefficients_block+0x2e>
     64a:	e0 92 80 0a 	sts	0x0A80, r14	; 0x800a80 <iir_coefficients+0x2e>
     64e:	e0 90 19 0b 	lds	r14, 0x0B19	; 0x800b19 <iir_coefficients_block+0x2f>
     652:	e0 92 81 0a 	sts	0x0A81, r14	; 0x800a81 <iir_coefficients+0x2f>
     656:	e0 90 1a 0b 	lds	r14, 0x0B1A	; 0x800b1a <iir_coefficients_block+0x30>
     65a:	e0 92 82 0a 	sts	0x0A82, r14	; 0x800a82 <iir_coefficients+0x30>
     65e:	e0 90 1b 0b 	lds	r14, 0x0B1B	; 0x800b1b <iir_coefficients_block+0x31>
     662:	e0 92 83 0a 	sts	0x0A83, r14	; 0x800a83 <iir_coefficients+0x31>
     666:	e0 90 1c 0b 	lds	r14, 0x0B1C	; 0x800b1c <iir_coefficients_block+0x32>
     66a:	e0 92 84 0a 	sts	0x0A84, r14	; 0x800a84 <iir_coefficients+0x32>
     66e:	e0 90 1d 0b 	lds	r14, 0x0B1D	; 0x800b1d <iir_coefficients_block+0x33>
     672:	e0 92 85 0a 	sts	0x0A85, r14	; 0x800a85 <iir_coefficients+0x33>
     676:	e0 90 1e 0b 	lds	r14, 0x0B1E	; 0x800b1e <iir_coefficients_block+0x34>
     67a:	e0 92 86 0a 	sts	0x0A86, r14	; 0x800a86 <iir_coefficients+0x34>
     67e:	e0 90 1f 0b 	lds	r14, 0x0B1F	; 0x800b1f <iir_coefficients_block+0x35>
     682:	e0 92 87 0a 	sts	0x0A87, r14	; 0x800a87 <iir_coefficients+0x35>
     686:	e0 90 20 0b 	lds	r14, 0x0B20	; 0x800b20 <iir_coefficients_block+0x36>
     68a:	e0 92 88 0a 	sts	0x0A88, r14	; 0x800a88 <iir_coefficients+0x36>
     68e:	e0 90 21 0b 	lds	r14, 0x0B21	; 0x800b21 <iir_coefficients_block+0x37>
     692:	e0 92 89 0a 	sts	0x0A89, r14	; 0x800a89 <iir_coefficients+0x37>
     696:	e0 90 22 0b 	lds	r14, 0x0B22	; 0x800b22 <iir_coefficients_block+0x38>
     69a:	e0 92 8a 0a 	sts	0x0A8A, r14	; 0x800a8a <iir_coefficients+0x38>
     69e:	e0 90 23 0b 	lds	r14, 0x0B23	; 0x800b23 <iir_coefficients_block+0x39>
     6a2:	e0 92 8b 0a 	sts	0x0A8B, r14	; 0x800a8b <iir_coefficients+0x39>
     6a6:	e0 90 24 0b 	lds	r14, 0x0B24	; 0x800b24 <iir_coefficients_block+0x3a>
     6aa:	e0 92 8c 0a 	sts	0x0A8C, r14	; 0x800a8c <iir_coefficients+0x3a>
     6ae:	e0 90 25 0b 	lds	r14, 0x0B25	; 0x800b25 <iir_coefficients_block+0x3b>
     6b2:	e0 92 8d 0a 	sts	0x0A8D, r14	; 0x800a8d <iir_coefficients+0x3b>
     6b6:	e0 90 26 0b 	lds	r14, 0x0B26	; 0x800b26 <iir_coefficients_block+0x3c>
     6ba:	e0 92 8e 0a 	sts	0x0A8E, r14	; 0x800a8e <iir_coefficients+0x3c>
     6be:	e0 90 27 0b 	lds	r14, 0x0B27	; 0x800b27 <iir_coefficients_block+0x3d>
     6c2:	e0 92 8f 0a 	sts	0x0A8F, r14	; 0x800a8f <iir_coefficients+0x3d>
     6c6:	e0 90 28 0b 	lds	r14, 0x0B28	; 0x800b28 <iir_coefficients_block+0x3e>
     6ca:	e0 92 90 0a 	sts	0x0A90, r14	; 0x800a90 <iir_coefficients+0x3e>
     6ce:	e0 90 29 0b 	lds	r14, 0x0B29	; 0x800b29 <iir_coefficients_block+0x3f>
     6d2:	e0 92 91 0a 	sts	0x0A91, r14	; 0x800a91 <iir_coefficients+0x3f>
     6d6:	e0 90 2a 0b 	lds	r14, 0x0B2A	; 0x800b2a <iir_coefficients_block+0x40>
     6da:	e0 92 92 0a 	sts	0x0A92, r14	; 0x800a92 <iir_coefficients+0x40>
     6de:	e0 90 2b 0b 	lds	r14, 0x0B2B	; 0x800b2b <iir_coefficients_block+0x41>
     6e2:	e0 92 93 0a 	sts	0x0A93, r14	; 0x800a93 <iir_coefficients+0x41>
     6e6:	e0 90 2c 0b 	lds	r14, 0x0B2C	; 0x800b2c <iir_coefficients_block+0x42>
     6ea:	e0 92 94 0a 	sts	0x0A94, r14	; 0x800a94 <iir_coefficients+0x42>
     6ee:	e0 90 2d 0b 	lds	r14, 0x0B2D	; 0x800b2d <iir_coefficients_block+0x43>
     6f2:	e0 92 95 0a 	sts	0x0A95, r14	; 0x800a95 <iir_coefficients+0x43>
     6f6:	e0 90 2e 0b 	lds	r14, 0x0B2E	; 0x800b2e <iir_coefficients_block+0x44>
     6fa:	e0 92 96 0a 	sts	0x0A96, r14	; 0x800a96 <iir_coefficients+0x44>
     6fe:	e0 90 2f 0b 	lds	r14, 0x0B2F	; 0x800b2f <iir_coefficients_block+0x45>
     702:	e0 92 97 0a 	sts	0x0A97, r14	; 0x800a97 <iir_coefficients+0x45>
     706:	e0 90 30 0b 	lds	r14, 0x0B30	; 0x800b30 <iir_coefficients_block+0x46>
     70a:	e0 92 98 0a 	sts	0x0A98, r14	; 0x800a98 <iir_coefficients+0x46>
     70e:	e0 90 31 0b 	lds	r14, 0x0B31	; 0x800b31 <iir_coefficients_block+0x47>
     712:	e0 92 99 0a 	sts	0x0A99, r14	; 0x800a99 <iir_coefficients+0x47>
     716:	e0 90 32 0b 	lds	r14, 0x0B32	; 0x800b32 <iir_coefficients_block+0x48>
     71a:	e0 92 9a 0a 	sts	0x0A9A, r14	; 0x800a9a <iir_coefficients+0x48>
     71e:	e0 90 33 0b 	lds	r14, 0x0B33	; 0x800b33 <iir_coefficients_block+0x49>
     722:	e0 92 9b 0a 	sts	0x0A9B, r14	; 0x800a9b <iir_coefficients+0x49>
     726:	e0 90 34 0b 	lds	r14, 0x0B34	; 0x800b34 <iir_coefficients_block+0x4a>
     72a:	e0 92 9c 0a 	sts	0x0A9C, r14	; 0x800a9c <iir_coefficients+0x4a>
     72e:	e0 90 35 0b 	lds	r14, 0x0B35	; 0x800b35 <iir_coefficients_block+0x4b>
     732:	e0 92 9d 0a 	sts	0x0A9D, r14	; 0x800a9d <iir_coefficients+0x4b>
     736:	e0 90 36 0b 	lds	r14, 0x0B36	; 0x800b36 <iir_coefficients_block+0x4c>
     73a:	e0 92 9e 0a 	sts	0x0A9E, r14	; 0x800a9e <iir_coefficients+0x4c>
     73e:	e0 90 37 0b 	lds	r14, 0x0B37	; 0x800b37 <iir_coefficients_block+0x4d>
     742:	e0 92 9f 0a 	sts	0x0A9F, r14	; 0x800a9f <iir_coefficients+0x4d>
     746:	e0 90 38 0b 	lds	r14, 0x0B38	; 0x800b38 <iir_coefficients_block+0x4e>
     74a:	e0 92 a0 0a 	sts	0x0AA0, r14	; 0x800aa0 <iir_coefficients+0x4e>
     74e:	e0 90 39 0b 	lds	r14, 0x0B39	; 0x800b39 <iir_coefficients_block+0x4f>
     752:	e0 92 a1 0a 	sts	0x0AA1, r14	; 0x800aa1 <iir_coefficients+0x4f>
     756:	e0 90 ca 0a 	lds	r14, 0x0ACA	; 0x800aca <iir_wi_block>
     75a:	e0 92 a6 0a 	sts	0x0AA6, r14	; 0x800aa6 <iir_wi>
     75e:	e0 90 cb 0a 	lds	r14, 0x0ACB	; 0x800acb <iir_wi_block+0x1>
     762:	e0 92 a7 0a 	sts	0x0AA7, r14	; 0x800aa7 <iir_wi+0x1>
     766:	e0 90 cc 0a 	lds	r14, 0x0ACC	; 0x800acc <iir_wi_block+0x2>
     76a:	e0 92 a8 0a 	sts	0x0AA8, r14	; 0x800aa8 <iir_wi+0x2>
     76e:	e0 90 cd 0a 	lds	r14, 0x0ACD	; 0x800acd <iir_wi_block+0x3>
     772:	e0 92 a9 0a 	sts	0x0AA9, r14	; 0x800aa9 <iir_wi+0x3>
     776:	e0 90 ce 0a 	lds	r14, 0x0ACE	; 0x800ace <iir_wi_block+0x4>
     77a:	e0 92 aa 0a 	sts	0x0AAA, r14	; 0x800aaa <iir_wi+0x4>
     77e:	e0 90 cf 0a 	lds	r14, 0x0ACF	; 0x800acf <iir_wi_block+0x5>
     782:	e0 92 ab 0a 	sts	0x0AAB, r14	; 0x800aab <iir_wi+0x5>
     786:	e0 90 d0 0a 	lds	r14, 0x0AD0	; 0x800ad0 <iir_wi_block+0x6>
     78a:	e0 92 ac 0a 	sts	0x0AAC, r14	; 0x800aac <iir_wi+0x6>
     78e:	e0 90 d1 0a 	lds	r14, 0x0AD1	; 0x800ad1 <iir_wi_block+0x7>
     792:	e0 92 ad 0a 	sts	0x0AAD, r14	; 0x800aad <iir_wi+0x7>
     796:	e0 90 d2 0a 	lds	r14, 0x0AD2	; 0x800ad2 <iir_wi_block+0x8>
     79a:	e0 92 ae 0a 	sts	0x0AAE, r14	; 0x800aae <iir_wi+0x8>
     79e:	e0 90 d3 0a 	lds	r14, 0x0AD3	; 0x800ad3 <iir_wi_block+0x9>
     7a2:	e0 92 af 0a 	sts	0x0AAF, r14	; 0x800aaf <iir_wi+0x9>
     7a6:	e0 90 d4 0a 	lds	r14, 0x0AD4	; 0x800ad4 <iir_wi_block+0xa>
     7aa:	e0 92 b0 0a 	sts	0x0AB0, r14	; 0x800ab0 <iir_wi+0xa>
     7ae:	e0 90 d5 0a 	lds	r14, 0x0AD5	; 0x800ad5 <iir_wi_block+0xb>
     7b2:	e0 92 b1 0a 	sts	0x0AB1, r14	; 0x800ab1 <iir_wi+0xb>
     7b6:	e0 90 d6 0a 	lds	r14, 0x0AD6	; 0x800ad6 <iir_wi_block+0xc>
     7ba:	e0 92 b2 0a 	sts	0x0AB2, r14	; 0x800ab2 <iir_wi+0xc>
     7be:	e0 90 d7 0a 	lds	r14, 0x0AD7	; 0x800ad7 <iir_wi_block+0xd>
     7c2:	e0 92 b3 0a 	sts	0x0AB3, r14	; 0x800ab3 <iir_wi+0xd>
     7c6:	e0 90 d8 0a 	lds	r14, 0x0AD8	; 0x800ad8 <iir_wi_block+0xe>
     7ca:	e0 92 b4 0a 	sts	0x0AB4, r14	; 0x800ab4 <iir_wi+0xe>
     7ce:	e0 90 d9 0a 	lds	r14, 0x0AD9	; 0x800ad9 <iir_wi_block+0xf>
     7d2:	e0 92 b5 0a 	sts	0x0AB5, r14	; 0x800ab5 <iir_wi+0xf>
     7d6:	e0 90 da 0a 	lds	r14, 0x0ADA	; 0x800ada <iir_wi_block+0x10>
     7da:	e0 92 b6 0a 	sts	0x0AB6, r14	; 0x800ab6 <iir_wi+0x10>
     7de:	e0 90 db 0a 	lds	r14, 0x0ADB	; 0x800adb <iir_wi_block+0x11>
     7e2:	e0 92 b7 0a 	sts	0x0AB7, r14	; 0x800ab7 <iir_wi+0x11>
     7e6:	e0 90 dc 0a 	lds	r14, 0x0ADC	; 0x800adc <iir_wi_block+0x12>
     7ea:	e0 92 b8 0a 	sts	0x0AB8, r14	; 0x800ab8 <iir_wi+0x12>
     7ee:	e0 90 dd 0a 	lds	r14, 0x0ADD	; 0x800add <iir_wi_block+0x13>
     7f2:	e0 92 b9 0a 	sts	0x0AB9, r14	; 0x800ab9 <iir_wi+0x13>
     7f6:	e0 90 de 0a 	lds	r14, 0x0ADE	; 0x800ade <iir_wi_block+0x14>
     7fa:	e0 92 ba 0a 	sts	0x0ABA, r14	; 0x800aba <iir_wi+0x14>
     7fe:	e0 90 df 0a 	lds	r14, 0x0ADF	; 0x800adf <iir_wi_block+0x15>
     802:	e0 92 bb 0a 	sts	0x0ABB, r14	; 0x800abb <iir_wi+0x15>
     806:	e0 90 e0 0a 	lds	r14, 0x0AE0	; 0x800ae0 <iir_wi_block+0x16>
     80a:	e0 92 bc 0a 	sts	0x0ABC, r14	; 0x800abc <iir_wi+0x16>
     80e:	e0 90 e1 0a 	lds	r14, 0x0AE1	; 0x800ae1 <iir_wi_block+0x17>
     812:	e0 92 bd 0a 	sts	0x0ABD, r14	; 0x800abd <iir_wi+0x17>
     816:	e0 90 e2 0a 	lds	r14, 0x0AE2	; 0x800ae2 <iir_wi_block+0x18>
     81a:	e0 92 be 0a 	sts	0x0ABE, r14	; 0x800abe <iir_wi+0x18>
     81e:	e0 90 e3 0a 	lds	r14, 0x0AE3	; 0x800ae3 <iir_wi_block+0x19>
     822:	e0 92 bf 0a 	sts	0x0ABF, r14	; 0x800abf <iir_wi+0x19>
     826:	e0 90 e4 0a 	lds	r14, 0x0AE4	; 0x800ae4 <iir_wi_block+0x1a>
     82a:	e0 92 c0 0a 	sts	0x0AC0, r14	; 0x800ac0 <iir_wi+0x1a>
     82e:	e0 90 e5 0a 	lds	r14, 0x0AE5	; 0x800ae5 <iir_wi_block+0x1b>
     832:	e0 92 c1 0a 	sts	0x0AC1, r14	; 0x800ac1 <iir_wi+0x1b>
     836:	e0 90 e6 0a 	lds	r14, 0x0AE6	; 0x800ae6 <iir_wi_block+0x1c>
     83a:	e0 92 c2 0a 	sts	0x0AC2, r14	; 0x800ac2 <iir_wi+0x1c>
     83e:	e0 90 e7 0a 	lds	r14, 0x0AE7	; 0x800ae7 <iir_wi_block+0x1d>
     842:	e0 92 c3 0a 	sts	0x0AC3, r14	; 0x800ac3 <iir_wi+0x1d>
     846:	e0 90 e8 0a 	lds	r14, 0x0AE8	; 0x800ae8 <iir_wi_block+0x1e>
     84a:	e0 92 c4 0a 	sts	0x0AC4, r14	; 0x800ac4 <iir_wi+0x1e>
     84e:	e0 90 e9 0a 	lds	r14, 0x0AE9	; 0x800ae9 <iir_wi_block+0x1f>
     852:	e0 92 c5 0a 	sts	0x0AC5, r14	; 0x800ac5 <iir_wi+0x1f>
     856:	00 90 6d 0b 	lds	r0, 0x0B6D	; 0x800b6d <register_address_block>
     85a:	10 90 6e 0b 	lds	r1, 0x0B6E	; 0x800b6e <register_address_block+0x1>
     85e:	20 90 6f 0b 	lds	r2, 0x0B6F	; 0x800b6f <register_address_block+0x2>
     862:	30 90 70 0b 	lds	r3, 0x0B70	; 0x800b70 <register_address_block+0x3>
     866:	40 90 71 0b 	lds	r4, 0x0B71	; 0x800b71 <register_address_block+0x4>
     86a:	50 90 72 0b 	lds	r5, 0x0B72	; 0x800b72 <register_address_block+0x5>
     86e:	60 90 73 0b 	lds	r6, 0x0B73	; 0x800b73 <register_address_block+0x6>
     872:	70 90 74 0b 	lds	r7, 0x0B74	; 0x800b74 <register_address_block+0x7>
     876:	80 90 75 0b 	lds	r8, 0x0B75	; 0x800b75 <register_address_block+0x8>
     87a:	90 90 76 0b 	lds	r9, 0x0B76	; 0x800b76 <register_address_block+0x9>
     87e:	a0 90 77 0b 	lds	r10, 0x0B77	; 0x800b77 <register_address_block+0xa>
     882:	b0 90 78 0b 	lds	r11, 0x0B78	; 0x800b78 <register_address_block+0xb>
     886:	c0 90 79 0b 	lds	r12, 0x0B79	; 0x800b79 <register_address_block+0xc>
     88a:	d0 90 7a 0b 	lds	r13, 0x0B7A	; 0x800b7a <register_address_block+0xd>
     88e:	e0 90 7b 0b 	lds	r14, 0x0B7B	; 0x800b7b <register_address_block+0xe>
     892:	f0 90 7c 0b 	lds	r15, 0x0B7C	; 0x800b7c <register_address_block+0xf>
     896:	00 91 7d 0b 	lds	r16, 0x0B7D	; 0x800b7d <register_address_block+0x10>
     89a:	10 91 7e 0b 	lds	r17, 0x0B7E	; 0x800b7e <register_address_block+0x11>
     89e:	20 91 7f 0b 	lds	r18, 0x0B7F	; 0x800b7f <register_address_block+0x12>
     8a2:	30 91 80 0b 	lds	r19, 0x0B80	; 0x800b80 <register_address_block+0x13>
     8a6:	40 91 81 0b 	lds	r20, 0x0B81	; 0x800b81 <register_address_block+0x14>
     8aa:	50 91 82 0b 	lds	r21, 0x0B82	; 0x800b82 <register_address_block+0x15>
     8ae:	60 91 83 0b 	lds	r22, 0x0B83	; 0x800b83 <register_address_block+0x16>
     8b2:	70 91 84 0b 	lds	r23, 0x0B84	; 0x800b84 <register_address_block+0x17>
     8b6:	80 91 85 0b 	lds	r24, 0x0B85	; 0x800b85 <register_address_block+0x18>
     8ba:	90 91 86 0b 	lds	r25, 0x0B86	; 0x800b86 <register_address_block+0x19>
     8be:	a0 91 87 0b 	lds	r26, 0x0B87	; 0x800b87 <register_address_block+0x1a>
     8c2:	b0 91 88 0b 	lds	r27, 0x0B88	; 0x800b88 <register_address_block+0x1b>
     8c6:	c0 91 89 0b 	lds	r28, 0x0B89	; 0x800b89 <register_address_block+0x1c>
     8ca:	d0 91 8a 0b 	lds	r29, 0x0B8A	; 0x800b8a <register_address_block+0x1d>
     8ce:	e0 91 8b 0b 	lds	r30, 0x0B8B	; 0x800b8b <register_address_block+0x1e>
     8d2:	f0 91 8c 0b 	lds	r31, 0x0B8C	; 0x800b8c <register_address_block+0x1f>
     8d6:	08 95       	ret

000008d8 <benchmarkBlock>:
} 
 
/*BLock execution time measurement*/
void benchmarkBlock(void)
{
	asm(
     8d8:	00 92 6d 0b 	sts	0x0B6D, r0	; 0x800b6d <register_address_block>
     8dc:	10 92 6e 0b 	sts	0x0B6E, r1	; 0x800b6e <register_address_block+0x1>
     8e0:	20 92 6f 0b 	sts	0x0B6F, r2	; 0x800b6f <register_address_block+0x2>
     8e4:	30 92 70 0b 	sts	0x0B70, r3	; 0x800b70 <register_address_block+0x3>
     8e8:	40 92 71 0b 	sts	0x0B71, r4	; 0x800b71 <register_address_block+0x4>
     8ec:	50 92 72 0b 	sts	0x0B72, r5	; 0x800b72 <register_address_block+0x5>
     8f0:	60 92 73 0b 	sts	0x0B73, r6	; 0x800b73 <register_address_block+0x6>
     8f4:	70 92 74 0b 	sts	0x0B74, r7	; 0x800b74 <register_address_block+0x7>
     8f8:	80 92 75 0b 	sts	0x0B75, r8	; 0x800b75 <register_address_block+0x8>
     8fc:	90 92 76 0b 	sts	0x0B76, r9	; 0x800b76 <register_address_block+0x9>
     900:	a0 92 77 0b 	sts	0x0B77, r10	; 0x800b77 <register_address_block+0xa>
     904:	b0 92 78 0b 	sts	0x0B78, r11	; 0x800b78 <register_address_block+0xb>
     908:	c0 92 79 0b 	sts	0x0B79, r12	; 0x800b79 <register_address_block+0xc>
     90c:	d0 92 7a 0b 	sts	0x0B7A, r13	; 0x800b7a <register_address_block+0xd>
     910:	e0 92 7b 0b 	sts	0x0B7B, r14	; 0x800b7b <register_address_block+0xe>
     914:	f0 92 7c 0b 	sts	0x0B7C, r15	; 0x800b7c <register_address_block+0xf>
     918:	00 93 7d 0b 	sts	0x0B7D, r16	; 0x800b7d <register_address_block+0x10>
     91c:	10 93 7e 0b 	sts	0x0B7E, r17	; 0x800b7e <register_address_block+0x11>
     920:	20 93 7f 0b 	sts	0x0B7F, r18	; 0x800b7f <register_address_block+0x12>
     924:	30 93 80 0b 	sts	0x0B80, r19	; 0x800b80 <register_address_block+0x13>
     928:	40 93 81 0b 	sts	0x0B81, r20	; 0x800b81 <register_address_block+0x14>
     92c:	50 93 82 0b 	sts	0x0B82, r21	; 0x800b82 <register_address_block+0x15>
     930:	60 93 83 0b 	sts	0x0B83, r22	; 0x800b83 <register_address_block+0x16>
     934:	70 93 84 0b 	sts	0x0B84, r23	; 0x800b84 <register_address_block+0x17>
     938:	80 93 85 0b 	sts	0x0B85, r24	; 0x800b85 <register_address_block+0x18>
     93c:	90 93 86 0b 	sts	0x0B86, r25	; 0x800b86 <register_address_block+0x19>
     940:	a0 93 87 0b 	sts	0x0B87, r26	; 0x800b87 <register_address_block+0x1a>
     944:	b0 93 88 0b 	sts	0x0B88, r27	; 0x800b88 <register_address_block+0x1b>
     948:	c0 93 89 0b 	sts	0x0B89, r28	; 0x800b89 <register_address_block+0x1c>
     94c:	d0 93 8a 0b 	sts	0x0B8A, r29	; 0x800b8a <register_address_block+0x1d>
     950:	e0 93 8b 0b 	sts	0x0B8B, r30	; 0x800b8b <register_address_block+0x1e>
     954:	f0 93 8c 0b 	sts	0x0B8C, r31	; 0x800b8c <register_address_block+0x1f>
     958:	ed b6       	in	r14, 0x3d	; 61
     95a:	fe b6       	in	r15, 0x3e	; 62
     95c:	e0 92 60 0b 	sts	0x0B60, r14	; 0x800b60 <stackpointer_address_block>
     960:	f0 92 61 0b 	sts	0x0B61, r15	; 0x800b61 <stackpointer_address_block+0x1>
     964:	80 e0       	ldi	r24, 0x00	; 0
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	a0 91 60 0b 	lds	r26, 0x0B60	; 0x800b60 <stackpointer_address_block>
     96c:	b0 91 61 0b 	lds	r27, 0x0B61	; 0x800b61 <stackpointer_address_block+0x1>
     970:	ed e8       	ldi	r30, 0x8D	; 141
     972:	fb e0       	ldi	r31, 0x0B	; 11
     974:	ed 90       	ld	r14, X+
     976:	e1 92       	st	Z+, r14
     978:	01 96       	adiw	r24, 0x01	; 1
     97a:	85 32       	cpi	r24, 0x25	; 37
     97c:	d9 f7       	brne	.-10     	; 0x974 <benchmarkBlock+0x9c>
     97e:	80 e0       	ldi	r24, 0x00	; 0
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	a0 91 6b 0b 	lds	r26, 0x0B6B	; 0x800b6b <stackpointer_address_org>
     986:	b0 91 6c 0b 	lds	r27, 0x0B6C	; 0x800b6c <stackpointer_address_org+0x1>
     98a:	e2 e6       	ldi	r30, 0x62	; 98
     98c:	fb e0       	ldi	r31, 0x0B	; 11
     98e:	e1 90       	ld	r14, Z+
     990:	ed 92       	st	X+, r14
     992:	01 96       	adiw	r24, 0x01	; 1
     994:	89 30       	cpi	r24, 0x09	; 9
     996:	d9 f7       	brne	.-10     	; 0x98e <benchmarkBlock+0xb6>
     998:	00 90 3e 0b 	lds	r0, 0x0B3E	; 0x800b3e <register_address_org>
     99c:	10 90 3f 0b 	lds	r1, 0x0B3F	; 0x800b3f <register_address_org+0x1>
     9a0:	20 90 40 0b 	lds	r2, 0x0B40	; 0x800b40 <register_address_org+0x2>
     9a4:	30 90 41 0b 	lds	r3, 0x0B41	; 0x800b41 <register_address_org+0x3>
     9a8:	40 90 42 0b 	lds	r4, 0x0B42	; 0x800b42 <register_address_org+0x4>
     9ac:	50 90 43 0b 	lds	r5, 0x0B43	; 0x800b43 <register_address_org+0x5>
     9b0:	60 90 44 0b 	lds	r6, 0x0B44	; 0x800b44 <register_address_org+0x6>
     9b4:	70 90 45 0b 	lds	r7, 0x0B45	; 0x800b45 <register_address_org+0x7>
     9b8:	80 90 46 0b 	lds	r8, 0x0B46	; 0x800b46 <register_address_org+0x8>
     9bc:	90 90 47 0b 	lds	r9, 0x0B47	; 0x800b47 <register_address_org+0x9>
     9c0:	a0 90 48 0b 	lds	r10, 0x0B48	; 0x800b48 <register_address_org+0xa>
     9c4:	b0 90 49 0b 	lds	r11, 0x0B49	; 0x800b49 <register_address_org+0xb>
     9c8:	c0 90 4a 0b 	lds	r12, 0x0B4A	; 0x800b4a <register_address_org+0xc>
     9cc:	d0 90 4b 0b 	lds	r13, 0x0B4B	; 0x800b4b <register_address_org+0xd>
     9d0:	e0 90 4c 0b 	lds	r14, 0x0B4C	; 0x800b4c <register_address_org+0xe>
     9d4:	f0 90 4d 0b 	lds	r15, 0x0B4D	; 0x800b4d <register_address_org+0xf>
     9d8:	00 91 4e 0b 	lds	r16, 0x0B4E	; 0x800b4e <register_address_org+0x10>
     9dc:	10 91 4f 0b 	lds	r17, 0x0B4F	; 0x800b4f <register_address_org+0x11>
     9e0:	20 91 50 0b 	lds	r18, 0x0B50	; 0x800b50 <register_address_org+0x12>
     9e4:	30 91 51 0b 	lds	r19, 0x0B51	; 0x800b51 <register_address_org+0x13>
     9e8:	40 91 52 0b 	lds	r20, 0x0B52	; 0x800b52 <register_address_org+0x14>
     9ec:	50 91 53 0b 	lds	r21, 0x0B53	; 0x800b53 <register_address_org+0x15>
     9f0:	60 91 54 0b 	lds	r22, 0x0B54	; 0x800b54 <register_address_org+0x16>
     9f4:	70 91 55 0b 	lds	r23, 0x0B55	; 0x800b55 <register_address_org+0x17>
     9f8:	80 91 56 0b 	lds	r24, 0x0B56	; 0x800b56 <register_address_org+0x18>
     9fc:	90 91 57 0b 	lds	r25, 0x0B57	; 0x800b57 <register_address_org+0x19>
     a00:	a0 91 58 0b 	lds	r26, 0x0B58	; 0x800b58 <register_address_org+0x1a>
     a04:	b0 91 59 0b 	lds	r27, 0x0B59	; 0x800b59 <register_address_org+0x1b>
     a08:	c0 91 5a 0b 	lds	r28, 0x0B5A	; 0x800b5a <register_address_org+0x1c>
     a0c:	d0 91 5b 0b 	lds	r29, 0x0B5B	; 0x800b5b <register_address_org+0x1d>
     a10:	e0 91 5c 0b 	lds	r30, 0x0B5C	; 0x800b5c <register_address_org+0x1e>
     a14:	f0 91 5d 0b 	lds	r31, 0x0B5D	; 0x800b5d <register_address_org+0x1f>
     a18:	80 e1       	ldi	r24, 0x10	; 16
     a1a:	88 b9       	out	0x08, r24	; 8
     a1c:	80 91 56 0b 	lds	r24, 0x0B56	; 0x800b56 <register_address_org+0x18>

00000a20 <BlockContent_Start>:
     a20:	c6 ea       	ldi	r28, 0xA6	; 166
     a22:	da e0       	ldi	r29, 0x0A	; 10
     a24:	02 e5       	ldi	r16, 0x52	; 82
     a26:	1a e0       	ldi	r17, 0x0A	; 10
     a28:	f8 01       	movw	r30, r16
     a2a:	60 81       	ld	r22, Z
     a2c:	71 81       	ldd	r23, Z+1	; 0x01
     a2e:	82 81       	ldd	r24, Z+2	; 0x02
     a30:	93 81       	ldd	r25, Z+3	; 0x03
     a32:	28 81       	ld	r18, Y
     a34:	39 81       	ldd	r19, Y+1	; 0x01
     a36:	4a 81       	ldd	r20, Y+2	; 0x02
     a38:	5b 81       	ldd	r21, Y+3	; 0x03
     a3a:	7c d2       	rcall	.+1272   	; 0xf34 <__mulsf3>
     a3c:	9b 01       	movw	r18, r22
     a3e:	ac 01       	movw	r20, r24
     a40:	c3 01       	movw	r24, r6
     a42:	b2 01       	movw	r22, r4
     a44:	90 d1       	rcall	.+800    	; 0xd66 <__subsf3>
     a46:	6b 01       	movw	r12, r22
     a48:	7c 01       	movw	r14, r24
     a4a:	f8 01       	movw	r30, r16
     a4c:	64 81       	ldd	r22, Z+4	; 0x04
     a4e:	75 81       	ldd	r23, Z+5	; 0x05
     a50:	86 81       	ldd	r24, Z+6	; 0x06
     a52:	97 81       	ldd	r25, Z+7	; 0x07
     a54:	2c 81       	ldd	r18, Y+4	; 0x04
     a56:	3d 81       	ldd	r19, Y+5	; 0x05
     a58:	4e 81       	ldd	r20, Y+6	; 0x06
     a5a:	5f 81       	ldd	r21, Y+7	; 0x07
     a5c:	6b d2       	rcall	.+1238   	; 0xf34 <__mulsf3>
     a5e:	9b 01       	movw	r18, r22
     a60:	ac 01       	movw	r20, r24
     a62:	c7 01       	movw	r24, r14
     a64:	b6 01       	movw	r22, r12
     a66:	7f d1       	rcall	.+766    	; 0xd66 <__subsf3>
     a68:	6b 01       	movw	r12, r22
     a6a:	7c 01       	movw	r14, r24
     a6c:	f8 01       	movw	r30, r16
     a6e:	60 85       	ldd	r22, Z+8	; 0x08
     a70:	71 85       	ldd	r23, Z+9	; 0x09
     a72:	82 85       	ldd	r24, Z+10	; 0x0a
     a74:	93 85       	ldd	r25, Z+11	; 0x0b
     a76:	a7 01       	movw	r20, r14
     a78:	96 01       	movw	r18, r12
     a7a:	5c d2       	rcall	.+1208   	; 0xf34 <__mulsf3>
     a7c:	2b 01       	movw	r4, r22
     a7e:	3c 01       	movw	r6, r24
     a80:	f8 01       	movw	r30, r16
     a82:	64 85       	ldd	r22, Z+12	; 0x0c
     a84:	75 85       	ldd	r23, Z+13	; 0x0d
     a86:	86 85       	ldd	r24, Z+14	; 0x0e
     a88:	97 85       	ldd	r25, Z+15	; 0x0f
     a8a:	28 81       	ld	r18, Y
     a8c:	39 81       	ldd	r19, Y+1	; 0x01
     a8e:	4a 81       	ldd	r20, Y+2	; 0x02
     a90:	5b 81       	ldd	r21, Y+3	; 0x03
     a92:	50 d2       	rcall	.+1184   	; 0xf34 <__mulsf3>
     a94:	a3 01       	movw	r20, r6
     a96:	92 01       	movw	r18, r4
     a98:	67 d1       	rcall	.+718    	; 0xd68 <__addsf3>
     a9a:	2b 01       	movw	r4, r22
     a9c:	3c 01       	movw	r6, r24
     a9e:	58 01       	movw	r10, r16
     aa0:	f4 e1       	ldi	r31, 0x14	; 20
     aa2:	af 0e       	add	r10, r31
     aa4:	b1 1c       	adc	r11, r1
     aa6:	f8 01       	movw	r30, r16
     aa8:	60 89       	ldd	r22, Z+16	; 0x10
     aaa:	71 89       	ldd	r23, Z+17	; 0x11
     aac:	82 89       	ldd	r24, Z+18	; 0x12
     aae:	93 89       	ldd	r25, Z+19	; 0x13
     ab0:	2c 81       	ldd	r18, Y+4	; 0x04
     ab2:	3d 81       	ldd	r19, Y+5	; 0x05
     ab4:	4e 81       	ldd	r20, Y+6	; 0x06
     ab6:	5f 81       	ldd	r21, Y+7	; 0x07
     ab8:	3d d2       	rcall	.+1146   	; 0xf34 <__mulsf3>
     aba:	a3 01       	movw	r20, r6
     abc:	92 01       	movw	r18, r4
     abe:	54 d1       	rcall	.+680    	; 0xd68 <__addsf3>
     ac0:	2b 01       	movw	r4, r22
     ac2:	3c 01       	movw	r6, r24
     ac4:	88 81       	ld	r24, Y
     ac6:	99 81       	ldd	r25, Y+1	; 0x01
     ac8:	aa 81       	ldd	r26, Y+2	; 0x02
     aca:	bb 81       	ldd	r27, Y+3	; 0x03
     acc:	8c 83       	std	Y+4, r24	; 0x04
     ace:	9d 83       	std	Y+5, r25	; 0x05
     ad0:	ae 83       	std	Y+6, r26	; 0x06
     ad2:	bf 83       	std	Y+7, r27	; 0x07
     ad4:	c8 82       	st	Y, r12
     ad6:	d9 82       	std	Y+1, r13	; 0x01
     ad8:	ea 82       	std	Y+2, r14	; 0x02
     ada:	fb 82       	std	Y+3, r15	; 0x03
     adc:	28 96       	adiw	r28, 0x08	; 8
     ade:	85 01       	movw	r16, r10
     ae0:	fa e0       	ldi	r31, 0x0A	; 10
     ae2:	02 3a       	cpi	r16, 0xA2	; 162
     ae4:	1f 07       	cpc	r17, r31
     ae6:	09 f0       	breq	.+2      	; 0xaea <BlockContent_End>
     ae8:	9f cf       	rjmp	.-194    	; 0xa28 <BlockContent_Start+0x8>

00000aea <BlockContent_End>:
     aea:	18 b8       	out	0x08, r1	; 8
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	a0 91 60 0b 	lds	r26, 0x0B60	; 0x800b60 <stackpointer_address_block>
     af4:	b0 91 61 0b 	lds	r27, 0x0B61	; 0x800b61 <stackpointer_address_block+0x1>
     af8:	ed e8       	ldi	r30, 0x8D	; 141
     afa:	fb e0       	ldi	r31, 0x0B	; 11
     afc:	e1 90       	ld	r14, Z+
     afe:	ed 92       	st	X+, r14
     b00:	01 96       	adiw	r24, 0x01	; 1
     b02:	85 32       	cpi	r24, 0x25	; 37
     b04:	d9 f7       	brne	.-10     	; 0xafc <BlockContent_End+0x12>
     b06:	00 90 6d 0b 	lds	r0, 0x0B6D	; 0x800b6d <register_address_block>
     b0a:	10 90 6e 0b 	lds	r1, 0x0B6E	; 0x800b6e <register_address_block+0x1>
     b0e:	20 90 6f 0b 	lds	r2, 0x0B6F	; 0x800b6f <register_address_block+0x2>
     b12:	30 90 70 0b 	lds	r3, 0x0B70	; 0x800b70 <register_address_block+0x3>
     b16:	40 90 71 0b 	lds	r4, 0x0B71	; 0x800b71 <register_address_block+0x4>
     b1a:	50 90 72 0b 	lds	r5, 0x0B72	; 0x800b72 <register_address_block+0x5>
     b1e:	60 90 73 0b 	lds	r6, 0x0B73	; 0x800b73 <register_address_block+0x6>
     b22:	70 90 74 0b 	lds	r7, 0x0B74	; 0x800b74 <register_address_block+0x7>
     b26:	80 90 75 0b 	lds	r8, 0x0B75	; 0x800b75 <register_address_block+0x8>
     b2a:	90 90 76 0b 	lds	r9, 0x0B76	; 0x800b76 <register_address_block+0x9>
     b2e:	a0 90 77 0b 	lds	r10, 0x0B77	; 0x800b77 <register_address_block+0xa>
     b32:	b0 90 78 0b 	lds	r11, 0x0B78	; 0x800b78 <register_address_block+0xb>
     b36:	c0 90 79 0b 	lds	r12, 0x0B79	; 0x800b79 <register_address_block+0xc>
     b3a:	d0 90 7a 0b 	lds	r13, 0x0B7A	; 0x800b7a <register_address_block+0xd>
     b3e:	e0 90 7b 0b 	lds	r14, 0x0B7B	; 0x800b7b <register_address_block+0xe>
     b42:	f0 90 7c 0b 	lds	r15, 0x0B7C	; 0x800b7c <register_address_block+0xf>
     b46:	00 91 7d 0b 	lds	r16, 0x0B7D	; 0x800b7d <register_address_block+0x10>
     b4a:	10 91 7e 0b 	lds	r17, 0x0B7E	; 0x800b7e <register_address_block+0x11>
     b4e:	20 91 7f 0b 	lds	r18, 0x0B7F	; 0x800b7f <register_address_block+0x12>
     b52:	30 91 80 0b 	lds	r19, 0x0B80	; 0x800b80 <register_address_block+0x13>
     b56:	40 91 81 0b 	lds	r20, 0x0B81	; 0x800b81 <register_address_block+0x14>
     b5a:	50 91 82 0b 	lds	r21, 0x0B82	; 0x800b82 <register_address_block+0x15>
     b5e:	60 91 83 0b 	lds	r22, 0x0B83	; 0x800b83 <register_address_block+0x16>
     b62:	70 91 84 0b 	lds	r23, 0x0B84	; 0x800b84 <register_address_block+0x17>
     b66:	80 91 85 0b 	lds	r24, 0x0B85	; 0x800b85 <register_address_block+0x18>
     b6a:	90 91 86 0b 	lds	r25, 0x0B86	; 0x800b86 <register_address_block+0x19>
     b6e:	a0 91 87 0b 	lds	r26, 0x0B87	; 0x800b87 <register_address_block+0x1a>
     b72:	b0 91 88 0b 	lds	r27, 0x0B88	; 0x800b88 <register_address_block+0x1b>
     b76:	c0 91 89 0b 	lds	r28, 0x0B89	; 0x800b89 <register_address_block+0x1c>
     b7a:	d0 91 8a 0b 	lds	r29, 0x0B8A	; 0x800b8a <register_address_block+0x1d>
     b7e:	e0 91 8b 0b 	lds	r30, 0x0B8B	; 0x800b8b <register_address_block+0x1e>
     b82:	f0 91 8c 0b 	lds	r31, 0x0B8C	; 0x800b8c <register_address_block+0x1f>
     b86:	e0 90 7b 0b 	lds	r14, 0x0B7B	; 0x800b7b <register_address_block+0xe>
     b8a:	f0 90 7c 0b 	lds	r15, 0x0B7C	; 0x800b7c <register_address_block+0xf>
     b8e:	08 95       	ret

00000b90 <uart_putchar>:
	}
}

/*USART*/
int uart_putchar(char c, FILE *stream)
{
     b90:	cf 93       	push	r28
     b92:	c8 2f       	mov	r28, r24
	if (c == '\n') uart_putchar('\r', stream);
     b94:	8a 30       	cpi	r24, 0x0A	; 10
     b96:	11 f4       	brne	.+4      	; 0xb9c <uart_putchar+0xc>
     b98:	8d e0       	ldi	r24, 0x0D	; 13
     b9a:	fa df       	rcall	.-12     	; 0xb90 <uart_putchar>
	while( ! ( UCSR0A & (1 << UDRE0)));
     b9c:	e0 ec       	ldi	r30, 0xC0	; 192
     b9e:	f0 e0       	ldi	r31, 0x00	; 0
     ba0:	90 81       	ld	r25, Z
     ba2:	95 ff       	sbrs	r25, 5
     ba4:	fd cf       	rjmp	.-6      	; 0xba0 <uart_putchar+0x10>
	UDR0 = c;
     ba6:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	cf 91       	pop	r28
     bb0:	08 95       	ret

00000bb2 <main>:
volatile char stackpointer_address_org[pointer_length];
volatile char stackpointer_address_block[pointer_length];
FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_RW); 

/*main function*/
int main(void){
     bb2:	cf 93       	push	r28
     bb4:	df 93       	push	r29

	/*Initialize the pointer and register address variables*/
	int x_registercounter;
	for(x_registercounter=0; x_registercounter < pointer_length; x_registercounter++){
		register_address_r14r15[x_registercounter]=0;
     bb6:	8e e5       	ldi	r24, 0x5E	; 94
     bb8:	9b e0       	ldi	r25, 0x0B	; 11
     bba:	dc 01       	movw	r26, r24
     bbc:	1c 92       	st	X, r1
		framepointer_address[x_registercounter]=0;
     bbe:	cc e3       	ldi	r28, 0x3C	; 60
     bc0:	db e0       	ldi	r29, 0x0B	; 11
     bc2:	18 82       	st	Y, r1
		stackpointer_address_org[x_registercounter]=0;
     bc4:	2b e6       	ldi	r18, 0x6B	; 107
     bc6:	3b e0       	ldi	r19, 0x0B	; 11
     bc8:	f9 01       	movw	r30, r18
     bca:	10 82       	st	Z, r1
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
     bcc:	e0 e6       	ldi	r30, 0x60	; 96
     bce:	fb e0       	ldi	r31, 0x0B	; 11
     bd0:	10 82       	st	Z, r1
     bd2:	10 82       	st	Z, r1
int main(void){

	/*Initialize the pointer and register address variables*/
	int x_registercounter;
	for(x_registercounter=0; x_registercounter < pointer_length; x_registercounter++){
		register_address_r14r15[x_registercounter]=0;
     bd4:	11 96       	adiw	r26, 0x01	; 1
     bd6:	1c 92       	st	X, r1
		framepointer_address[x_registercounter]=0;
     bd8:	19 82       	std	Y+1, r1	; 0x01
		stackpointer_address_org[x_registercounter]=0;
     bda:	d9 01       	movw	r26, r18
     bdc:	11 96       	adiw	r26, 0x01	; 1
     bde:	1c 92       	st	X, r1
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
     be0:	11 82       	std	Z+1, r1	; 0x01
     be2:	11 82       	std	Z+1, r1	; 0x01
     be4:	80 e0       	ldi	r24, 0x00	; 0
     be6:	90 e0       	ldi	r25, 0x00	; 0
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
	register_address_org[x_registercounter];
     be8:	fc 01       	movw	r30, r24
     bea:	e2 5c       	subi	r30, 0xC2	; 194
     bec:	f4 4f       	sbci	r31, 0xF4	; 244
     bee:	20 81       	ld	r18, Z
	register_address_block[x_registercounter];
     bf0:	fc 01       	movw	r30, r24
     bf2:	e3 59       	subi	r30, 0x93	; 147
     bf4:	f4 4f       	sbci	r31, 0xF4	; 244
     bf6:	20 81       	ld	r18, Z
		register_address_r14r15[x_registercounter]=0;
		framepointer_address[x_registercounter]=0;
		stackpointer_address_org[x_registercounter]=0;
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
     bf8:	01 96       	adiw	r24, 0x01	; 1
     bfa:	80 32       	cpi	r24, 0x20	; 32
     bfc:	91 05       	cpc	r25, r1
     bfe:	a1 f7       	brne	.-24     	; 0xbe8 <main+0x36>
     c00:	80 e0       	ldi	r24, 0x00	; 0
     c02:	90 e0       	ldi	r25, 0x00	; 0
	register_address_org[x_registercounter];
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
	stack_address_org[x_registercounter];
     c04:	fc 01       	movw	r30, r24
     c06:	ee 59       	subi	r30, 0x9E	; 158
     c08:	f4 4f       	sbci	r31, 0xF4	; 244
     c0a:	20 81       	ld	r18, Z
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
	register_address_org[x_registercounter];
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
     c0c:	01 96       	adiw	r24, 0x01	; 1
     c0e:	89 30       	cpi	r24, 0x09	; 9
     c10:	91 05       	cpc	r25, r1
     c12:	c1 f7       	brne	.-16     	; 0xc04 <main+0x52>
     c14:	80 e0       	ldi	r24, 0x00	; 0
     c16:	90 e0       	ldi	r25, 0x00	; 0
	stack_address_org[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_block; x_registercounter++){
	stack_address_block[x_registercounter];
     c18:	fc 01       	movw	r30, r24
     c1a:	e3 57       	subi	r30, 0x73	; 115
     c1c:	f4 4f       	sbci	r31, 0xF4	; 244
     c1e:	20 81       	ld	r18, Z
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
	stack_address_org[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_block; x_registercounter++){
     c20:	01 96       	adiw	r24, 0x01	; 1
     c22:	89 31       	cpi	r24, 0x19	; 25
     c24:	91 05       	cpc	r25, r1
     c26:	c1 f7       	brne	.-16     	; 0xc18 <main+0x66>
	stack_address_block[x_registercounter];
	}
	asm(
     c28:	ed b6       	in	r14, 0x3d	; 61
     c2a:	fe b6       	in	r15, 0x3e	; 62
     c2c:	e0 92 3c 0b 	sts	0x0B3C, r14	; 0x800b3c <framepointer_address>
     c30:	f0 92 3d 0b 	sts	0x0B3D, r15	; 0x800b3d <framepointer_address+0x1>
	"in	r15, 0x3e\n\t"
	"sts	0x0b3c, r14\n\t"
	"sts	0xb3d, r15\n\t"
	);
	/*GPIO Pins*/
	DDRA = 0x00;
     c34:	11 b8       	out	0x01, r1	; 1
	DDRC = 0xF0;
     c36:	80 ef       	ldi	r24, 0xF0	; 240
     c38:	87 b9       	out	0x07, r24	; 7
	/*External interrupt settings*/
	PORTD = (1 << PD1);
     c3a:	82 e0       	ldi	r24, 0x02	; 2
     c3c:	8b b9       	out	0x0b, r24	; 11
	EICRA =	(1 << ISC11) | (0 << ISC10);
     c3e:	98 e0       	ldi	r25, 0x08	; 8
     c40:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK = (1 << INT1);
     c44:	8d bb       	out	0x1d, r24	; 29
	/*Serial port configuration*/
	UBRR0H = (RBAUD >> 8);
     c46:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L =  RBAUD;
     c4a:	83 e3       	ldi	r24, 0x33	; 51
     c4c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0) | (1 << RXEN0);
     c50:	88 e1       	ldi	r24, 0x18	; 24
     c52:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     c56:	86 e0       	ldi	r24, 0x06	; 6
     c58:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	/*Execute the complete original code*/
	iir_init();
     c5c:	3a da       	rcall	.-2956   	; 0xd2 <iir_init>
	iir_main();
     c5e:	a6 da       	rcall	.-2740   	; 0x1ac <iir_main>
	iir_return();
     c60:	89 da       	rcall	.-2798   	; 0x174 <iir_return>
	/*Enable FPGA Interupt trigger*/
	PORTC = (1 << PC5);
     c62:	80 e2       	ldi	r24, 0x20	; 32
     c64:	88 b9       	out	0x08, r24	; 8
	PORTC = (0 << PC5);
     c66:	18 b8       	out	0x08, r1	; 8
	/*Enable external interrupt handler*/
	sei();
     c68:	78 94       	sei
	/*while loop*/
	while(measurementRoundCounter<20){}
     c6a:	80 91 50 0a 	lds	r24, 0x0A50	; 0x800a50 <__data_end>
     c6e:	90 91 51 0a 	lds	r25, 0x0A51	; 0x800a51 <__data_end+0x1>
     c72:	84 31       	cpi	r24, 0x14	; 20
     c74:	91 05       	cpc	r25, r1
     c76:	ec f3       	brlt	.-6      	; 0xc72 <main+0xc0>
	/*Return*/
	return(1);
}
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	df 91       	pop	r29
     c7e:	cf 91       	pop	r28
     c80:	08 95       	ret

00000c82 <__vector_2>:

/*Interrupt handler*/
ISR(INT1_vect){
     c82:	1f 92       	push	r1
     c84:	0f 92       	push	r0
     c86:	0f b6       	in	r0, 0x3f	; 63
     c88:	0f 92       	push	r0
     c8a:	11 24       	eor	r1, r1
     c8c:	0b b6       	in	r0, 0x3b	; 59
     c8e:	0f 92       	push	r0
     c90:	0f 93       	push	r16
     c92:	1f 93       	push	r17
     c94:	2f 93       	push	r18
     c96:	3f 93       	push	r19
     c98:	4f 93       	push	r20
     c9a:	5f 93       	push	r21
     c9c:	6f 93       	push	r22
     c9e:	7f 93       	push	r23
     ca0:	8f 93       	push	r24
     ca2:	9f 93       	push	r25
     ca4:	af 93       	push	r26
     ca6:	bf 93       	push	r27
     ca8:	cf 93       	push	r28
     caa:	df 93       	push	r29
     cac:	ef 93       	push	r30
     cae:	ff 93       	push	r31

	/*Read input values*/
	blockInputUpdate(measurementRoundCounter);
     cb0:	80 91 50 0a 	lds	r24, 0x0A50	; 0x800a50 <__data_end>
     cb4:	90 91 51 0a 	lds	r25, 0x0A51	; 0x800a51 <__data_end+0x1>
     cb8:	66 db       	rcall	.-2356   	; 0x386 <blockInputUpdate>
	/*Measure the execution time of the code block*/
	benchmarkBlock();
     cba:	0e de       	rcall	.-996    	; 0x8d8 <benchmarkBlock>
	/*Update measurement round counter*/
	measurementRoundCounter++;
     cbc:	80 91 50 0a 	lds	r24, 0x0A50	; 0x800a50 <__data_end>
     cc0:	90 91 51 0a 	lds	r25, 0x0A51	; 0x800a51 <__data_end+0x1>
     cc4:	01 96       	adiw	r24, 0x01	; 1
     cc6:	90 93 51 0a 	sts	0x0A51, r25	; 0x800a51 <__data_end+0x1>
     cca:	80 93 50 0a 	sts	0x0A50, r24	; 0x800a50 <__data_end>
	/*Print pointer values*/
	if(measurementRoundCounter==1){
     cce:	01 97       	sbiw	r24, 0x01	; 1
     cd0:	99 f5       	brne	.+102    	; 0xd38 <__vector_2+0xb6>
		fprintf(&mystdout,"%02x%02x\n",framepointer_address[1],framepointer_address[0]);
     cd2:	ec e3       	ldi	r30, 0x3C	; 60
     cd4:	fb e0       	ldi	r31, 0x0B	; 11
     cd6:	90 81       	ld	r25, Z
     cd8:	81 81       	ldd	r24, Z+1	; 0x01
     cda:	1f 92       	push	r1
     cdc:	9f 93       	push	r25
     cde:	1f 92       	push	r1
     ce0:	8f 93       	push	r24
     ce2:	06 e4       	ldi	r16, 0x46	; 70
     ce4:	1a e0       	ldi	r17, 0x0A	; 10
     ce6:	1f 93       	push	r17
     ce8:	0f 93       	push	r16
     cea:	c8 e3       	ldi	r28, 0x38	; 56
     cec:	da e0       	ldi	r29, 0x0A	; 10
     cee:	df 93       	push	r29
     cf0:	cf 93       	push	r28
     cf2:	83 d1       	rcall	.+774    	; 0xffa <fprintf>
		fprintf(&mystdout,"%02x%02x\n",stackpointer_address_org[1],stackpointer_address_org[0]);
     cf4:	eb e6       	ldi	r30, 0x6B	; 107
     cf6:	fb e0       	ldi	r31, 0x0B	; 11
     cf8:	90 81       	ld	r25, Z
     cfa:	81 81       	ldd	r24, Z+1	; 0x01
     cfc:	1f 92       	push	r1
     cfe:	9f 93       	push	r25
     d00:	1f 92       	push	r1
     d02:	8f 93       	push	r24
     d04:	1f 93       	push	r17
     d06:	0f 93       	push	r16
     d08:	df 93       	push	r29
     d0a:	cf 93       	push	r28
     d0c:	76 d1       	rcall	.+748    	; 0xffa <fprintf>
		fprintf(&mystdout,"%02x%02x\n",stackpointer_address_block[1],stackpointer_address_block[0]);
     d0e:	e0 e6       	ldi	r30, 0x60	; 96
     d10:	fb e0       	ldi	r31, 0x0B	; 11
     d12:	90 81       	ld	r25, Z
     d14:	81 81       	ldd	r24, Z+1	; 0x01
     d16:	1f 92       	push	r1
     d18:	9f 93       	push	r25
     d1a:	1f 92       	push	r1
     d1c:	8f 93       	push	r24
     d1e:	1f 93       	push	r17
     d20:	0f 93       	push	r16
     d22:	df 93       	push	r29
     d24:	cf 93       	push	r28
     d26:	69 d1       	rcall	.+722    	; 0xffa <fprintf>
     d28:	8d b7       	in	r24, 0x3d	; 61
     d2a:	9e b7       	in	r25, 0x3e	; 62
     d2c:	48 96       	adiw	r24, 0x18	; 24
     d2e:	0f b6       	in	r0, 0x3f	; 63
     d30:	f8 94       	cli
     d32:	9e bf       	out	0x3e, r25	; 62
     d34:	0f be       	out	0x3f, r0	; 63
     d36:	8d bf       	out	0x3d, r24	; 61
	}
}
     d38:	ff 91       	pop	r31
     d3a:	ef 91       	pop	r30
     d3c:	df 91       	pop	r29
     d3e:	cf 91       	pop	r28
     d40:	bf 91       	pop	r27
     d42:	af 91       	pop	r26
     d44:	9f 91       	pop	r25
     d46:	8f 91       	pop	r24
     d48:	7f 91       	pop	r23
     d4a:	6f 91       	pop	r22
     d4c:	5f 91       	pop	r21
     d4e:	4f 91       	pop	r20
     d50:	3f 91       	pop	r19
     d52:	2f 91       	pop	r18
     d54:	1f 91       	pop	r17
     d56:	0f 91       	pop	r16
     d58:	0f 90       	pop	r0
     d5a:	0b be       	out	0x3b, r0	; 59
     d5c:	0f 90       	pop	r0
     d5e:	0f be       	out	0x3f, r0	; 63
     d60:	0f 90       	pop	r0
     d62:	1f 90       	pop	r1
     d64:	18 95       	reti

00000d66 <__subsf3>:
     d66:	50 58       	subi	r21, 0x80	; 128

00000d68 <__addsf3>:
     d68:	bb 27       	eor	r27, r27
     d6a:	aa 27       	eor	r26, r26
     d6c:	0e d0       	rcall	.+28     	; 0xd8a <__addsf3x>
     d6e:	a8 c0       	rjmp	.+336    	; 0xec0 <__fp_round>
     d70:	99 d0       	rcall	.+306    	; 0xea4 <__fp_pscA>
     d72:	30 f0       	brcs	.+12     	; 0xd80 <__addsf3+0x18>
     d74:	9e d0       	rcall	.+316    	; 0xeb2 <__fp_pscB>
     d76:	20 f0       	brcs	.+8      	; 0xd80 <__addsf3+0x18>
     d78:	31 f4       	brne	.+12     	; 0xd86 <__addsf3+0x1e>
     d7a:	9f 3f       	cpi	r25, 0xFF	; 255
     d7c:	11 f4       	brne	.+4      	; 0xd82 <__addsf3+0x1a>
     d7e:	1e f4       	brtc	.+6      	; 0xd86 <__addsf3+0x1e>
     d80:	8e c0       	rjmp	.+284    	; 0xe9e <__fp_nan>
     d82:	0e f4       	brtc	.+2      	; 0xd86 <__addsf3+0x1e>
     d84:	e0 95       	com	r30
     d86:	e7 fb       	bst	r30, 7
     d88:	84 c0       	rjmp	.+264    	; 0xe92 <__fp_inf>

00000d8a <__addsf3x>:
     d8a:	e9 2f       	mov	r30, r25
     d8c:	aa d0       	rcall	.+340    	; 0xee2 <__fp_split3>
     d8e:	80 f3       	brcs	.-32     	; 0xd70 <__addsf3+0x8>
     d90:	ba 17       	cp	r27, r26
     d92:	62 07       	cpc	r22, r18
     d94:	73 07       	cpc	r23, r19
     d96:	84 07       	cpc	r24, r20
     d98:	95 07       	cpc	r25, r21
     d9a:	18 f0       	brcs	.+6      	; 0xda2 <__addsf3x+0x18>
     d9c:	71 f4       	brne	.+28     	; 0xdba <__addsf3x+0x30>
     d9e:	9e f5       	brtc	.+102    	; 0xe06 <__addsf3x+0x7c>
     da0:	c2 c0       	rjmp	.+388    	; 0xf26 <__fp_zero>
     da2:	0e f4       	brtc	.+2      	; 0xda6 <__addsf3x+0x1c>
     da4:	e0 95       	com	r30
     da6:	0b 2e       	mov	r0, r27
     da8:	ba 2f       	mov	r27, r26
     daa:	a0 2d       	mov	r26, r0
     dac:	0b 01       	movw	r0, r22
     dae:	b9 01       	movw	r22, r18
     db0:	90 01       	movw	r18, r0
     db2:	0c 01       	movw	r0, r24
     db4:	ca 01       	movw	r24, r20
     db6:	a0 01       	movw	r20, r0
     db8:	11 24       	eor	r1, r1
     dba:	ff 27       	eor	r31, r31
     dbc:	59 1b       	sub	r21, r25
     dbe:	99 f0       	breq	.+38     	; 0xde6 <__addsf3x+0x5c>
     dc0:	59 3f       	cpi	r21, 0xF9	; 249
     dc2:	50 f4       	brcc	.+20     	; 0xdd8 <__addsf3x+0x4e>
     dc4:	50 3e       	cpi	r21, 0xE0	; 224
     dc6:	68 f1       	brcs	.+90     	; 0xe22 <__addsf3x+0x98>
     dc8:	1a 16       	cp	r1, r26
     dca:	f0 40       	sbci	r31, 0x00	; 0
     dcc:	a2 2f       	mov	r26, r18
     dce:	23 2f       	mov	r18, r19
     dd0:	34 2f       	mov	r19, r20
     dd2:	44 27       	eor	r20, r20
     dd4:	58 5f       	subi	r21, 0xF8	; 248
     dd6:	f3 cf       	rjmp	.-26     	; 0xdbe <__addsf3x+0x34>
     dd8:	46 95       	lsr	r20
     dda:	37 95       	ror	r19
     ddc:	27 95       	ror	r18
     dde:	a7 95       	ror	r26
     de0:	f0 40       	sbci	r31, 0x00	; 0
     de2:	53 95       	inc	r21
     de4:	c9 f7       	brne	.-14     	; 0xdd8 <__addsf3x+0x4e>
     de6:	7e f4       	brtc	.+30     	; 0xe06 <__addsf3x+0x7c>
     de8:	1f 16       	cp	r1, r31
     dea:	ba 0b       	sbc	r27, r26
     dec:	62 0b       	sbc	r22, r18
     dee:	73 0b       	sbc	r23, r19
     df0:	84 0b       	sbc	r24, r20
     df2:	ba f0       	brmi	.+46     	; 0xe22 <__addsf3x+0x98>
     df4:	91 50       	subi	r25, 0x01	; 1
     df6:	a1 f0       	breq	.+40     	; 0xe20 <__addsf3x+0x96>
     df8:	ff 0f       	add	r31, r31
     dfa:	bb 1f       	adc	r27, r27
     dfc:	66 1f       	adc	r22, r22
     dfe:	77 1f       	adc	r23, r23
     e00:	88 1f       	adc	r24, r24
     e02:	c2 f7       	brpl	.-16     	; 0xdf4 <__addsf3x+0x6a>
     e04:	0e c0       	rjmp	.+28     	; 0xe22 <__addsf3x+0x98>
     e06:	ba 0f       	add	r27, r26
     e08:	62 1f       	adc	r22, r18
     e0a:	73 1f       	adc	r23, r19
     e0c:	84 1f       	adc	r24, r20
     e0e:	48 f4       	brcc	.+18     	; 0xe22 <__addsf3x+0x98>
     e10:	87 95       	ror	r24
     e12:	77 95       	ror	r23
     e14:	67 95       	ror	r22
     e16:	b7 95       	ror	r27
     e18:	f7 95       	ror	r31
     e1a:	9e 3f       	cpi	r25, 0xFE	; 254
     e1c:	08 f0       	brcs	.+2      	; 0xe20 <__addsf3x+0x96>
     e1e:	b3 cf       	rjmp	.-154    	; 0xd86 <__addsf3+0x1e>
     e20:	93 95       	inc	r25
     e22:	88 0f       	add	r24, r24
     e24:	08 f0       	brcs	.+2      	; 0xe28 <__addsf3x+0x9e>
     e26:	99 27       	eor	r25, r25
     e28:	ee 0f       	add	r30, r30
     e2a:	97 95       	ror	r25
     e2c:	87 95       	ror	r24
     e2e:	08 95       	ret

00000e30 <__fixsfsi>:
     e30:	04 d0       	rcall	.+8      	; 0xe3a <__fixunssfsi>
     e32:	68 94       	set
     e34:	b1 11       	cpse	r27, r1
     e36:	78 c0       	rjmp	.+240    	; 0xf28 <__fp_szero>
     e38:	08 95       	ret

00000e3a <__fixunssfsi>:
     e3a:	5b d0       	rcall	.+182    	; 0xef2 <__fp_splitA>
     e3c:	88 f0       	brcs	.+34     	; 0xe60 <__fixunssfsi+0x26>
     e3e:	9f 57       	subi	r25, 0x7F	; 127
     e40:	90 f0       	brcs	.+36     	; 0xe66 <__fixunssfsi+0x2c>
     e42:	b9 2f       	mov	r27, r25
     e44:	99 27       	eor	r25, r25
     e46:	b7 51       	subi	r27, 0x17	; 23
     e48:	a0 f0       	brcs	.+40     	; 0xe72 <__fixunssfsi+0x38>
     e4a:	d1 f0       	breq	.+52     	; 0xe80 <__fixunssfsi+0x46>
     e4c:	66 0f       	add	r22, r22
     e4e:	77 1f       	adc	r23, r23
     e50:	88 1f       	adc	r24, r24
     e52:	99 1f       	adc	r25, r25
     e54:	1a f0       	brmi	.+6      	; 0xe5c <__fixunssfsi+0x22>
     e56:	ba 95       	dec	r27
     e58:	c9 f7       	brne	.-14     	; 0xe4c <__fixunssfsi+0x12>
     e5a:	12 c0       	rjmp	.+36     	; 0xe80 <__fixunssfsi+0x46>
     e5c:	b1 30       	cpi	r27, 0x01	; 1
     e5e:	81 f0       	breq	.+32     	; 0xe80 <__fixunssfsi+0x46>
     e60:	62 d0       	rcall	.+196    	; 0xf26 <__fp_zero>
     e62:	b1 e0       	ldi	r27, 0x01	; 1
     e64:	08 95       	ret
     e66:	5f c0       	rjmp	.+190    	; 0xf26 <__fp_zero>
     e68:	67 2f       	mov	r22, r23
     e6a:	78 2f       	mov	r23, r24
     e6c:	88 27       	eor	r24, r24
     e6e:	b8 5f       	subi	r27, 0xF8	; 248
     e70:	39 f0       	breq	.+14     	; 0xe80 <__fixunssfsi+0x46>
     e72:	b9 3f       	cpi	r27, 0xF9	; 249
     e74:	cc f3       	brlt	.-14     	; 0xe68 <__fixunssfsi+0x2e>
     e76:	86 95       	lsr	r24
     e78:	77 95       	ror	r23
     e7a:	67 95       	ror	r22
     e7c:	b3 95       	inc	r27
     e7e:	d9 f7       	brne	.-10     	; 0xe76 <__fixunssfsi+0x3c>
     e80:	3e f4       	brtc	.+14     	; 0xe90 <__fixunssfsi+0x56>
     e82:	90 95       	com	r25
     e84:	80 95       	com	r24
     e86:	70 95       	com	r23
     e88:	61 95       	neg	r22
     e8a:	7f 4f       	sbci	r23, 0xFF	; 255
     e8c:	8f 4f       	sbci	r24, 0xFF	; 255
     e8e:	9f 4f       	sbci	r25, 0xFF	; 255
     e90:	08 95       	ret

00000e92 <__fp_inf>:
     e92:	97 f9       	bld	r25, 7
     e94:	9f 67       	ori	r25, 0x7F	; 127
     e96:	80 e8       	ldi	r24, 0x80	; 128
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	60 e0       	ldi	r22, 0x00	; 0
     e9c:	08 95       	ret

00000e9e <__fp_nan>:
     e9e:	9f ef       	ldi	r25, 0xFF	; 255
     ea0:	80 ec       	ldi	r24, 0xC0	; 192
     ea2:	08 95       	ret

00000ea4 <__fp_pscA>:
     ea4:	00 24       	eor	r0, r0
     ea6:	0a 94       	dec	r0
     ea8:	16 16       	cp	r1, r22
     eaa:	17 06       	cpc	r1, r23
     eac:	18 06       	cpc	r1, r24
     eae:	09 06       	cpc	r0, r25
     eb0:	08 95       	ret

00000eb2 <__fp_pscB>:
     eb2:	00 24       	eor	r0, r0
     eb4:	0a 94       	dec	r0
     eb6:	12 16       	cp	r1, r18
     eb8:	13 06       	cpc	r1, r19
     eba:	14 06       	cpc	r1, r20
     ebc:	05 06       	cpc	r0, r21
     ebe:	08 95       	ret

00000ec0 <__fp_round>:
     ec0:	09 2e       	mov	r0, r25
     ec2:	03 94       	inc	r0
     ec4:	00 0c       	add	r0, r0
     ec6:	11 f4       	brne	.+4      	; 0xecc <__fp_round+0xc>
     ec8:	88 23       	and	r24, r24
     eca:	52 f0       	brmi	.+20     	; 0xee0 <__fp_round+0x20>
     ecc:	bb 0f       	add	r27, r27
     ece:	40 f4       	brcc	.+16     	; 0xee0 <__fp_round+0x20>
     ed0:	bf 2b       	or	r27, r31
     ed2:	11 f4       	brne	.+4      	; 0xed8 <__fp_round+0x18>
     ed4:	60 ff       	sbrs	r22, 0
     ed6:	04 c0       	rjmp	.+8      	; 0xee0 <__fp_round+0x20>
     ed8:	6f 5f       	subi	r22, 0xFF	; 255
     eda:	7f 4f       	sbci	r23, 0xFF	; 255
     edc:	8f 4f       	sbci	r24, 0xFF	; 255
     ede:	9f 4f       	sbci	r25, 0xFF	; 255
     ee0:	08 95       	ret

00000ee2 <__fp_split3>:
     ee2:	57 fd       	sbrc	r21, 7
     ee4:	90 58       	subi	r25, 0x80	; 128
     ee6:	44 0f       	add	r20, r20
     ee8:	55 1f       	adc	r21, r21
     eea:	59 f0       	breq	.+22     	; 0xf02 <__fp_splitA+0x10>
     eec:	5f 3f       	cpi	r21, 0xFF	; 255
     eee:	71 f0       	breq	.+28     	; 0xf0c <__fp_splitA+0x1a>
     ef0:	47 95       	ror	r20

00000ef2 <__fp_splitA>:
     ef2:	88 0f       	add	r24, r24
     ef4:	97 fb       	bst	r25, 7
     ef6:	99 1f       	adc	r25, r25
     ef8:	61 f0       	breq	.+24     	; 0xf12 <__fp_splitA+0x20>
     efa:	9f 3f       	cpi	r25, 0xFF	; 255
     efc:	79 f0       	breq	.+30     	; 0xf1c <__fp_splitA+0x2a>
     efe:	87 95       	ror	r24
     f00:	08 95       	ret
     f02:	12 16       	cp	r1, r18
     f04:	13 06       	cpc	r1, r19
     f06:	14 06       	cpc	r1, r20
     f08:	55 1f       	adc	r21, r21
     f0a:	f2 cf       	rjmp	.-28     	; 0xef0 <__fp_split3+0xe>
     f0c:	46 95       	lsr	r20
     f0e:	f1 df       	rcall	.-30     	; 0xef2 <__fp_splitA>
     f10:	08 c0       	rjmp	.+16     	; 0xf22 <__fp_splitA+0x30>
     f12:	16 16       	cp	r1, r22
     f14:	17 06       	cpc	r1, r23
     f16:	18 06       	cpc	r1, r24
     f18:	99 1f       	adc	r25, r25
     f1a:	f1 cf       	rjmp	.-30     	; 0xefe <__fp_splitA+0xc>
     f1c:	86 95       	lsr	r24
     f1e:	71 05       	cpc	r23, r1
     f20:	61 05       	cpc	r22, r1
     f22:	08 94       	sec
     f24:	08 95       	ret

00000f26 <__fp_zero>:
     f26:	e8 94       	clt

00000f28 <__fp_szero>:
     f28:	bb 27       	eor	r27, r27
     f2a:	66 27       	eor	r22, r22
     f2c:	77 27       	eor	r23, r23
     f2e:	cb 01       	movw	r24, r22
     f30:	97 f9       	bld	r25, 7
     f32:	08 95       	ret

00000f34 <__mulsf3>:
     f34:	0b d0       	rcall	.+22     	; 0xf4c <__mulsf3x>
     f36:	c4 cf       	rjmp	.-120    	; 0xec0 <__fp_round>
     f38:	b5 df       	rcall	.-150    	; 0xea4 <__fp_pscA>
     f3a:	28 f0       	brcs	.+10     	; 0xf46 <__mulsf3+0x12>
     f3c:	ba df       	rcall	.-140    	; 0xeb2 <__fp_pscB>
     f3e:	18 f0       	brcs	.+6      	; 0xf46 <__mulsf3+0x12>
     f40:	95 23       	and	r25, r21
     f42:	09 f0       	breq	.+2      	; 0xf46 <__mulsf3+0x12>
     f44:	a6 cf       	rjmp	.-180    	; 0xe92 <__fp_inf>
     f46:	ab cf       	rjmp	.-170    	; 0xe9e <__fp_nan>
     f48:	11 24       	eor	r1, r1
     f4a:	ee cf       	rjmp	.-36     	; 0xf28 <__fp_szero>

00000f4c <__mulsf3x>:
     f4c:	ca df       	rcall	.-108    	; 0xee2 <__fp_split3>
     f4e:	a0 f3       	brcs	.-24     	; 0xf38 <__mulsf3+0x4>

00000f50 <__mulsf3_pse>:
     f50:	95 9f       	mul	r25, r21
     f52:	d1 f3       	breq	.-12     	; 0xf48 <__mulsf3+0x14>
     f54:	95 0f       	add	r25, r21
     f56:	50 e0       	ldi	r21, 0x00	; 0
     f58:	55 1f       	adc	r21, r21
     f5a:	62 9f       	mul	r22, r18
     f5c:	f0 01       	movw	r30, r0
     f5e:	72 9f       	mul	r23, r18
     f60:	bb 27       	eor	r27, r27
     f62:	f0 0d       	add	r31, r0
     f64:	b1 1d       	adc	r27, r1
     f66:	63 9f       	mul	r22, r19
     f68:	aa 27       	eor	r26, r26
     f6a:	f0 0d       	add	r31, r0
     f6c:	b1 1d       	adc	r27, r1
     f6e:	aa 1f       	adc	r26, r26
     f70:	64 9f       	mul	r22, r20
     f72:	66 27       	eor	r22, r22
     f74:	b0 0d       	add	r27, r0
     f76:	a1 1d       	adc	r26, r1
     f78:	66 1f       	adc	r22, r22
     f7a:	82 9f       	mul	r24, r18
     f7c:	22 27       	eor	r18, r18
     f7e:	b0 0d       	add	r27, r0
     f80:	a1 1d       	adc	r26, r1
     f82:	62 1f       	adc	r22, r18
     f84:	73 9f       	mul	r23, r19
     f86:	b0 0d       	add	r27, r0
     f88:	a1 1d       	adc	r26, r1
     f8a:	62 1f       	adc	r22, r18
     f8c:	83 9f       	mul	r24, r19
     f8e:	a0 0d       	add	r26, r0
     f90:	61 1d       	adc	r22, r1
     f92:	22 1f       	adc	r18, r18
     f94:	74 9f       	mul	r23, r20
     f96:	33 27       	eor	r19, r19
     f98:	a0 0d       	add	r26, r0
     f9a:	61 1d       	adc	r22, r1
     f9c:	23 1f       	adc	r18, r19
     f9e:	84 9f       	mul	r24, r20
     fa0:	60 0d       	add	r22, r0
     fa2:	21 1d       	adc	r18, r1
     fa4:	82 2f       	mov	r24, r18
     fa6:	76 2f       	mov	r23, r22
     fa8:	6a 2f       	mov	r22, r26
     faa:	11 24       	eor	r1, r1
     fac:	9f 57       	subi	r25, 0x7F	; 127
     fae:	50 40       	sbci	r21, 0x00	; 0
     fb0:	8a f0       	brmi	.+34     	; 0xfd4 <__mulsf3_pse+0x84>
     fb2:	e1 f0       	breq	.+56     	; 0xfec <__mulsf3_pse+0x9c>
     fb4:	88 23       	and	r24, r24
     fb6:	4a f0       	brmi	.+18     	; 0xfca <__mulsf3_pse+0x7a>
     fb8:	ee 0f       	add	r30, r30
     fba:	ff 1f       	adc	r31, r31
     fbc:	bb 1f       	adc	r27, r27
     fbe:	66 1f       	adc	r22, r22
     fc0:	77 1f       	adc	r23, r23
     fc2:	88 1f       	adc	r24, r24
     fc4:	91 50       	subi	r25, 0x01	; 1
     fc6:	50 40       	sbci	r21, 0x00	; 0
     fc8:	a9 f7       	brne	.-22     	; 0xfb4 <__mulsf3_pse+0x64>
     fca:	9e 3f       	cpi	r25, 0xFE	; 254
     fcc:	51 05       	cpc	r21, r1
     fce:	70 f0       	brcs	.+28     	; 0xfec <__mulsf3_pse+0x9c>
     fd0:	60 cf       	rjmp	.-320    	; 0xe92 <__fp_inf>
     fd2:	aa cf       	rjmp	.-172    	; 0xf28 <__fp_szero>
     fd4:	5f 3f       	cpi	r21, 0xFF	; 255
     fd6:	ec f3       	brlt	.-6      	; 0xfd2 <__mulsf3_pse+0x82>
     fd8:	98 3e       	cpi	r25, 0xE8	; 232
     fda:	dc f3       	brlt	.-10     	; 0xfd2 <__mulsf3_pse+0x82>
     fdc:	86 95       	lsr	r24
     fde:	77 95       	ror	r23
     fe0:	67 95       	ror	r22
     fe2:	b7 95       	ror	r27
     fe4:	f7 95       	ror	r31
     fe6:	e7 95       	ror	r30
     fe8:	9f 5f       	subi	r25, 0xFF	; 255
     fea:	c1 f7       	brne	.-16     	; 0xfdc <__mulsf3_pse+0x8c>
     fec:	fe 2b       	or	r31, r30
     fee:	88 0f       	add	r24, r24
     ff0:	91 1d       	adc	r25, r1
     ff2:	96 95       	lsr	r25
     ff4:	87 95       	ror	r24
     ff6:	97 f9       	bld	r25, 7
     ff8:	08 95       	ret

00000ffa <fprintf>:
     ffa:	cf 93       	push	r28
     ffc:	df 93       	push	r29
     ffe:	cd b7       	in	r28, 0x3d	; 61
    1000:	de b7       	in	r29, 0x3e	; 62
    1002:	ae 01       	movw	r20, r28
    1004:	47 5f       	subi	r20, 0xF7	; 247
    1006:	5f 4f       	sbci	r21, 0xFF	; 255
    1008:	6f 81       	ldd	r22, Y+7	; 0x07
    100a:	78 85       	ldd	r23, Y+8	; 0x08
    100c:	8d 81       	ldd	r24, Y+5	; 0x05
    100e:	9e 81       	ldd	r25, Y+6	; 0x06
    1010:	03 d0       	rcall	.+6      	; 0x1018 <vfprintf>
    1012:	df 91       	pop	r29
    1014:	cf 91       	pop	r28
    1016:	08 95       	ret

00001018 <vfprintf>:
    1018:	2f 92       	push	r2
    101a:	3f 92       	push	r3
    101c:	4f 92       	push	r4
    101e:	5f 92       	push	r5
    1020:	6f 92       	push	r6
    1022:	7f 92       	push	r7
    1024:	8f 92       	push	r8
    1026:	9f 92       	push	r9
    1028:	af 92       	push	r10
    102a:	bf 92       	push	r11
    102c:	cf 92       	push	r12
    102e:	df 92       	push	r13
    1030:	ef 92       	push	r14
    1032:	ff 92       	push	r15
    1034:	0f 93       	push	r16
    1036:	1f 93       	push	r17
    1038:	cf 93       	push	r28
    103a:	df 93       	push	r29
    103c:	cd b7       	in	r28, 0x3d	; 61
    103e:	de b7       	in	r29, 0x3e	; 62
    1040:	2c 97       	sbiw	r28, 0x0c	; 12
    1042:	0f b6       	in	r0, 0x3f	; 63
    1044:	f8 94       	cli
    1046:	de bf       	out	0x3e, r29	; 62
    1048:	0f be       	out	0x3f, r0	; 63
    104a:	cd bf       	out	0x3d, r28	; 61
    104c:	7c 01       	movw	r14, r24
    104e:	6b 01       	movw	r12, r22
    1050:	8a 01       	movw	r16, r20
    1052:	fc 01       	movw	r30, r24
    1054:	17 82       	std	Z+7, r1	; 0x07
    1056:	16 82       	std	Z+6, r1	; 0x06
    1058:	83 81       	ldd	r24, Z+3	; 0x03
    105a:	81 ff       	sbrs	r24, 1
    105c:	b0 c1       	rjmp	.+864    	; 0x13be <__stack+0x2bf>
    105e:	ce 01       	movw	r24, r28
    1060:	01 96       	adiw	r24, 0x01	; 1
    1062:	4c 01       	movw	r8, r24
    1064:	f7 01       	movw	r30, r14
    1066:	93 81       	ldd	r25, Z+3	; 0x03
    1068:	f6 01       	movw	r30, r12
    106a:	93 fd       	sbrc	r25, 3
    106c:	85 91       	lpm	r24, Z+
    106e:	93 ff       	sbrs	r25, 3
    1070:	81 91       	ld	r24, Z+
    1072:	6f 01       	movw	r12, r30
    1074:	88 23       	and	r24, r24
    1076:	09 f4       	brne	.+2      	; 0x107a <vfprintf+0x62>
    1078:	9e c1       	rjmp	.+828    	; 0x13b6 <__stack+0x2b7>
    107a:	85 32       	cpi	r24, 0x25	; 37
    107c:	39 f4       	brne	.+14     	; 0x108c <vfprintf+0x74>
    107e:	93 fd       	sbrc	r25, 3
    1080:	85 91       	lpm	r24, Z+
    1082:	93 ff       	sbrs	r25, 3
    1084:	81 91       	ld	r24, Z+
    1086:	6f 01       	movw	r12, r30
    1088:	85 32       	cpi	r24, 0x25	; 37
    108a:	21 f4       	brne	.+8      	; 0x1094 <vfprintf+0x7c>
    108c:	b7 01       	movw	r22, r14
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	c7 d1       	rcall	.+910    	; 0x1420 <fputc>
    1092:	e8 cf       	rjmp	.-48     	; 0x1064 <vfprintf+0x4c>
    1094:	51 2c       	mov	r5, r1
    1096:	31 2c       	mov	r3, r1
    1098:	20 e0       	ldi	r18, 0x00	; 0
    109a:	20 32       	cpi	r18, 0x20	; 32
    109c:	a0 f4       	brcc	.+40     	; 0x10c6 <vfprintf+0xae>
    109e:	8b 32       	cpi	r24, 0x2B	; 43
    10a0:	69 f0       	breq	.+26     	; 0x10bc <vfprintf+0xa4>
    10a2:	30 f4       	brcc	.+12     	; 0x10b0 <vfprintf+0x98>
    10a4:	80 32       	cpi	r24, 0x20	; 32
    10a6:	59 f0       	breq	.+22     	; 0x10be <vfprintf+0xa6>
    10a8:	83 32       	cpi	r24, 0x23	; 35
    10aa:	69 f4       	brne	.+26     	; 0x10c6 <vfprintf+0xae>
    10ac:	20 61       	ori	r18, 0x10	; 16
    10ae:	2c c0       	rjmp	.+88     	; 0x1108 <__stack+0x9>
    10b0:	8d 32       	cpi	r24, 0x2D	; 45
    10b2:	39 f0       	breq	.+14     	; 0x10c2 <vfprintf+0xaa>
    10b4:	80 33       	cpi	r24, 0x30	; 48
    10b6:	39 f4       	brne	.+14     	; 0x10c6 <vfprintf+0xae>
    10b8:	21 60       	ori	r18, 0x01	; 1
    10ba:	26 c0       	rjmp	.+76     	; 0x1108 <__stack+0x9>
    10bc:	22 60       	ori	r18, 0x02	; 2
    10be:	24 60       	ori	r18, 0x04	; 4
    10c0:	23 c0       	rjmp	.+70     	; 0x1108 <__stack+0x9>
    10c2:	28 60       	ori	r18, 0x08	; 8
    10c4:	21 c0       	rjmp	.+66     	; 0x1108 <__stack+0x9>
    10c6:	27 fd       	sbrc	r18, 7
    10c8:	27 c0       	rjmp	.+78     	; 0x1118 <__stack+0x19>
    10ca:	30 ed       	ldi	r19, 0xD0	; 208
    10cc:	38 0f       	add	r19, r24
    10ce:	3a 30       	cpi	r19, 0x0A	; 10
    10d0:	78 f4       	brcc	.+30     	; 0x10f0 <vfprintf+0xd8>
    10d2:	26 ff       	sbrs	r18, 6
    10d4:	06 c0       	rjmp	.+12     	; 0x10e2 <vfprintf+0xca>
    10d6:	fa e0       	ldi	r31, 0x0A	; 10
    10d8:	5f 9e       	mul	r5, r31
    10da:	30 0d       	add	r19, r0
    10dc:	11 24       	eor	r1, r1
    10de:	53 2e       	mov	r5, r19
    10e0:	13 c0       	rjmp	.+38     	; 0x1108 <__stack+0x9>
    10e2:	8a e0       	ldi	r24, 0x0A	; 10
    10e4:	38 9e       	mul	r3, r24
    10e6:	30 0d       	add	r19, r0
    10e8:	11 24       	eor	r1, r1
    10ea:	33 2e       	mov	r3, r19
    10ec:	20 62       	ori	r18, 0x20	; 32
    10ee:	0c c0       	rjmp	.+24     	; 0x1108 <__stack+0x9>
    10f0:	8e 32       	cpi	r24, 0x2E	; 46
    10f2:	21 f4       	brne	.+8      	; 0x10fc <vfprintf+0xe4>
    10f4:	26 fd       	sbrc	r18, 6
    10f6:	5f c1       	rjmp	.+702    	; 0x13b6 <__stack+0x2b7>
    10f8:	20 64       	ori	r18, 0x40	; 64
    10fa:	06 c0       	rjmp	.+12     	; 0x1108 <__stack+0x9>
    10fc:	8c 36       	cpi	r24, 0x6C	; 108
    10fe:	11 f4       	brne	.+4      	; 0x1104 <__stack+0x5>
    1100:	20 68       	ori	r18, 0x80	; 128
    1102:	02 c0       	rjmp	.+4      	; 0x1108 <__stack+0x9>
    1104:	88 36       	cpi	r24, 0x68	; 104
    1106:	41 f4       	brne	.+16     	; 0x1118 <__stack+0x19>
    1108:	f6 01       	movw	r30, r12
    110a:	93 fd       	sbrc	r25, 3
    110c:	85 91       	lpm	r24, Z+
    110e:	93 ff       	sbrs	r25, 3
    1110:	81 91       	ld	r24, Z+
    1112:	6f 01       	movw	r12, r30
    1114:	81 11       	cpse	r24, r1
    1116:	c1 cf       	rjmp	.-126    	; 0x109a <vfprintf+0x82>
    1118:	98 2f       	mov	r25, r24
    111a:	9f 7d       	andi	r25, 0xDF	; 223
    111c:	95 54       	subi	r25, 0x45	; 69
    111e:	93 30       	cpi	r25, 0x03	; 3
    1120:	28 f4       	brcc	.+10     	; 0x112c <__stack+0x2d>
    1122:	0c 5f       	subi	r16, 0xFC	; 252
    1124:	1f 4f       	sbci	r17, 0xFF	; 255
    1126:	ff e3       	ldi	r31, 0x3F	; 63
    1128:	f9 83       	std	Y+1, r31	; 0x01
    112a:	0d c0       	rjmp	.+26     	; 0x1146 <__stack+0x47>
    112c:	83 36       	cpi	r24, 0x63	; 99
    112e:	31 f0       	breq	.+12     	; 0x113c <__stack+0x3d>
    1130:	83 37       	cpi	r24, 0x73	; 115
    1132:	71 f0       	breq	.+28     	; 0x1150 <__stack+0x51>
    1134:	83 35       	cpi	r24, 0x53	; 83
    1136:	09 f0       	breq	.+2      	; 0x113a <__stack+0x3b>
    1138:	57 c0       	rjmp	.+174    	; 0x11e8 <__stack+0xe9>
    113a:	21 c0       	rjmp	.+66     	; 0x117e <__stack+0x7f>
    113c:	f8 01       	movw	r30, r16
    113e:	80 81       	ld	r24, Z
    1140:	89 83       	std	Y+1, r24	; 0x01
    1142:	0e 5f       	subi	r16, 0xFE	; 254
    1144:	1f 4f       	sbci	r17, 0xFF	; 255
    1146:	44 24       	eor	r4, r4
    1148:	43 94       	inc	r4
    114a:	51 2c       	mov	r5, r1
    114c:	54 01       	movw	r10, r8
    114e:	14 c0       	rjmp	.+40     	; 0x1178 <__stack+0x79>
    1150:	38 01       	movw	r6, r16
    1152:	f2 e0       	ldi	r31, 0x02	; 2
    1154:	6f 0e       	add	r6, r31
    1156:	71 1c       	adc	r7, r1
    1158:	f8 01       	movw	r30, r16
    115a:	a0 80       	ld	r10, Z
    115c:	b1 80       	ldd	r11, Z+1	; 0x01
    115e:	26 ff       	sbrs	r18, 6
    1160:	03 c0       	rjmp	.+6      	; 0x1168 <__stack+0x69>
    1162:	65 2d       	mov	r22, r5
    1164:	70 e0       	ldi	r23, 0x00	; 0
    1166:	02 c0       	rjmp	.+4      	; 0x116c <__stack+0x6d>
    1168:	6f ef       	ldi	r22, 0xFF	; 255
    116a:	7f ef       	ldi	r23, 0xFF	; 255
    116c:	c5 01       	movw	r24, r10
    116e:	2c 87       	std	Y+12, r18	; 0x0c
    1170:	4c d1       	rcall	.+664    	; 0x140a <strnlen>
    1172:	2c 01       	movw	r4, r24
    1174:	83 01       	movw	r16, r6
    1176:	2c 85       	ldd	r18, Y+12	; 0x0c
    1178:	2f 77       	andi	r18, 0x7F	; 127
    117a:	22 2e       	mov	r2, r18
    117c:	16 c0       	rjmp	.+44     	; 0x11aa <__stack+0xab>
    117e:	38 01       	movw	r6, r16
    1180:	f2 e0       	ldi	r31, 0x02	; 2
    1182:	6f 0e       	add	r6, r31
    1184:	71 1c       	adc	r7, r1
    1186:	f8 01       	movw	r30, r16
    1188:	a0 80       	ld	r10, Z
    118a:	b1 80       	ldd	r11, Z+1	; 0x01
    118c:	26 ff       	sbrs	r18, 6
    118e:	03 c0       	rjmp	.+6      	; 0x1196 <__stack+0x97>
    1190:	65 2d       	mov	r22, r5
    1192:	70 e0       	ldi	r23, 0x00	; 0
    1194:	02 c0       	rjmp	.+4      	; 0x119a <__stack+0x9b>
    1196:	6f ef       	ldi	r22, 0xFF	; 255
    1198:	7f ef       	ldi	r23, 0xFF	; 255
    119a:	c5 01       	movw	r24, r10
    119c:	2c 87       	std	Y+12, r18	; 0x0c
    119e:	2a d1       	rcall	.+596    	; 0x13f4 <strnlen_P>
    11a0:	2c 01       	movw	r4, r24
    11a2:	2c 85       	ldd	r18, Y+12	; 0x0c
    11a4:	20 68       	ori	r18, 0x80	; 128
    11a6:	22 2e       	mov	r2, r18
    11a8:	83 01       	movw	r16, r6
    11aa:	23 fc       	sbrc	r2, 3
    11ac:	19 c0       	rjmp	.+50     	; 0x11e0 <__stack+0xe1>
    11ae:	83 2d       	mov	r24, r3
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	48 16       	cp	r4, r24
    11b4:	59 06       	cpc	r5, r25
    11b6:	a0 f4       	brcc	.+40     	; 0x11e0 <__stack+0xe1>
    11b8:	b7 01       	movw	r22, r14
    11ba:	80 e2       	ldi	r24, 0x20	; 32
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	30 d1       	rcall	.+608    	; 0x1420 <fputc>
    11c0:	3a 94       	dec	r3
    11c2:	f5 cf       	rjmp	.-22     	; 0x11ae <__stack+0xaf>
    11c4:	f5 01       	movw	r30, r10
    11c6:	27 fc       	sbrc	r2, 7
    11c8:	85 91       	lpm	r24, Z+
    11ca:	27 fe       	sbrs	r2, 7
    11cc:	81 91       	ld	r24, Z+
    11ce:	5f 01       	movw	r10, r30
    11d0:	b7 01       	movw	r22, r14
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	25 d1       	rcall	.+586    	; 0x1420 <fputc>
    11d6:	31 10       	cpse	r3, r1
    11d8:	3a 94       	dec	r3
    11da:	f1 e0       	ldi	r31, 0x01	; 1
    11dc:	4f 1a       	sub	r4, r31
    11de:	51 08       	sbc	r5, r1
    11e0:	41 14       	cp	r4, r1
    11e2:	51 04       	cpc	r5, r1
    11e4:	79 f7       	brne	.-34     	; 0x11c4 <__stack+0xc5>
    11e6:	de c0       	rjmp	.+444    	; 0x13a4 <__stack+0x2a5>
    11e8:	84 36       	cpi	r24, 0x64	; 100
    11ea:	11 f0       	breq	.+4      	; 0x11f0 <__stack+0xf1>
    11ec:	89 36       	cpi	r24, 0x69	; 105
    11ee:	31 f5       	brne	.+76     	; 0x123c <__stack+0x13d>
    11f0:	f8 01       	movw	r30, r16
    11f2:	27 ff       	sbrs	r18, 7
    11f4:	07 c0       	rjmp	.+14     	; 0x1204 <__stack+0x105>
    11f6:	60 81       	ld	r22, Z
    11f8:	71 81       	ldd	r23, Z+1	; 0x01
    11fa:	82 81       	ldd	r24, Z+2	; 0x02
    11fc:	93 81       	ldd	r25, Z+3	; 0x03
    11fe:	0c 5f       	subi	r16, 0xFC	; 252
    1200:	1f 4f       	sbci	r17, 0xFF	; 255
    1202:	08 c0       	rjmp	.+16     	; 0x1214 <__stack+0x115>
    1204:	60 81       	ld	r22, Z
    1206:	71 81       	ldd	r23, Z+1	; 0x01
    1208:	07 2e       	mov	r0, r23
    120a:	00 0c       	add	r0, r0
    120c:	88 0b       	sbc	r24, r24
    120e:	99 0b       	sbc	r25, r25
    1210:	0e 5f       	subi	r16, 0xFE	; 254
    1212:	1f 4f       	sbci	r17, 0xFF	; 255
    1214:	2f 76       	andi	r18, 0x6F	; 111
    1216:	72 2e       	mov	r7, r18
    1218:	97 ff       	sbrs	r25, 7
    121a:	09 c0       	rjmp	.+18     	; 0x122e <__stack+0x12f>
    121c:	90 95       	com	r25
    121e:	80 95       	com	r24
    1220:	70 95       	com	r23
    1222:	61 95       	neg	r22
    1224:	7f 4f       	sbci	r23, 0xFF	; 255
    1226:	8f 4f       	sbci	r24, 0xFF	; 255
    1228:	9f 4f       	sbci	r25, 0xFF	; 255
    122a:	20 68       	ori	r18, 0x80	; 128
    122c:	72 2e       	mov	r7, r18
    122e:	2a e0       	ldi	r18, 0x0A	; 10
    1230:	30 e0       	ldi	r19, 0x00	; 0
    1232:	a4 01       	movw	r20, r8
    1234:	2d d1       	rcall	.+602    	; 0x1490 <__ultoa_invert>
    1236:	a8 2e       	mov	r10, r24
    1238:	a8 18       	sub	r10, r8
    123a:	43 c0       	rjmp	.+134    	; 0x12c2 <__stack+0x1c3>
    123c:	85 37       	cpi	r24, 0x75	; 117
    123e:	29 f4       	brne	.+10     	; 0x124a <__stack+0x14b>
    1240:	2f 7e       	andi	r18, 0xEF	; 239
    1242:	b2 2e       	mov	r11, r18
    1244:	2a e0       	ldi	r18, 0x0A	; 10
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	25 c0       	rjmp	.+74     	; 0x1294 <__stack+0x195>
    124a:	f2 2f       	mov	r31, r18
    124c:	f9 7f       	andi	r31, 0xF9	; 249
    124e:	bf 2e       	mov	r11, r31
    1250:	8f 36       	cpi	r24, 0x6F	; 111
    1252:	c1 f0       	breq	.+48     	; 0x1284 <__stack+0x185>
    1254:	18 f4       	brcc	.+6      	; 0x125c <__stack+0x15d>
    1256:	88 35       	cpi	r24, 0x58	; 88
    1258:	79 f0       	breq	.+30     	; 0x1278 <__stack+0x179>
    125a:	ad c0       	rjmp	.+346    	; 0x13b6 <__stack+0x2b7>
    125c:	80 37       	cpi	r24, 0x70	; 112
    125e:	19 f0       	breq	.+6      	; 0x1266 <__stack+0x167>
    1260:	88 37       	cpi	r24, 0x78	; 120
    1262:	21 f0       	breq	.+8      	; 0x126c <__stack+0x16d>
    1264:	a8 c0       	rjmp	.+336    	; 0x13b6 <__stack+0x2b7>
    1266:	2f 2f       	mov	r18, r31
    1268:	20 61       	ori	r18, 0x10	; 16
    126a:	b2 2e       	mov	r11, r18
    126c:	b4 fe       	sbrs	r11, 4
    126e:	0d c0       	rjmp	.+26     	; 0x128a <__stack+0x18b>
    1270:	8b 2d       	mov	r24, r11
    1272:	84 60       	ori	r24, 0x04	; 4
    1274:	b8 2e       	mov	r11, r24
    1276:	09 c0       	rjmp	.+18     	; 0x128a <__stack+0x18b>
    1278:	24 ff       	sbrs	r18, 4
    127a:	0a c0       	rjmp	.+20     	; 0x1290 <__stack+0x191>
    127c:	9f 2f       	mov	r25, r31
    127e:	96 60       	ori	r25, 0x06	; 6
    1280:	b9 2e       	mov	r11, r25
    1282:	06 c0       	rjmp	.+12     	; 0x1290 <__stack+0x191>
    1284:	28 e0       	ldi	r18, 0x08	; 8
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	05 c0       	rjmp	.+10     	; 0x1294 <__stack+0x195>
    128a:	20 e1       	ldi	r18, 0x10	; 16
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	02 c0       	rjmp	.+4      	; 0x1294 <__stack+0x195>
    1290:	20 e1       	ldi	r18, 0x10	; 16
    1292:	32 e0       	ldi	r19, 0x02	; 2
    1294:	f8 01       	movw	r30, r16
    1296:	b7 fe       	sbrs	r11, 7
    1298:	07 c0       	rjmp	.+14     	; 0x12a8 <__stack+0x1a9>
    129a:	60 81       	ld	r22, Z
    129c:	71 81       	ldd	r23, Z+1	; 0x01
    129e:	82 81       	ldd	r24, Z+2	; 0x02
    12a0:	93 81       	ldd	r25, Z+3	; 0x03
    12a2:	0c 5f       	subi	r16, 0xFC	; 252
    12a4:	1f 4f       	sbci	r17, 0xFF	; 255
    12a6:	06 c0       	rjmp	.+12     	; 0x12b4 <__stack+0x1b5>
    12a8:	60 81       	ld	r22, Z
    12aa:	71 81       	ldd	r23, Z+1	; 0x01
    12ac:	80 e0       	ldi	r24, 0x00	; 0
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	0e 5f       	subi	r16, 0xFE	; 254
    12b2:	1f 4f       	sbci	r17, 0xFF	; 255
    12b4:	a4 01       	movw	r20, r8
    12b6:	ec d0       	rcall	.+472    	; 0x1490 <__ultoa_invert>
    12b8:	a8 2e       	mov	r10, r24
    12ba:	a8 18       	sub	r10, r8
    12bc:	fb 2d       	mov	r31, r11
    12be:	ff 77       	andi	r31, 0x7F	; 127
    12c0:	7f 2e       	mov	r7, r31
    12c2:	76 fe       	sbrs	r7, 6
    12c4:	0b c0       	rjmp	.+22     	; 0x12dc <__stack+0x1dd>
    12c6:	37 2d       	mov	r19, r7
    12c8:	3e 7f       	andi	r19, 0xFE	; 254
    12ca:	a5 14       	cp	r10, r5
    12cc:	50 f4       	brcc	.+20     	; 0x12e2 <__stack+0x1e3>
    12ce:	74 fe       	sbrs	r7, 4
    12d0:	0a c0       	rjmp	.+20     	; 0x12e6 <__stack+0x1e7>
    12d2:	72 fc       	sbrc	r7, 2
    12d4:	08 c0       	rjmp	.+16     	; 0x12e6 <__stack+0x1e7>
    12d6:	37 2d       	mov	r19, r7
    12d8:	3e 7e       	andi	r19, 0xEE	; 238
    12da:	05 c0       	rjmp	.+10     	; 0x12e6 <__stack+0x1e7>
    12dc:	ba 2c       	mov	r11, r10
    12de:	37 2d       	mov	r19, r7
    12e0:	03 c0       	rjmp	.+6      	; 0x12e8 <__stack+0x1e9>
    12e2:	ba 2c       	mov	r11, r10
    12e4:	01 c0       	rjmp	.+2      	; 0x12e8 <__stack+0x1e9>
    12e6:	b5 2c       	mov	r11, r5
    12e8:	34 ff       	sbrs	r19, 4
    12ea:	0d c0       	rjmp	.+26     	; 0x1306 <__stack+0x207>
    12ec:	fe 01       	movw	r30, r28
    12ee:	ea 0d       	add	r30, r10
    12f0:	f1 1d       	adc	r31, r1
    12f2:	80 81       	ld	r24, Z
    12f4:	80 33       	cpi	r24, 0x30	; 48
    12f6:	11 f4       	brne	.+4      	; 0x12fc <__stack+0x1fd>
    12f8:	39 7e       	andi	r19, 0xE9	; 233
    12fa:	09 c0       	rjmp	.+18     	; 0x130e <__stack+0x20f>
    12fc:	32 ff       	sbrs	r19, 2
    12fe:	06 c0       	rjmp	.+12     	; 0x130c <__stack+0x20d>
    1300:	b3 94       	inc	r11
    1302:	b3 94       	inc	r11
    1304:	04 c0       	rjmp	.+8      	; 0x130e <__stack+0x20f>
    1306:	83 2f       	mov	r24, r19
    1308:	86 78       	andi	r24, 0x86	; 134
    130a:	09 f0       	breq	.+2      	; 0x130e <__stack+0x20f>
    130c:	b3 94       	inc	r11
    130e:	33 fd       	sbrc	r19, 3
    1310:	12 c0       	rjmp	.+36     	; 0x1336 <__stack+0x237>
    1312:	30 ff       	sbrs	r19, 0
    1314:	06 c0       	rjmp	.+12     	; 0x1322 <__stack+0x223>
    1316:	5a 2c       	mov	r5, r10
    1318:	b3 14       	cp	r11, r3
    131a:	18 f4       	brcc	.+6      	; 0x1322 <__stack+0x223>
    131c:	53 0c       	add	r5, r3
    131e:	5b 18       	sub	r5, r11
    1320:	b3 2c       	mov	r11, r3
    1322:	b3 14       	cp	r11, r3
    1324:	60 f4       	brcc	.+24     	; 0x133e <__stack+0x23f>
    1326:	b7 01       	movw	r22, r14
    1328:	80 e2       	ldi	r24, 0x20	; 32
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	3c 87       	std	Y+12, r19	; 0x0c
    132e:	78 d0       	rcall	.+240    	; 0x1420 <fputc>
    1330:	b3 94       	inc	r11
    1332:	3c 85       	ldd	r19, Y+12	; 0x0c
    1334:	f6 cf       	rjmp	.-20     	; 0x1322 <__stack+0x223>
    1336:	b3 14       	cp	r11, r3
    1338:	10 f4       	brcc	.+4      	; 0x133e <__stack+0x23f>
    133a:	3b 18       	sub	r3, r11
    133c:	01 c0       	rjmp	.+2      	; 0x1340 <__stack+0x241>
    133e:	31 2c       	mov	r3, r1
    1340:	34 ff       	sbrs	r19, 4
    1342:	11 c0       	rjmp	.+34     	; 0x1366 <__stack+0x267>
    1344:	b7 01       	movw	r22, r14
    1346:	80 e3       	ldi	r24, 0x30	; 48
    1348:	90 e0       	ldi	r25, 0x00	; 0
    134a:	3c 87       	std	Y+12, r19	; 0x0c
    134c:	69 d0       	rcall	.+210    	; 0x1420 <fputc>
    134e:	3c 85       	ldd	r19, Y+12	; 0x0c
    1350:	32 ff       	sbrs	r19, 2
    1352:	16 c0       	rjmp	.+44     	; 0x1380 <__stack+0x281>
    1354:	31 fd       	sbrc	r19, 1
    1356:	03 c0       	rjmp	.+6      	; 0x135e <__stack+0x25f>
    1358:	88 e7       	ldi	r24, 0x78	; 120
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	02 c0       	rjmp	.+4      	; 0x1362 <__stack+0x263>
    135e:	88 e5       	ldi	r24, 0x58	; 88
    1360:	90 e0       	ldi	r25, 0x00	; 0
    1362:	b7 01       	movw	r22, r14
    1364:	0c c0       	rjmp	.+24     	; 0x137e <__stack+0x27f>
    1366:	83 2f       	mov	r24, r19
    1368:	86 78       	andi	r24, 0x86	; 134
    136a:	51 f0       	breq	.+20     	; 0x1380 <__stack+0x281>
    136c:	31 ff       	sbrs	r19, 1
    136e:	02 c0       	rjmp	.+4      	; 0x1374 <__stack+0x275>
    1370:	8b e2       	ldi	r24, 0x2B	; 43
    1372:	01 c0       	rjmp	.+2      	; 0x1376 <__stack+0x277>
    1374:	80 e2       	ldi	r24, 0x20	; 32
    1376:	37 fd       	sbrc	r19, 7
    1378:	8d e2       	ldi	r24, 0x2D	; 45
    137a:	b7 01       	movw	r22, r14
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	50 d0       	rcall	.+160    	; 0x1420 <fputc>
    1380:	a5 14       	cp	r10, r5
    1382:	30 f4       	brcc	.+12     	; 0x1390 <__stack+0x291>
    1384:	b7 01       	movw	r22, r14
    1386:	80 e3       	ldi	r24, 0x30	; 48
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	4a d0       	rcall	.+148    	; 0x1420 <fputc>
    138c:	5a 94       	dec	r5
    138e:	f8 cf       	rjmp	.-16     	; 0x1380 <__stack+0x281>
    1390:	aa 94       	dec	r10
    1392:	f4 01       	movw	r30, r8
    1394:	ea 0d       	add	r30, r10
    1396:	f1 1d       	adc	r31, r1
    1398:	80 81       	ld	r24, Z
    139a:	b7 01       	movw	r22, r14
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	40 d0       	rcall	.+128    	; 0x1420 <fputc>
    13a0:	a1 10       	cpse	r10, r1
    13a2:	f6 cf       	rjmp	.-20     	; 0x1390 <__stack+0x291>
    13a4:	33 20       	and	r3, r3
    13a6:	09 f4       	brne	.+2      	; 0x13aa <__stack+0x2ab>
    13a8:	5d ce       	rjmp	.-838    	; 0x1064 <vfprintf+0x4c>
    13aa:	b7 01       	movw	r22, r14
    13ac:	80 e2       	ldi	r24, 0x20	; 32
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	37 d0       	rcall	.+110    	; 0x1420 <fputc>
    13b2:	3a 94       	dec	r3
    13b4:	f7 cf       	rjmp	.-18     	; 0x13a4 <__stack+0x2a5>
    13b6:	f7 01       	movw	r30, r14
    13b8:	86 81       	ldd	r24, Z+6	; 0x06
    13ba:	97 81       	ldd	r25, Z+7	; 0x07
    13bc:	02 c0       	rjmp	.+4      	; 0x13c2 <__stack+0x2c3>
    13be:	8f ef       	ldi	r24, 0xFF	; 255
    13c0:	9f ef       	ldi	r25, 0xFF	; 255
    13c2:	2c 96       	adiw	r28, 0x0c	; 12
    13c4:	0f b6       	in	r0, 0x3f	; 63
    13c6:	f8 94       	cli
    13c8:	de bf       	out	0x3e, r29	; 62
    13ca:	0f be       	out	0x3f, r0	; 63
    13cc:	cd bf       	out	0x3d, r28	; 61
    13ce:	df 91       	pop	r29
    13d0:	cf 91       	pop	r28
    13d2:	1f 91       	pop	r17
    13d4:	0f 91       	pop	r16
    13d6:	ff 90       	pop	r15
    13d8:	ef 90       	pop	r14
    13da:	df 90       	pop	r13
    13dc:	cf 90       	pop	r12
    13de:	bf 90       	pop	r11
    13e0:	af 90       	pop	r10
    13e2:	9f 90       	pop	r9
    13e4:	8f 90       	pop	r8
    13e6:	7f 90       	pop	r7
    13e8:	6f 90       	pop	r6
    13ea:	5f 90       	pop	r5
    13ec:	4f 90       	pop	r4
    13ee:	3f 90       	pop	r3
    13f0:	2f 90       	pop	r2
    13f2:	08 95       	ret

000013f4 <strnlen_P>:
    13f4:	fc 01       	movw	r30, r24
    13f6:	05 90       	lpm	r0, Z+
    13f8:	61 50       	subi	r22, 0x01	; 1
    13fa:	70 40       	sbci	r23, 0x00	; 0
    13fc:	01 10       	cpse	r0, r1
    13fe:	d8 f7       	brcc	.-10     	; 0x13f6 <strnlen_P+0x2>
    1400:	80 95       	com	r24
    1402:	90 95       	com	r25
    1404:	8e 0f       	add	r24, r30
    1406:	9f 1f       	adc	r25, r31
    1408:	08 95       	ret

0000140a <strnlen>:
    140a:	fc 01       	movw	r30, r24
    140c:	61 50       	subi	r22, 0x01	; 1
    140e:	70 40       	sbci	r23, 0x00	; 0
    1410:	01 90       	ld	r0, Z+
    1412:	01 10       	cpse	r0, r1
    1414:	d8 f7       	brcc	.-10     	; 0x140c <strnlen+0x2>
    1416:	80 95       	com	r24
    1418:	90 95       	com	r25
    141a:	8e 0f       	add	r24, r30
    141c:	9f 1f       	adc	r25, r31
    141e:	08 95       	ret

00001420 <fputc>:
    1420:	0f 93       	push	r16
    1422:	1f 93       	push	r17
    1424:	cf 93       	push	r28
    1426:	df 93       	push	r29
    1428:	fb 01       	movw	r30, r22
    142a:	23 81       	ldd	r18, Z+3	; 0x03
    142c:	21 fd       	sbrc	r18, 1
    142e:	03 c0       	rjmp	.+6      	; 0x1436 <fputc+0x16>
    1430:	8f ef       	ldi	r24, 0xFF	; 255
    1432:	9f ef       	ldi	r25, 0xFF	; 255
    1434:	28 c0       	rjmp	.+80     	; 0x1486 <fputc+0x66>
    1436:	22 ff       	sbrs	r18, 2
    1438:	16 c0       	rjmp	.+44     	; 0x1466 <fputc+0x46>
    143a:	46 81       	ldd	r20, Z+6	; 0x06
    143c:	57 81       	ldd	r21, Z+7	; 0x07
    143e:	24 81       	ldd	r18, Z+4	; 0x04
    1440:	35 81       	ldd	r19, Z+5	; 0x05
    1442:	42 17       	cp	r20, r18
    1444:	53 07       	cpc	r21, r19
    1446:	44 f4       	brge	.+16     	; 0x1458 <fputc+0x38>
    1448:	a0 81       	ld	r26, Z
    144a:	b1 81       	ldd	r27, Z+1	; 0x01
    144c:	9d 01       	movw	r18, r26
    144e:	2f 5f       	subi	r18, 0xFF	; 255
    1450:	3f 4f       	sbci	r19, 0xFF	; 255
    1452:	31 83       	std	Z+1, r19	; 0x01
    1454:	20 83       	st	Z, r18
    1456:	8c 93       	st	X, r24
    1458:	26 81       	ldd	r18, Z+6	; 0x06
    145a:	37 81       	ldd	r19, Z+7	; 0x07
    145c:	2f 5f       	subi	r18, 0xFF	; 255
    145e:	3f 4f       	sbci	r19, 0xFF	; 255
    1460:	37 83       	std	Z+7, r19	; 0x07
    1462:	26 83       	std	Z+6, r18	; 0x06
    1464:	10 c0       	rjmp	.+32     	; 0x1486 <fputc+0x66>
    1466:	eb 01       	movw	r28, r22
    1468:	09 2f       	mov	r16, r25
    146a:	18 2f       	mov	r17, r24
    146c:	00 84       	ldd	r0, Z+8	; 0x08
    146e:	f1 85       	ldd	r31, Z+9	; 0x09
    1470:	e0 2d       	mov	r30, r0
    1472:	09 95       	icall
    1474:	89 2b       	or	r24, r25
    1476:	e1 f6       	brne	.-72     	; 0x1430 <fputc+0x10>
    1478:	8e 81       	ldd	r24, Y+6	; 0x06
    147a:	9f 81       	ldd	r25, Y+7	; 0x07
    147c:	01 96       	adiw	r24, 0x01	; 1
    147e:	9f 83       	std	Y+7, r25	; 0x07
    1480:	8e 83       	std	Y+6, r24	; 0x06
    1482:	81 2f       	mov	r24, r17
    1484:	90 2f       	mov	r25, r16
    1486:	df 91       	pop	r29
    1488:	cf 91       	pop	r28
    148a:	1f 91       	pop	r17
    148c:	0f 91       	pop	r16
    148e:	08 95       	ret

00001490 <__ultoa_invert>:
    1490:	fa 01       	movw	r30, r20
    1492:	aa 27       	eor	r26, r26
    1494:	28 30       	cpi	r18, 0x08	; 8
    1496:	51 f1       	breq	.+84     	; 0x14ec <__ultoa_invert+0x5c>
    1498:	20 31       	cpi	r18, 0x10	; 16
    149a:	81 f1       	breq	.+96     	; 0x14fc <__ultoa_invert+0x6c>
    149c:	e8 94       	clt
    149e:	6f 93       	push	r22
    14a0:	6e 7f       	andi	r22, 0xFE	; 254
    14a2:	6e 5f       	subi	r22, 0xFE	; 254
    14a4:	7f 4f       	sbci	r23, 0xFF	; 255
    14a6:	8f 4f       	sbci	r24, 0xFF	; 255
    14a8:	9f 4f       	sbci	r25, 0xFF	; 255
    14aa:	af 4f       	sbci	r26, 0xFF	; 255
    14ac:	b1 e0       	ldi	r27, 0x01	; 1
    14ae:	3e d0       	rcall	.+124    	; 0x152c <__ultoa_invert+0x9c>
    14b0:	b4 e0       	ldi	r27, 0x04	; 4
    14b2:	3c d0       	rcall	.+120    	; 0x152c <__ultoa_invert+0x9c>
    14b4:	67 0f       	add	r22, r23
    14b6:	78 1f       	adc	r23, r24
    14b8:	89 1f       	adc	r24, r25
    14ba:	9a 1f       	adc	r25, r26
    14bc:	a1 1d       	adc	r26, r1
    14be:	68 0f       	add	r22, r24
    14c0:	79 1f       	adc	r23, r25
    14c2:	8a 1f       	adc	r24, r26
    14c4:	91 1d       	adc	r25, r1
    14c6:	a1 1d       	adc	r26, r1
    14c8:	6a 0f       	add	r22, r26
    14ca:	71 1d       	adc	r23, r1
    14cc:	81 1d       	adc	r24, r1
    14ce:	91 1d       	adc	r25, r1
    14d0:	a1 1d       	adc	r26, r1
    14d2:	20 d0       	rcall	.+64     	; 0x1514 <__ultoa_invert+0x84>
    14d4:	09 f4       	brne	.+2      	; 0x14d8 <__ultoa_invert+0x48>
    14d6:	68 94       	set
    14d8:	3f 91       	pop	r19
    14da:	2a e0       	ldi	r18, 0x0A	; 10
    14dc:	26 9f       	mul	r18, r22
    14de:	11 24       	eor	r1, r1
    14e0:	30 19       	sub	r19, r0
    14e2:	30 5d       	subi	r19, 0xD0	; 208
    14e4:	31 93       	st	Z+, r19
    14e6:	de f6       	brtc	.-74     	; 0x149e <__ultoa_invert+0xe>
    14e8:	cf 01       	movw	r24, r30
    14ea:	08 95       	ret
    14ec:	46 2f       	mov	r20, r22
    14ee:	47 70       	andi	r20, 0x07	; 7
    14f0:	40 5d       	subi	r20, 0xD0	; 208
    14f2:	41 93       	st	Z+, r20
    14f4:	b3 e0       	ldi	r27, 0x03	; 3
    14f6:	0f d0       	rcall	.+30     	; 0x1516 <__ultoa_invert+0x86>
    14f8:	c9 f7       	brne	.-14     	; 0x14ec <__ultoa_invert+0x5c>
    14fa:	f6 cf       	rjmp	.-20     	; 0x14e8 <__ultoa_invert+0x58>
    14fc:	46 2f       	mov	r20, r22
    14fe:	4f 70       	andi	r20, 0x0F	; 15
    1500:	40 5d       	subi	r20, 0xD0	; 208
    1502:	4a 33       	cpi	r20, 0x3A	; 58
    1504:	18 f0       	brcs	.+6      	; 0x150c <__ultoa_invert+0x7c>
    1506:	49 5d       	subi	r20, 0xD9	; 217
    1508:	31 fd       	sbrc	r19, 1
    150a:	40 52       	subi	r20, 0x20	; 32
    150c:	41 93       	st	Z+, r20
    150e:	02 d0       	rcall	.+4      	; 0x1514 <__ultoa_invert+0x84>
    1510:	a9 f7       	brne	.-22     	; 0x14fc <__ultoa_invert+0x6c>
    1512:	ea cf       	rjmp	.-44     	; 0x14e8 <__ultoa_invert+0x58>
    1514:	b4 e0       	ldi	r27, 0x04	; 4
    1516:	a6 95       	lsr	r26
    1518:	97 95       	ror	r25
    151a:	87 95       	ror	r24
    151c:	77 95       	ror	r23
    151e:	67 95       	ror	r22
    1520:	ba 95       	dec	r27
    1522:	c9 f7       	brne	.-14     	; 0x1516 <__ultoa_invert+0x86>
    1524:	00 97       	sbiw	r24, 0x00	; 0
    1526:	61 05       	cpc	r22, r1
    1528:	71 05       	cpc	r23, r1
    152a:	08 95       	ret
    152c:	9b 01       	movw	r18, r22
    152e:	ac 01       	movw	r20, r24
    1530:	0a 2e       	mov	r0, r26
    1532:	06 94       	lsr	r0
    1534:	57 95       	ror	r21
    1536:	47 95       	ror	r20
    1538:	37 95       	ror	r19
    153a:	27 95       	ror	r18
    153c:	ba 95       	dec	r27
    153e:	c9 f7       	brne	.-14     	; 0x1532 <__ultoa_invert+0xa2>
    1540:	62 0f       	add	r22, r18
    1542:	73 1f       	adc	r23, r19
    1544:	84 1f       	adc	r24, r20
    1546:	95 1f       	adc	r25, r21
    1548:	a0 1d       	adc	r26, r0
    154a:	08 95       	ret

0000154c <_exit>:
    154c:	f8 94       	cli

0000154e <__stop_program>:
    154e:	ff cf       	rjmp	.-2      	; 0x154e <__stop_program>
