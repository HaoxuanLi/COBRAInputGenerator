
blockR83.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  0000105e  000010f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000105e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000e0  00800118  00800118  0000110a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000110a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001168  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000011a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001029  00000000  00000000  00001230  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c81  00000000  00000000  00002259  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000405  00000000  00000000  00002eda  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001dc  00000000  00000000  000032e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006f0  00000000  00000000  000034bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006b9  00000000  00000000  00003bac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00004265  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
       2:	00 00       	nop
       4:	64 c0       	rjmp	.+200    	; 0xce <__bad_interrupt>
       6:	00 00       	nop
       8:	c3 c3       	rjmp	.+1926   	; 0x790 <__vector_2>
       a:	00 00       	nop
       c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
       e:	00 00       	nop
      10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
      12:	00 00       	nop
      14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
      16:	00 00       	nop
      18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
      1a:	00 00       	nop
      1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
      1e:	00 00       	nop
      20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
      22:	00 00       	nop
      24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
      26:	00 00       	nop
      28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
      2a:	00 00       	nop
      2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
      2e:	00 00       	nop
      30:	4e c0       	rjmp	.+156    	; 0xce <__bad_interrupt>
      32:	00 00       	nop
      34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
      36:	00 00       	nop
      38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
      3a:	00 00       	nop
      3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
      3e:	00 00       	nop
      40:	46 c0       	rjmp	.+140    	; 0xce <__bad_interrupt>
      42:	00 00       	nop
      44:	44 c0       	rjmp	.+136    	; 0xce <__bad_interrupt>
      46:	00 00       	nop
      48:	42 c0       	rjmp	.+132    	; 0xce <__bad_interrupt>
      4a:	00 00       	nop
      4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
      4e:	00 00       	nop
      50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
      52:	00 00       	nop
      54:	3c c0       	rjmp	.+120    	; 0xce <__bad_interrupt>
      56:	00 00       	nop
      58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
      5a:	00 00       	nop
      5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
      5e:	00 00       	nop
      60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
      62:	00 00       	nop
      64:	34 c0       	rjmp	.+104    	; 0xce <__bad_interrupt>
      66:	00 00       	nop
      68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
      6a:	00 00       	nop
      6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
      6e:	00 00       	nop
      70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
      72:	00 00       	nop
      74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
      76:	00 00       	nop
      78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
      7a:	00 00       	nop
      7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
      7e:	00 00       	nop
      80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
      82:	00 00       	nop
      84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
      86:	00 00       	nop
      88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
      8a:	00 00       	nop
      8c:	20 c0       	rjmp	.+64     	; 0xce <__bad_interrupt>
      8e:	00 00       	nop
      90:	1e c0       	rjmp	.+60     	; 0xce <__bad_interrupt>
	...

00000094 <__ctors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d0 e1       	ldi	r29, 0x10	; 16
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	11 e0       	ldi	r17, 0x01	; 1
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	ee e5       	ldi	r30, 0x5E	; 94
      a8:	f0 e1       	ldi	r31, 0x10	; 16
      aa:	00 e0       	ldi	r16, 0x00	; 0
      ac:	0b bf       	out	0x3b, r16	; 59
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
      b0:	07 90       	elpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	a8 31       	cpi	r26, 0x18	; 24
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
      ba:	21 e0       	ldi	r18, 0x01	; 1
      bc:	a8 e1       	ldi	r26, 0x18	; 24
      be:	b1 e0       	ldi	r27, 0x01	; 1
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	a8 3f       	cpi	r26, 0xF8	; 248
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	f9 d2       	rcall	.+1522   	; 0x6be <main>
      cc:	c6 c7       	rjmp	.+3980   	; 0x105a <_exit>

000000ce <__bad_interrupt>:
      ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <iir_init>:
/*
  Initialization- and return-value-related functions
*/

void iir_init( void )
{
      d0:	cf 93       	push	r28
      d2:	df 93       	push	r29
      d4:	1f 92       	push	r1
      d6:	cd b7       	in	r28, 0x3d	; 61
      d8:	de b7       	in	r29, 0x3e	; 62
  int f;
  unsigned int i;
  unsigned char *p;
  volatile char bitmask = 0;
      da:	19 82       	std	Y+1, r1	; 0x01


  _Pragma( "loopbound min 20 max 20" )
	asm(
      dc:	00 92 90 01 	sts	0x0190, r0	; 0x800190 <register_address_org>
      e0:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <register_address_org+0x1>
      e4:	20 92 92 01 	sts	0x0192, r2	; 0x800192 <register_address_org+0x2>
      e8:	30 92 93 01 	sts	0x0193, r3	; 0x800193 <register_address_org+0x3>
      ec:	40 92 94 01 	sts	0x0194, r4	; 0x800194 <register_address_org+0x4>
      f0:	50 92 95 01 	sts	0x0195, r5	; 0x800195 <register_address_org+0x5>
      f4:	60 92 96 01 	sts	0x0196, r6	; 0x800196 <register_address_org+0x6>
      f8:	70 92 97 01 	sts	0x0197, r7	; 0x800197 <register_address_org+0x7>
      fc:	80 92 98 01 	sts	0x0198, r8	; 0x800198 <register_address_org+0x8>
     100:	90 92 99 01 	sts	0x0199, r9	; 0x800199 <register_address_org+0x9>
     104:	a0 92 9a 01 	sts	0x019A, r10	; 0x80019a <register_address_org+0xa>
     108:	b0 92 9b 01 	sts	0x019B, r11	; 0x80019b <register_address_org+0xb>
     10c:	c0 92 9c 01 	sts	0x019C, r12	; 0x80019c <register_address_org+0xc>
     110:	d0 92 9d 01 	sts	0x019D, r13	; 0x80019d <register_address_org+0xd>
     114:	e0 92 9e 01 	sts	0x019E, r14	; 0x80019e <register_address_org+0xe>
     118:	f0 92 9f 01 	sts	0x019F, r15	; 0x80019f <register_address_org+0xf>
     11c:	00 93 a0 01 	sts	0x01A0, r16	; 0x8001a0 <register_address_org+0x10>
     120:	10 93 a1 01 	sts	0x01A1, r17	; 0x8001a1 <register_address_org+0x11>
     124:	20 93 a2 01 	sts	0x01A2, r18	; 0x8001a2 <register_address_org+0x12>
     128:	30 93 a3 01 	sts	0x01A3, r19	; 0x8001a3 <register_address_org+0x13>
     12c:	40 93 a4 01 	sts	0x01A4, r20	; 0x8001a4 <register_address_org+0x14>
     130:	50 93 a5 01 	sts	0x01A5, r21	; 0x8001a5 <register_address_org+0x15>
     134:	60 93 a6 01 	sts	0x01A6, r22	; 0x8001a6 <register_address_org+0x16>
     138:	70 93 a7 01 	sts	0x01A7, r23	; 0x8001a7 <register_address_org+0x17>
     13c:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <register_address_org+0x18>
     140:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <register_address_org+0x19>
     144:	a0 93 aa 01 	sts	0x01AA, r26	; 0x8001aa <register_address_org+0x1a>
     148:	b0 93 ab 01 	sts	0x01AB, r27	; 0x8001ab <register_address_org+0x1b>
     14c:	c0 93 ac 01 	sts	0x01AC, r28	; 0x8001ac <register_address_org+0x1c>
     150:	d0 93 ad 01 	sts	0x01AD, r29	; 0x8001ad <register_address_org+0x1d>
     154:	e0 93 ae 01 	sts	0x01AE, r30	; 0x8001ae <register_address_org+0x1e>
     158:	f0 93 af 01 	sts	0x01AF, r31	; 0x8001af <register_address_org+0x1f>
     15c:	ed b6       	in	r14, 0x3d	; 61
     15e:	fe b6       	in	r15, 0x3e	; 62
     160:	e0 92 bd 01 	sts	0x01BD, r14	; 0x8001bd <stackpointer_address_org>
     164:	f0 92 be 01 	sts	0x01BE, r15	; 0x8001be <stackpointer_address_org+0x1>
     168:	80 e0       	ldi	r24, 0x00	; 0
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	a0 91 bd 01 	lds	r26, 0x01BD	; 0x8001bd <stackpointer_address_org>
     170:	b0 91 be 01 	lds	r27, 0x01BE	; 0x8001be <stackpointer_address_org+0x1>
     174:	e4 eb       	ldi	r30, 0xB4	; 180
     176:	f1 e0       	ldi	r31, 0x01	; 1
     178:	ed 90       	ld	r14, X+
     17a:	e1 92       	st	Z+, r14
     17c:	01 96       	adiw	r24, 0x01	; 1
     17e:	89 30       	cpi	r24, 0x09	; 9
     180:	d9 f7       	brne	.-10     	; 0x178 <iir_init+0xa8>
     182:	e0 90 9e 01 	lds	r14, 0x019E	; 0x80019e <register_address_org+0xe>
     186:	f0 90 9f 01 	lds	r15, 0x019F	; 0x80019f <register_address_org+0xf>
     18a:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <register_address_org+0x18>
     18e:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <register_address_org+0x19>
     192:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <register_address_org+0x1a>
     196:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <register_address_org+0x1b>
     19a:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <register_address_org+0x1e>
     19e:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <register_address_org+0x1f>

000001a2 <Tic_flag>:
	"lds	r27, 0x1ab\n\t"
	"lds	r30, 0x1ae\n\t"
	"lds	r31, 0x1af\n\t"
	);
	asm("Tic_flag:");
  for ( f = 0 ; f < 5 * 4; f++ )
     1a2:	80 e0       	ldi	r24, 0x00	; 0
     1a4:	90 e0       	ldi	r25, 0x00	; 0
    iir_coefficients[ f ] = 7;
     1a6:	40 e0       	ldi	r20, 0x00	; 0
     1a8:	50 e0       	ldi	r21, 0x00	; 0
     1aa:	60 ee       	ldi	r22, 0xE0	; 224
     1ac:	70 e4       	ldi	r23, 0x40	; 64
     1ae:	fc 01       	movw	r30, r24
     1b0:	ee 0f       	add	r30, r30
     1b2:	ff 1f       	adc	r31, r31
     1b4:	ee 0f       	add	r30, r30
     1b6:	ff 1f       	adc	r31, r31
     1b8:	e6 5e       	subi	r30, 0xE6	; 230
     1ba:	fe 4f       	sbci	r31, 0xFE	; 254
     1bc:	40 83       	st	Z, r20
     1be:	51 83       	std	Z+1, r21	; 0x01
     1c0:	62 83       	std	Z+2, r22	; 0x02
     1c2:	73 83       	std	Z+3, r23	; 0x03
	"lds	r27, 0x1ab\n\t"
	"lds	r30, 0x1ae\n\t"
	"lds	r31, 0x1af\n\t"
	);
	asm("Tic_flag:");
  for ( f = 0 ; f < 5 * 4; f++ )
     1c4:	01 96       	adiw	r24, 0x01	; 1
     1c6:	84 31       	cpi	r24, 0x14	; 20
     1c8:	91 05       	cpc	r25, r1
     1ca:	89 f7       	brne	.-30     	; 0x1ae <Tic_flag+0xc>

000001cc <Toc_flag>:
    iir_coefficients[ f ] = 7;
	asm("Toc_flag:");

  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     1cc:	80 e0       	ldi	r24, 0x00	; 0
     1ce:	90 e0       	ldi	r25, 0x00	; 0
    iir_wi[ f ] = 0;
     1d0:	fc 01       	movw	r30, r24
     1d2:	ee 0f       	add	r30, r30
     1d4:	ff 1f       	adc	r31, r31
     1d6:	ee 0f       	add	r30, r30
     1d8:	ff 1f       	adc	r31, r31
     1da:	e2 59       	subi	r30, 0x92	; 146
     1dc:	fe 4f       	sbci	r31, 0xFE	; 254
     1de:	10 82       	st	Z, r1
     1e0:	11 82       	std	Z+1, r1	; 0x01
     1e2:	12 82       	std	Z+2, r1	; 0x02
     1e4:	13 82       	std	Z+3, r1	; 0x03
  for ( f = 0 ; f < 5 * 4; f++ )
    iir_coefficients[ f ] = 7;
	asm("Toc_flag:");

  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     1e6:	01 96       	adiw	r24, 0x01	; 1
     1e8:	88 30       	cpi	r24, 0x08	; 8
     1ea:	91 05       	cpc	r25, r1
     1ec:	89 f7       	brne	.-30     	; 0x1d0 <Toc_flag+0x4>
    iir_wi[ f ] = 0;

  iir_x = ( float ) 1;
     1ee:	80 e0       	ldi	r24, 0x00	; 0
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	a0 e8       	ldi	r26, 0x80	; 128
     1f4:	bf e3       	ldi	r27, 0x3F	; 63
     1f6:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <iir_x>
     1fa:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <iir_x+0x1>
     1fe:	a0 93 6c 01 	sts	0x016C, r26	; 0x80016c <iir_x+0x2>
     202:	b0 93 6d 01 	sts	0x016D, r27	; 0x80016d <iir_x+0x3>

  /*
    Apply volatile XOR-bitmask to entire input array.
  */
  p = (unsigned char *) &iir_coefficients[ 0 ];
     206:	ea e1       	ldi	r30, 0x1A	; 26
     208:	f1 e0       	ldi	r31, 0x01	; 1
  _Pragma( "loopbound min 80 max 80" )
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
    *p ^= bitmask;
     20a:	89 81       	ldd	r24, Y+1	; 0x01
     20c:	90 81       	ld	r25, Z
     20e:	89 27       	eor	r24, r25
     210:	81 93       	st	Z+, r24
  /*
    Apply volatile XOR-bitmask to entire input array.
  */
  p = (unsigned char *) &iir_coefficients[ 0 ];
  _Pragma( "loopbound min 80 max 80" )
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
     212:	81 e0       	ldi	r24, 0x01	; 1
     214:	ea 36       	cpi	r30, 0x6A	; 106
     216:	f8 07       	cpc	r31, r24
     218:	c1 f7       	brne	.-16     	; 0x20a <Toc_flag+0x3e>
     21a:	ee e6       	ldi	r30, 0x6E	; 110
     21c:	f1 e0       	ldi	r31, 0x01	; 1
    *p ^= bitmask;

  p = (unsigned char *) &iir_wi[ 0 ];
  _Pragma( "loopbound min 32 max 32" )
  for ( i = 0; i < sizeof( iir_wi ); ++i, ++p )
    *p ^= bitmask;
     21e:	89 81       	ldd	r24, Y+1	; 0x01
     220:	90 81       	ld	r25, Z
     222:	89 27       	eor	r24, r25
     224:	81 93       	st	Z+, r24
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
    *p ^= bitmask;

  p = (unsigned char *) &iir_wi[ 0 ];
  _Pragma( "loopbound min 32 max 32" )
  for ( i = 0; i < sizeof( iir_wi ); ++i, ++p )
     226:	81 e0       	ldi	r24, 0x01	; 1
     228:	ee 38       	cpi	r30, 0x8E	; 142
     22a:	f8 07       	cpc	r31, r24
     22c:	c1 f7       	brne	.-16     	; 0x21e <Toc_flag+0x52>
    *p ^= bitmask;
}
     22e:	0f 90       	pop	r0
     230:	df 91       	pop	r29
     232:	cf 91       	pop	r28
     234:	08 95       	ret

00000236 <iir_return>:


int iir_return( void )
{
     236:	cf 93       	push	r28
     238:	df 93       	push	r29
  float checksum = 0.0;
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     23a:	c0 e0       	ldi	r28, 0x00	; 0
     23c:	d0 e0       	ldi	r29, 0x00	; 0
}


int iir_return( void )
{
  float checksum = 0.0;
     23e:	60 e0       	ldi	r22, 0x00	; 0
     240:	70 e0       	ldi	r23, 0x00	; 0
     242:	cb 01       	movw	r24, r22
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
    checksum += iir_wi[ f ];
     244:	fe 01       	movw	r30, r28
     246:	ee 0f       	add	r30, r30
     248:	ff 1f       	adc	r31, r31
     24a:	ee 0f       	add	r30, r30
     24c:	ff 1f       	adc	r31, r31
     24e:	e2 59       	subi	r30, 0x92	; 146
     250:	fe 4f       	sbci	r31, 0xFE	; 254
     252:	20 81       	ld	r18, Z
     254:	31 81       	ldd	r19, Z+1	; 0x01
     256:	42 81       	ldd	r20, Z+2	; 0x02
     258:	53 81       	ldd	r21, Z+3	; 0x03
     25a:	0d d3       	rcall	.+1562   	; 0x876 <__addsf3>
  float checksum = 0.0;
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     25c:	21 96       	adiw	r28, 0x01	; 1
     25e:	c8 30       	cpi	r28, 0x08	; 8
     260:	d1 05       	cpc	r29, r1
     262:	81 f7       	brne	.-32     	; 0x244 <iir_return+0xe>
    checksum += iir_wi[ f ];

  return( (int) checksum );
     264:	6c d3       	rcall	.+1752   	; 0x93e <__fixsfsi>
}
     266:	cb 01       	movw	r24, r22
     268:	df 91       	pop	r29
     26a:	cf 91       	pop	r28
     26c:	08 95       	ret

0000026e <iir_main>:
/*
  Main functions
*/

void _Pragma( "entrypoint" ) iir_main( void )
{
     26e:	4f 92       	push	r4
     270:	5f 92       	push	r5
     272:	6f 92       	push	r6
     274:	7f 92       	push	r7
     276:	af 92       	push	r10
     278:	bf 92       	push	r11
     27a:	cf 92       	push	r12
     27c:	df 92       	push	r13
     27e:	ef 92       	push	r14
     280:	ff 92       	push	r15
     282:	0f 93       	push	r16
     284:	1f 93       	push	r17
     286:	cf 93       	push	r28
     288:	df 93       	push	r29

  ptr_coeff = &iir_coefficients[ 0 ];
  ptr_wi1 = &iir_wi[ 0 ];
  ptr_wi2 = &iir_wi[ 1 ];

  y = iir_x ;
     28a:	40 90 6a 01 	lds	r4, 0x016A	; 0x80016a <iir_x>
     28e:	50 90 6b 01 	lds	r5, 0x016B	; 0x80016b <iir_x+0x1>
     292:	60 90 6c 01 	lds	r6, 0x016C	; 0x80016c <iir_x+0x2>
     296:	70 90 6d 01 	lds	r7, 0x016D	; 0x80016d <iir_x+0x3>
  register volatile float *ptr_coeff, *ptr_wi1, *ptr_wi2;
  register float y;


  ptr_coeff = &iir_coefficients[ 0 ];
  ptr_wi1 = &iir_wi[ 0 ];
     29a:	ce e6       	ldi	r28, 0x6E	; 110
     29c:	d1 e0       	ldi	r29, 0x01	; 1
  int f;
  register volatile float *ptr_coeff, *ptr_wi1, *ptr_wi2;
  register float y;


  ptr_coeff = &iir_coefficients[ 0 ];
     29e:	0a e1       	ldi	r16, 0x1A	; 26
     2a0:	11 e0       	ldi	r17, 0x01	; 1

  y = iir_x ;

  _Pragma( "loopbound min 4 max 4" )
  for ( f = 0 ; f < 4 ; f++ ) {
    w = y - *ptr_coeff++ * *ptr_wi1;
     2a2:	f8 01       	movw	r30, r16
     2a4:	60 81       	ld	r22, Z
     2a6:	71 81       	ldd	r23, Z+1	; 0x01
     2a8:	82 81       	ldd	r24, Z+2	; 0x02
     2aa:	93 81       	ldd	r25, Z+3	; 0x03
     2ac:	28 81       	ld	r18, Y
     2ae:	39 81       	ldd	r19, Y+1	; 0x01
     2b0:	4a 81       	ldd	r20, Y+2	; 0x02
     2b2:	5b 81       	ldd	r21, Y+3	; 0x03
     2b4:	c6 d3       	rcall	.+1932   	; 0xa42 <__mulsf3>
     2b6:	9b 01       	movw	r18, r22
     2b8:	ac 01       	movw	r20, r24
     2ba:	c3 01       	movw	r24, r6
     2bc:	b2 01       	movw	r22, r4
     2be:	da d2       	rcall	.+1460   	; 0x874 <__subsf3>
     2c0:	6b 01       	movw	r12, r22
     2c2:	7c 01       	movw	r14, r24
    w -= *ptr_coeff++ * *ptr_wi2;
     2c4:	f8 01       	movw	r30, r16
     2c6:	64 81       	ldd	r22, Z+4	; 0x04
     2c8:	75 81       	ldd	r23, Z+5	; 0x05
     2ca:	86 81       	ldd	r24, Z+6	; 0x06
     2cc:	97 81       	ldd	r25, Z+7	; 0x07
     2ce:	2c 81       	ldd	r18, Y+4	; 0x04
     2d0:	3d 81       	ldd	r19, Y+5	; 0x05
     2d2:	4e 81       	ldd	r20, Y+6	; 0x06
     2d4:	5f 81       	ldd	r21, Y+7	; 0x07
     2d6:	b5 d3       	rcall	.+1898   	; 0xa42 <__mulsf3>
     2d8:	9b 01       	movw	r18, r22
     2da:	ac 01       	movw	r20, r24
     2dc:	c7 01       	movw	r24, r14
     2de:	b6 01       	movw	r22, r12
     2e0:	c9 d2       	rcall	.+1426   	; 0x874 <__subsf3>
     2e2:	6b 01       	movw	r12, r22
     2e4:	7c 01       	movw	r14, r24

    y = *ptr_coeff++ * w;
     2e6:	f8 01       	movw	r30, r16
     2e8:	60 85       	ldd	r22, Z+8	; 0x08
     2ea:	71 85       	ldd	r23, Z+9	; 0x09
     2ec:	82 85       	ldd	r24, Z+10	; 0x0a
     2ee:	93 85       	ldd	r25, Z+11	; 0x0b
     2f0:	a7 01       	movw	r20, r14
     2f2:	96 01       	movw	r18, r12
     2f4:	a6 d3       	rcall	.+1868   	; 0xa42 <__mulsf3>
     2f6:	2b 01       	movw	r4, r22
     2f8:	3c 01       	movw	r6, r24
    y += *ptr_coeff++ * *ptr_wi1;
     2fa:	f8 01       	movw	r30, r16
     2fc:	64 85       	ldd	r22, Z+12	; 0x0c
     2fe:	75 85       	ldd	r23, Z+13	; 0x0d
     300:	86 85       	ldd	r24, Z+14	; 0x0e
     302:	97 85       	ldd	r25, Z+15	; 0x0f
     304:	28 81       	ld	r18, Y
     306:	39 81       	ldd	r19, Y+1	; 0x01
     308:	4a 81       	ldd	r20, Y+2	; 0x02
     30a:	5b 81       	ldd	r21, Y+3	; 0x03
     30c:	9a d3       	rcall	.+1844   	; 0xa42 <__mulsf3>
     30e:	a3 01       	movw	r20, r6
     310:	92 01       	movw	r18, r4
     312:	b1 d2       	rcall	.+1378   	; 0x876 <__addsf3>
     314:	2b 01       	movw	r4, r22
     316:	3c 01       	movw	r6, r24
     318:	58 01       	movw	r10, r16
     31a:	f4 e1       	ldi	r31, 0x14	; 20
     31c:	af 0e       	add	r10, r31
     31e:	b1 1c       	adc	r11, r1
    y += *ptr_coeff++ * *ptr_wi2;
     320:	f8 01       	movw	r30, r16
     322:	60 89       	ldd	r22, Z+16	; 0x10
     324:	71 89       	ldd	r23, Z+17	; 0x11
     326:	82 89       	ldd	r24, Z+18	; 0x12
     328:	93 89       	ldd	r25, Z+19	; 0x13
     32a:	2c 81       	ldd	r18, Y+4	; 0x04
     32c:	3d 81       	ldd	r19, Y+5	; 0x05
     32e:	4e 81       	ldd	r20, Y+6	; 0x06
     330:	5f 81       	ldd	r21, Y+7	; 0x07
     332:	87 d3       	rcall	.+1806   	; 0xa42 <__mulsf3>
     334:	a3 01       	movw	r20, r6
     336:	92 01       	movw	r18, r4
     338:	9e d2       	rcall	.+1340   	; 0x876 <__addsf3>
     33a:	2b 01       	movw	r4, r22
     33c:	3c 01       	movw	r6, r24

    *ptr_wi2++ = *ptr_wi1;
     33e:	88 81       	ld	r24, Y
     340:	99 81       	ldd	r25, Y+1	; 0x01
     342:	aa 81       	ldd	r26, Y+2	; 0x02
     344:	bb 81       	ldd	r27, Y+3	; 0x03
     346:	8c 83       	std	Y+4, r24	; 0x04
     348:	9d 83       	std	Y+5, r25	; 0x05
     34a:	ae 83       	std	Y+6, r26	; 0x06
     34c:	bf 83       	std	Y+7, r27	; 0x07
    *ptr_wi1++ = w;
     34e:	c8 82       	st	Y, r12
     350:	d9 82       	std	Y+1, r13	; 0x01
     352:	ea 82       	std	Y+2, r14	; 0x02
     354:	fb 82       	std	Y+3, r15	; 0x03
     356:	28 96       	adiw	r28, 0x08	; 8
    w = y - *ptr_coeff++ * *ptr_wi1;
    w -= *ptr_coeff++ * *ptr_wi2;

    y = *ptr_coeff++ * w;
    y += *ptr_coeff++ * *ptr_wi1;
    y += *ptr_coeff++ * *ptr_wi2;
     358:	85 01       	movw	r16, r10
  ptr_wi2 = &iir_wi[ 1 ];

  y = iir_x ;

  _Pragma( "loopbound min 4 max 4" )
  for ( f = 0 ; f < 4 ; f++ ) {
     35a:	f1 e0       	ldi	r31, 0x01	; 1
     35c:	0a 36       	cpi	r16, 0x6A	; 106
     35e:	1f 07       	cpc	r17, r31
     360:	09 f0       	breq	.+2      	; 0x364 <iir_main+0xf6>
     362:	9f cf       	rjmp	.-194    	; 0x2a2 <iir_main+0x34>
    *ptr_wi1++ = w;

    ptr_wi2++;
    ptr_wi1++;
  }
}
     364:	df 91       	pop	r29
     366:	cf 91       	pop	r28
     368:	1f 91       	pop	r17
     36a:	0f 91       	pop	r16
     36c:	ff 90       	pop	r15
     36e:	ef 90       	pop	r14
     370:	df 90       	pop	r13
     372:	cf 90       	pop	r12
     374:	bf 90       	pop	r11
     376:	af 90       	pop	r10
     378:	7f 90       	pop	r7
     37a:	6f 90       	pop	r6
     37c:	5f 90       	pop	r5
     37e:	4f 90       	pop	r4
     380:	08 95       	ret

00000382 <blockInputUpdate>:
 

void blockInputUpdate(int blockInputUpdate_i) 
{
	 
	asm(
     382:	00 92 bf 01 	sts	0x01BF, r0	; 0x8001bf <register_address_block>
     386:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <register_address_block+0x1>
     38a:	20 92 c1 01 	sts	0x01C1, r2	; 0x8001c1 <register_address_block+0x2>
     38e:	30 92 c2 01 	sts	0x01C2, r3	; 0x8001c2 <register_address_block+0x3>
     392:	40 92 c3 01 	sts	0x01C3, r4	; 0x8001c3 <register_address_block+0x4>
     396:	50 92 c4 01 	sts	0x01C4, r5	; 0x8001c4 <register_address_block+0x5>
     39a:	60 92 c5 01 	sts	0x01C5, r6	; 0x8001c5 <register_address_block+0x6>
     39e:	70 92 c6 01 	sts	0x01C6, r7	; 0x8001c6 <register_address_block+0x7>
     3a2:	80 92 c7 01 	sts	0x01C7, r8	; 0x8001c7 <register_address_block+0x8>
     3a6:	90 92 c8 01 	sts	0x01C8, r9	; 0x8001c8 <register_address_block+0x9>
     3aa:	a0 92 c9 01 	sts	0x01C9, r10	; 0x8001c9 <register_address_block+0xa>
     3ae:	b0 92 ca 01 	sts	0x01CA, r11	; 0x8001ca <register_address_block+0xb>
     3b2:	c0 92 cb 01 	sts	0x01CB, r12	; 0x8001cb <register_address_block+0xc>
     3b6:	d0 92 cc 01 	sts	0x01CC, r13	; 0x8001cc <register_address_block+0xd>
     3ba:	e0 92 cd 01 	sts	0x01CD, r14	; 0x8001cd <register_address_block+0xe>
     3be:	f0 92 ce 01 	sts	0x01CE, r15	; 0x8001ce <register_address_block+0xf>
     3c2:	00 93 cf 01 	sts	0x01CF, r16	; 0x8001cf <register_address_block+0x10>
     3c6:	10 93 d0 01 	sts	0x01D0, r17	; 0x8001d0 <register_address_block+0x11>
     3ca:	20 93 d1 01 	sts	0x01D1, r18	; 0x8001d1 <register_address_block+0x12>
     3ce:	30 93 d2 01 	sts	0x01D2, r19	; 0x8001d2 <register_address_block+0x13>
     3d2:	40 93 d3 01 	sts	0x01D3, r20	; 0x8001d3 <register_address_block+0x14>
     3d6:	50 93 d4 01 	sts	0x01D4, r21	; 0x8001d4 <register_address_block+0x15>
     3da:	60 93 d5 01 	sts	0x01D5, r22	; 0x8001d5 <register_address_block+0x16>
     3de:	70 93 d6 01 	sts	0x01D6, r23	; 0x8001d6 <register_address_block+0x17>
     3e2:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <register_address_block+0x18>
     3e6:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <register_address_block+0x19>
     3ea:	a0 93 d9 01 	sts	0x01D9, r26	; 0x8001d9 <register_address_block+0x1a>
     3ee:	b0 93 da 01 	sts	0x01DA, r27	; 0x8001da <register_address_block+0x1b>
     3f2:	c0 93 db 01 	sts	0x01DB, r28	; 0x8001db <register_address_block+0x1c>
     3f6:	d0 93 dc 01 	sts	0x01DC, r29	; 0x8001dc <register_address_block+0x1d>
     3fa:	e0 93 dd 01 	sts	0x01DD, r30	; 0x8001dd <register_address_block+0x1e>
     3fe:	f0 93 de 01 	sts	0x01DE, r31	; 0x8001de <register_address_block+0x1f>
     402:	00 90 bf 01 	lds	r0, 0x01BF	; 0x8001bf <register_address_block>
     406:	10 90 c0 01 	lds	r1, 0x01C0	; 0x8001c0 <register_address_block+0x1>
     40a:	20 90 c1 01 	lds	r2, 0x01C1	; 0x8001c1 <register_address_block+0x2>
     40e:	30 90 c2 01 	lds	r3, 0x01C2	; 0x8001c2 <register_address_block+0x3>
     412:	40 90 c3 01 	lds	r4, 0x01C3	; 0x8001c3 <register_address_block+0x4>
     416:	50 90 c4 01 	lds	r5, 0x01C4	; 0x8001c4 <register_address_block+0x5>
     41a:	60 90 c5 01 	lds	r6, 0x01C5	; 0x8001c5 <register_address_block+0x6>
     41e:	70 90 c6 01 	lds	r7, 0x01C6	; 0x8001c6 <register_address_block+0x7>
     422:	80 90 c7 01 	lds	r8, 0x01C7	; 0x8001c7 <register_address_block+0x8>
     426:	90 90 c8 01 	lds	r9, 0x01C8	; 0x8001c8 <register_address_block+0x9>
     42a:	a0 90 c9 01 	lds	r10, 0x01C9	; 0x8001c9 <register_address_block+0xa>
     42e:	b0 90 ca 01 	lds	r11, 0x01CA	; 0x8001ca <register_address_block+0xb>
     432:	c0 90 cb 01 	lds	r12, 0x01CB	; 0x8001cb <register_address_block+0xc>
     436:	d0 90 cc 01 	lds	r13, 0x01CC	; 0x8001cc <register_address_block+0xd>
     43a:	e0 90 cd 01 	lds	r14, 0x01CD	; 0x8001cd <register_address_block+0xe>
     43e:	f0 90 ce 01 	lds	r15, 0x01CE	; 0x8001ce <register_address_block+0xf>
     442:	00 91 cf 01 	lds	r16, 0x01CF	; 0x8001cf <register_address_block+0x10>
     446:	10 91 d0 01 	lds	r17, 0x01D0	; 0x8001d0 <register_address_block+0x11>
     44a:	20 91 d1 01 	lds	r18, 0x01D1	; 0x8001d1 <register_address_block+0x12>
     44e:	30 91 d2 01 	lds	r19, 0x01D2	; 0x8001d2 <register_address_block+0x13>
     452:	40 91 d3 01 	lds	r20, 0x01D3	; 0x8001d3 <register_address_block+0x14>
     456:	50 91 d4 01 	lds	r21, 0x01D4	; 0x8001d4 <register_address_block+0x15>
     45a:	60 91 d5 01 	lds	r22, 0x01D5	; 0x8001d5 <register_address_block+0x16>
     45e:	70 91 d6 01 	lds	r23, 0x01D6	; 0x8001d6 <register_address_block+0x17>
     462:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <register_address_block+0x18>
     466:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <register_address_block+0x19>
     46a:	a0 91 d9 01 	lds	r26, 0x01D9	; 0x8001d9 <register_address_block+0x1a>
     46e:	b0 91 da 01 	lds	r27, 0x01DA	; 0x8001da <register_address_block+0x1b>
     472:	c0 91 db 01 	lds	r28, 0x01DB	; 0x8001db <register_address_block+0x1c>
     476:	d0 91 dc 01 	lds	r29, 0x01DC	; 0x8001dc <register_address_block+0x1d>
     47a:	e0 91 dd 01 	lds	r30, 0x01DD	; 0x8001dd <register_address_block+0x1e>
     47e:	f0 91 de 01 	lds	r31, 0x01DE	; 0x8001de <register_address_block+0x1f>
     482:	08 95       	ret

00000484 <benchmarkBlock>:
} 
 
/*BLock execution time measurement*/
void benchmarkBlock(void)
{
	asm(
     484:	00 92 bf 01 	sts	0x01BF, r0	; 0x8001bf <register_address_block>
     488:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <register_address_block+0x1>
     48c:	20 92 c1 01 	sts	0x01C1, r2	; 0x8001c1 <register_address_block+0x2>
     490:	30 92 c2 01 	sts	0x01C2, r3	; 0x8001c2 <register_address_block+0x3>
     494:	40 92 c3 01 	sts	0x01C3, r4	; 0x8001c3 <register_address_block+0x4>
     498:	50 92 c4 01 	sts	0x01C4, r5	; 0x8001c4 <register_address_block+0x5>
     49c:	60 92 c5 01 	sts	0x01C5, r6	; 0x8001c5 <register_address_block+0x6>
     4a0:	70 92 c6 01 	sts	0x01C6, r7	; 0x8001c6 <register_address_block+0x7>
     4a4:	80 92 c7 01 	sts	0x01C7, r8	; 0x8001c7 <register_address_block+0x8>
     4a8:	90 92 c8 01 	sts	0x01C8, r9	; 0x8001c8 <register_address_block+0x9>
     4ac:	a0 92 c9 01 	sts	0x01C9, r10	; 0x8001c9 <register_address_block+0xa>
     4b0:	b0 92 ca 01 	sts	0x01CA, r11	; 0x8001ca <register_address_block+0xb>
     4b4:	c0 92 cb 01 	sts	0x01CB, r12	; 0x8001cb <register_address_block+0xc>
     4b8:	d0 92 cc 01 	sts	0x01CC, r13	; 0x8001cc <register_address_block+0xd>
     4bc:	e0 92 cd 01 	sts	0x01CD, r14	; 0x8001cd <register_address_block+0xe>
     4c0:	f0 92 ce 01 	sts	0x01CE, r15	; 0x8001ce <register_address_block+0xf>
     4c4:	00 93 cf 01 	sts	0x01CF, r16	; 0x8001cf <register_address_block+0x10>
     4c8:	10 93 d0 01 	sts	0x01D0, r17	; 0x8001d0 <register_address_block+0x11>
     4cc:	20 93 d1 01 	sts	0x01D1, r18	; 0x8001d1 <register_address_block+0x12>
     4d0:	30 93 d2 01 	sts	0x01D2, r19	; 0x8001d2 <register_address_block+0x13>
     4d4:	40 93 d3 01 	sts	0x01D3, r20	; 0x8001d3 <register_address_block+0x14>
     4d8:	50 93 d4 01 	sts	0x01D4, r21	; 0x8001d4 <register_address_block+0x15>
     4dc:	60 93 d5 01 	sts	0x01D5, r22	; 0x8001d5 <register_address_block+0x16>
     4e0:	70 93 d6 01 	sts	0x01D6, r23	; 0x8001d6 <register_address_block+0x17>
     4e4:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <register_address_block+0x18>
     4e8:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <register_address_block+0x19>
     4ec:	a0 93 d9 01 	sts	0x01D9, r26	; 0x8001d9 <register_address_block+0x1a>
     4f0:	b0 93 da 01 	sts	0x01DA, r27	; 0x8001da <register_address_block+0x1b>
     4f4:	c0 93 db 01 	sts	0x01DB, r28	; 0x8001db <register_address_block+0x1c>
     4f8:	d0 93 dc 01 	sts	0x01DC, r29	; 0x8001dc <register_address_block+0x1d>
     4fc:	e0 93 dd 01 	sts	0x01DD, r30	; 0x8001dd <register_address_block+0x1e>
     500:	f0 93 de 01 	sts	0x01DE, r31	; 0x8001de <register_address_block+0x1f>
     504:	ed b6       	in	r14, 0x3d	; 61
     506:	fe b6       	in	r15, 0x3e	; 62
     508:	e0 92 b2 01 	sts	0x01B2, r14	; 0x8001b2 <stackpointer_address_block>
     50c:	f0 92 b3 01 	sts	0x01B3, r15	; 0x8001b3 <stackpointer_address_block+0x1>
     510:	80 e0       	ldi	r24, 0x00	; 0
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	a0 91 b2 01 	lds	r26, 0x01B2	; 0x8001b2 <stackpointer_address_block>
     518:	b0 91 b3 01 	lds	r27, 0x01B3	; 0x8001b3 <stackpointer_address_block+0x1>
     51c:	ef ed       	ldi	r30, 0xDF	; 223
     51e:	f1 e0       	ldi	r31, 0x01	; 1
     520:	ed 90       	ld	r14, X+
     522:	e1 92       	st	Z+, r14
     524:	01 96       	adiw	r24, 0x01	; 1
     526:	85 32       	cpi	r24, 0x25	; 37
     528:	d9 f7       	brne	.-10     	; 0x520 <benchmarkBlock+0x9c>
     52a:	80 e0       	ldi	r24, 0x00	; 0
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	a0 91 bd 01 	lds	r26, 0x01BD	; 0x8001bd <stackpointer_address_org>
     532:	b0 91 be 01 	lds	r27, 0x01BE	; 0x8001be <stackpointer_address_org+0x1>
     536:	e4 eb       	ldi	r30, 0xB4	; 180
     538:	f1 e0       	ldi	r31, 0x01	; 1
     53a:	e1 90       	ld	r14, Z+
     53c:	ed 92       	st	X+, r14
     53e:	01 96       	adiw	r24, 0x01	; 1
     540:	89 30       	cpi	r24, 0x09	; 9
     542:	d9 f7       	brne	.-10     	; 0x53a <benchmarkBlock+0xb6>
     544:	00 90 90 01 	lds	r0, 0x0190	; 0x800190 <register_address_org>
     548:	10 90 91 01 	lds	r1, 0x0191	; 0x800191 <register_address_org+0x1>
     54c:	20 90 92 01 	lds	r2, 0x0192	; 0x800192 <register_address_org+0x2>
     550:	30 90 93 01 	lds	r3, 0x0193	; 0x800193 <register_address_org+0x3>
     554:	40 90 94 01 	lds	r4, 0x0194	; 0x800194 <register_address_org+0x4>
     558:	50 90 95 01 	lds	r5, 0x0195	; 0x800195 <register_address_org+0x5>
     55c:	60 90 96 01 	lds	r6, 0x0196	; 0x800196 <register_address_org+0x6>
     560:	70 90 97 01 	lds	r7, 0x0197	; 0x800197 <register_address_org+0x7>
     564:	80 90 98 01 	lds	r8, 0x0198	; 0x800198 <register_address_org+0x8>
     568:	90 90 99 01 	lds	r9, 0x0199	; 0x800199 <register_address_org+0x9>
     56c:	a0 90 9a 01 	lds	r10, 0x019A	; 0x80019a <register_address_org+0xa>
     570:	b0 90 9b 01 	lds	r11, 0x019B	; 0x80019b <register_address_org+0xb>
     574:	c0 90 9c 01 	lds	r12, 0x019C	; 0x80019c <register_address_org+0xc>
     578:	d0 90 9d 01 	lds	r13, 0x019D	; 0x80019d <register_address_org+0xd>
     57c:	e0 90 9e 01 	lds	r14, 0x019E	; 0x80019e <register_address_org+0xe>
     580:	f0 90 9f 01 	lds	r15, 0x019F	; 0x80019f <register_address_org+0xf>
     584:	00 91 a0 01 	lds	r16, 0x01A0	; 0x8001a0 <register_address_org+0x10>
     588:	10 91 a1 01 	lds	r17, 0x01A1	; 0x8001a1 <register_address_org+0x11>
     58c:	20 91 a2 01 	lds	r18, 0x01A2	; 0x8001a2 <register_address_org+0x12>
     590:	30 91 a3 01 	lds	r19, 0x01A3	; 0x8001a3 <register_address_org+0x13>
     594:	40 91 a4 01 	lds	r20, 0x01A4	; 0x8001a4 <register_address_org+0x14>
     598:	50 91 a5 01 	lds	r21, 0x01A5	; 0x8001a5 <register_address_org+0x15>
     59c:	60 91 a6 01 	lds	r22, 0x01A6	; 0x8001a6 <register_address_org+0x16>
     5a0:	70 91 a7 01 	lds	r23, 0x01A7	; 0x8001a7 <register_address_org+0x17>
     5a4:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <register_address_org+0x18>
     5a8:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <register_address_org+0x19>
     5ac:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <register_address_org+0x1a>
     5b0:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <register_address_org+0x1b>
     5b4:	c0 91 ac 01 	lds	r28, 0x01AC	; 0x8001ac <register_address_org+0x1c>
     5b8:	d0 91 ad 01 	lds	r29, 0x01AD	; 0x8001ad <register_address_org+0x1d>
     5bc:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <register_address_org+0x1e>
     5c0:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <register_address_org+0x1f>
     5c4:	80 e1       	ldi	r24, 0x10	; 16
     5c6:	88 b9       	out	0x08, r24	; 8
     5c8:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <register_address_org+0x18>

000005cc <BlockContent_Start>:
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	40 e0       	ldi	r20, 0x00	; 0
     5d2:	50 e0       	ldi	r21, 0x00	; 0
     5d4:	60 ee       	ldi	r22, 0xE0	; 224
     5d6:	70 e4       	ldi	r23, 0x40	; 64
     5d8:	fc 01       	movw	r30, r24
     5da:	ee 0f       	add	r30, r30
     5dc:	ff 1f       	adc	r31, r31
     5de:	ee 0f       	add	r30, r30
     5e0:	ff 1f       	adc	r31, r31
     5e2:	e6 5e       	subi	r30, 0xE6	; 230
     5e4:	fe 4f       	sbci	r31, 0xFE	; 254
     5e6:	40 83       	st	Z, r20
     5e8:	51 83       	std	Z+1, r21	; 0x01
     5ea:	62 83       	std	Z+2, r22	; 0x02
     5ec:	73 83       	std	Z+3, r23	; 0x03
     5ee:	01 96       	adiw	r24, 0x01	; 1
     5f0:	84 31       	cpi	r24, 0x14	; 20
     5f2:	91 05       	cpc	r25, r1
     5f4:	89 f7       	brne	.-30     	; 0x5d8 <BlockContent_Start+0xc>

000005f6 <BlockContent_End>:
     5f6:	18 b8       	out	0x08, r1	; 8
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	a0 91 b2 01 	lds	r26, 0x01B2	; 0x8001b2 <stackpointer_address_block>
     600:	b0 91 b3 01 	lds	r27, 0x01B3	; 0x8001b3 <stackpointer_address_block+0x1>
     604:	ef ed       	ldi	r30, 0xDF	; 223
     606:	f1 e0       	ldi	r31, 0x01	; 1
     608:	e1 90       	ld	r14, Z+
     60a:	ed 92       	st	X+, r14
     60c:	01 96       	adiw	r24, 0x01	; 1
     60e:	85 32       	cpi	r24, 0x25	; 37
     610:	d9 f7       	brne	.-10     	; 0x608 <BlockContent_End+0x12>
     612:	00 90 bf 01 	lds	r0, 0x01BF	; 0x8001bf <register_address_block>
     616:	10 90 c0 01 	lds	r1, 0x01C0	; 0x8001c0 <register_address_block+0x1>
     61a:	20 90 c1 01 	lds	r2, 0x01C1	; 0x8001c1 <register_address_block+0x2>
     61e:	30 90 c2 01 	lds	r3, 0x01C2	; 0x8001c2 <register_address_block+0x3>
     622:	40 90 c3 01 	lds	r4, 0x01C3	; 0x8001c3 <register_address_block+0x4>
     626:	50 90 c4 01 	lds	r5, 0x01C4	; 0x8001c4 <register_address_block+0x5>
     62a:	60 90 c5 01 	lds	r6, 0x01C5	; 0x8001c5 <register_address_block+0x6>
     62e:	70 90 c6 01 	lds	r7, 0x01C6	; 0x8001c6 <register_address_block+0x7>
     632:	80 90 c7 01 	lds	r8, 0x01C7	; 0x8001c7 <register_address_block+0x8>
     636:	90 90 c8 01 	lds	r9, 0x01C8	; 0x8001c8 <register_address_block+0x9>
     63a:	a0 90 c9 01 	lds	r10, 0x01C9	; 0x8001c9 <register_address_block+0xa>
     63e:	b0 90 ca 01 	lds	r11, 0x01CA	; 0x8001ca <register_address_block+0xb>
     642:	c0 90 cb 01 	lds	r12, 0x01CB	; 0x8001cb <register_address_block+0xc>
     646:	d0 90 cc 01 	lds	r13, 0x01CC	; 0x8001cc <register_address_block+0xd>
     64a:	e0 90 cd 01 	lds	r14, 0x01CD	; 0x8001cd <register_address_block+0xe>
     64e:	f0 90 ce 01 	lds	r15, 0x01CE	; 0x8001ce <register_address_block+0xf>
     652:	00 91 cf 01 	lds	r16, 0x01CF	; 0x8001cf <register_address_block+0x10>
     656:	10 91 d0 01 	lds	r17, 0x01D0	; 0x8001d0 <register_address_block+0x11>
     65a:	20 91 d1 01 	lds	r18, 0x01D1	; 0x8001d1 <register_address_block+0x12>
     65e:	30 91 d2 01 	lds	r19, 0x01D2	; 0x8001d2 <register_address_block+0x13>
     662:	40 91 d3 01 	lds	r20, 0x01D3	; 0x8001d3 <register_address_block+0x14>
     666:	50 91 d4 01 	lds	r21, 0x01D4	; 0x8001d4 <register_address_block+0x15>
     66a:	60 91 d5 01 	lds	r22, 0x01D5	; 0x8001d5 <register_address_block+0x16>
     66e:	70 91 d6 01 	lds	r23, 0x01D6	; 0x8001d6 <register_address_block+0x17>
     672:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <register_address_block+0x18>
     676:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <register_address_block+0x19>
     67a:	a0 91 d9 01 	lds	r26, 0x01D9	; 0x8001d9 <register_address_block+0x1a>
     67e:	b0 91 da 01 	lds	r27, 0x01DA	; 0x8001da <register_address_block+0x1b>
     682:	c0 91 db 01 	lds	r28, 0x01DB	; 0x8001db <register_address_block+0x1c>
     686:	d0 91 dc 01 	lds	r29, 0x01DC	; 0x8001dc <register_address_block+0x1d>
     68a:	e0 91 dd 01 	lds	r30, 0x01DD	; 0x8001dd <register_address_block+0x1e>
     68e:	f0 91 de 01 	lds	r31, 0x01DE	; 0x8001de <register_address_block+0x1f>
     692:	e0 90 cd 01 	lds	r14, 0x01CD	; 0x8001cd <register_address_block+0xe>
     696:	f0 90 ce 01 	lds	r15, 0x01CE	; 0x8001ce <register_address_block+0xf>
     69a:	08 95       	ret

0000069c <uart_putchar>:
	}
}

/*USART*/
int uart_putchar(char c, FILE *stream)
{
     69c:	cf 93       	push	r28
     69e:	c8 2f       	mov	r28, r24
	if (c == '\n') uart_putchar('\r', stream);
     6a0:	8a 30       	cpi	r24, 0x0A	; 10
     6a2:	11 f4       	brne	.+4      	; 0x6a8 <uart_putchar+0xc>
     6a4:	8d e0       	ldi	r24, 0x0D	; 13
     6a6:	fa df       	rcall	.-12     	; 0x69c <uart_putchar>
	while( ! ( UCSR0A & (1 << UDRE0)));
     6a8:	e0 ec       	ldi	r30, 0xC0	; 192
     6aa:	f0 e0       	ldi	r31, 0x00	; 0
     6ac:	90 81       	ld	r25, Z
     6ae:	95 ff       	sbrs	r25, 5
     6b0:	fd cf       	rjmp	.-6      	; 0x6ac <uart_putchar+0x10>
	UDR0 = c;
     6b2:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
     6b6:	80 e0       	ldi	r24, 0x00	; 0
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	cf 91       	pop	r28
     6bc:	08 95       	ret

000006be <main>:
volatile char stackpointer_address_org[pointer_length];
volatile char stackpointer_address_block[pointer_length];
FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_RW); 

/*main function*/
int main(void){
     6be:	cf 93       	push	r28
     6c0:	df 93       	push	r29

	/*Initialize the pointer and register address variables*/
	int x_registercounter;
	for(x_registercounter=0; x_registercounter < pointer_length; x_registercounter++){
		register_address_r14r15[x_registercounter]=0;
     6c2:	80 eb       	ldi	r24, 0xB0	; 176
     6c4:	91 e0       	ldi	r25, 0x01	; 1
     6c6:	dc 01       	movw	r26, r24
     6c8:	1c 92       	st	X, r1
		framepointer_address[x_registercounter]=0;
     6ca:	ce e8       	ldi	r28, 0x8E	; 142
     6cc:	d1 e0       	ldi	r29, 0x01	; 1
     6ce:	18 82       	st	Y, r1
		stackpointer_address_org[x_registercounter]=0;
     6d0:	2d eb       	ldi	r18, 0xBD	; 189
     6d2:	31 e0       	ldi	r19, 0x01	; 1
     6d4:	f9 01       	movw	r30, r18
     6d6:	10 82       	st	Z, r1
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
     6d8:	e2 eb       	ldi	r30, 0xB2	; 178
     6da:	f1 e0       	ldi	r31, 0x01	; 1
     6dc:	10 82       	st	Z, r1
     6de:	10 82       	st	Z, r1
int main(void){

	/*Initialize the pointer and register address variables*/
	int x_registercounter;
	for(x_registercounter=0; x_registercounter < pointer_length; x_registercounter++){
		register_address_r14r15[x_registercounter]=0;
     6e0:	11 96       	adiw	r26, 0x01	; 1
     6e2:	1c 92       	st	X, r1
		framepointer_address[x_registercounter]=0;
     6e4:	19 82       	std	Y+1, r1	; 0x01
		stackpointer_address_org[x_registercounter]=0;
     6e6:	d9 01       	movw	r26, r18
     6e8:	11 96       	adiw	r26, 0x01	; 1
     6ea:	1c 92       	st	X, r1
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
     6ec:	11 82       	std	Z+1, r1	; 0x01
     6ee:	11 82       	std	Z+1, r1	; 0x01
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
	register_address_org[x_registercounter];
     6f4:	fc 01       	movw	r30, r24
     6f6:	e0 57       	subi	r30, 0x70	; 112
     6f8:	fe 4f       	sbci	r31, 0xFE	; 254
     6fa:	20 81       	ld	r18, Z
	register_address_block[x_registercounter];
     6fc:	fc 01       	movw	r30, r24
     6fe:	e1 54       	subi	r30, 0x41	; 65
     700:	fe 4f       	sbci	r31, 0xFE	; 254
     702:	20 81       	ld	r18, Z
		register_address_r14r15[x_registercounter]=0;
		framepointer_address[x_registercounter]=0;
		stackpointer_address_org[x_registercounter]=0;
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
     704:	01 96       	adiw	r24, 0x01	; 1
     706:	80 32       	cpi	r24, 0x20	; 32
     708:	91 05       	cpc	r25, r1
     70a:	a1 f7       	brne	.-24     	; 0x6f4 <main+0x36>
     70c:	80 e0       	ldi	r24, 0x00	; 0
     70e:	90 e0       	ldi	r25, 0x00	; 0
	register_address_org[x_registercounter];
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
	stack_address_org[x_registercounter];
     710:	fc 01       	movw	r30, r24
     712:	ec 54       	subi	r30, 0x4C	; 76
     714:	fe 4f       	sbci	r31, 0xFE	; 254
     716:	20 81       	ld	r18, Z
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
	register_address_org[x_registercounter];
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
     718:	01 96       	adiw	r24, 0x01	; 1
     71a:	89 30       	cpi	r24, 0x09	; 9
     71c:	91 05       	cpc	r25, r1
     71e:	c1 f7       	brne	.-16     	; 0x710 <main+0x52>
     720:	80 e0       	ldi	r24, 0x00	; 0
     722:	90 e0       	ldi	r25, 0x00	; 0
	stack_address_org[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_block; x_registercounter++){
	stack_address_block[x_registercounter];
     724:	fc 01       	movw	r30, r24
     726:	e1 52       	subi	r30, 0x21	; 33
     728:	fe 4f       	sbci	r31, 0xFE	; 254
     72a:	20 81       	ld	r18, Z
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
	stack_address_org[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_block; x_registercounter++){
     72c:	01 96       	adiw	r24, 0x01	; 1
     72e:	89 31       	cpi	r24, 0x19	; 25
     730:	91 05       	cpc	r25, r1
     732:	c1 f7       	brne	.-16     	; 0x724 <main+0x66>
	stack_address_block[x_registercounter];
	}
	asm(
     734:	ed b6       	in	r14, 0x3d	; 61
     736:	fe b6       	in	r15, 0x3e	; 62
     738:	e0 92 8e 01 	sts	0x018E, r14	; 0x80018e <framepointer_address>
     73c:	f0 92 8f 01 	sts	0x018F, r15	; 0x80018f <framepointer_address+0x1>
	"in	r15, 0x3e\n\t"
	"sts	0x018e, r14\n\t"
	"sts	0x18f, r15\n\t"
	);
	/*GPIO Pins*/
	DDRA = 0x00;
     740:	11 b8       	out	0x01, r1	; 1
	DDRC = 0xF0;
     742:	80 ef       	ldi	r24, 0xF0	; 240
     744:	87 b9       	out	0x07, r24	; 7
	/*External interrupt settings*/
	PORTD = (1 << PD1);
     746:	82 e0       	ldi	r24, 0x02	; 2
     748:	8b b9       	out	0x0b, r24	; 11
	EICRA =	(1 << ISC11) | (0 << ISC10);
     74a:	98 e0       	ldi	r25, 0x08	; 8
     74c:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK = (1 << INT1);
     750:	8d bb       	out	0x1d, r24	; 29
	/*Serial port configuration*/
	UBRR0H = (RBAUD >> 8);
     752:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L =  RBAUD;
     756:	83 e3       	ldi	r24, 0x33	; 51
     758:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0) | (1 << RXEN0);
     75c:	88 e1       	ldi	r24, 0x18	; 24
     75e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     762:	86 e0       	ldi	r24, 0x06	; 6
     764:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	/*Execute the complete original code*/
	iir_init();
     768:	b3 dc       	rcall	.-1690   	; 0xd0 <iir_init>
	iir_main();
     76a:	81 dd       	rcall	.-1278   	; 0x26e <iir_main>
	iir_return();
     76c:	64 dd       	rcall	.-1336   	; 0x236 <iir_return>
	/*Enable FPGA Interupt trigger*/
	PORTC = (1 << PC5);
     76e:	80 e2       	ldi	r24, 0x20	; 32
     770:	88 b9       	out	0x08, r24	; 8
	PORTC = (0 << PC5);
     772:	18 b8       	out	0x08, r1	; 8
	/*Enable external interrupt handler*/
	sei();
     774:	78 94       	sei
	/*while loop*/
	while(measurementRoundCounter<5000){}
     776:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
     77a:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <__data_end+0x1>
     77e:	88 38       	cpi	r24, 0x88	; 136
     780:	b3 e1       	ldi	r27, 0x13	; 19
     782:	9b 07       	cpc	r25, r27
     784:	e4 f3       	brlt	.-8      	; 0x77e <main+0xc0>
	/*Return*/
	return(1);
}
     786:	81 e0       	ldi	r24, 0x01	; 1
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	08 95       	ret

00000790 <__vector_2>:

/*Interrupt handler*/
ISR(INT1_vect){
     790:	1f 92       	push	r1
     792:	0f 92       	push	r0
     794:	0f b6       	in	r0, 0x3f	; 63
     796:	0f 92       	push	r0
     798:	11 24       	eor	r1, r1
     79a:	0b b6       	in	r0, 0x3b	; 59
     79c:	0f 92       	push	r0
     79e:	0f 93       	push	r16
     7a0:	1f 93       	push	r17
     7a2:	2f 93       	push	r18
     7a4:	3f 93       	push	r19
     7a6:	4f 93       	push	r20
     7a8:	5f 93       	push	r21
     7aa:	6f 93       	push	r22
     7ac:	7f 93       	push	r23
     7ae:	8f 93       	push	r24
     7b0:	9f 93       	push	r25
     7b2:	af 93       	push	r26
     7b4:	bf 93       	push	r27
     7b6:	cf 93       	push	r28
     7b8:	df 93       	push	r29
     7ba:	ef 93       	push	r30
     7bc:	ff 93       	push	r31

	/*Read input values*/
	blockInputUpdate(measurementRoundCounter);
     7be:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
     7c2:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <__data_end+0x1>
     7c6:	dd dd       	rcall	.-1094   	; 0x382 <blockInputUpdate>
	/*Measure the execution time of the code block*/
	benchmarkBlock();
     7c8:	5d de       	rcall	.-838    	; 0x484 <benchmarkBlock>
	/*Update measurement round counter*/
	measurementRoundCounter++;
     7ca:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
     7ce:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <__data_end+0x1>
     7d2:	01 96       	adiw	r24, 0x01	; 1
     7d4:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <__data_end+0x1>
     7d8:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
	/*Print pointer values*/
	if(measurementRoundCounter==1){
     7dc:	01 97       	sbiw	r24, 0x01	; 1
     7de:	99 f5       	brne	.+102    	; 0x846 <__vector_2+0xb6>
		fprintf(&mystdout,"%02x%02x\n",framepointer_address[1],framepointer_address[0]);
     7e0:	ee e8       	ldi	r30, 0x8E	; 142
     7e2:	f1 e0       	ldi	r31, 0x01	; 1
     7e4:	90 81       	ld	r25, Z
     7e6:	81 81       	ldd	r24, Z+1	; 0x01
     7e8:	1f 92       	push	r1
     7ea:	9f 93       	push	r25
     7ec:	1f 92       	push	r1
     7ee:	8f 93       	push	r24
     7f0:	0e e0       	ldi	r16, 0x0E	; 14
     7f2:	11 e0       	ldi	r17, 0x01	; 1
     7f4:	1f 93       	push	r17
     7f6:	0f 93       	push	r16
     7f8:	c0 e0       	ldi	r28, 0x00	; 0
     7fa:	d1 e0       	ldi	r29, 0x01	; 1
     7fc:	df 93       	push	r29
     7fe:	cf 93       	push	r28
     800:	83 d1       	rcall	.+774    	; 0xb08 <fprintf>
		fprintf(&mystdout,"%02x%02x\n",stackpointer_address_org[1],stackpointer_address_org[0]);
     802:	ed eb       	ldi	r30, 0xBD	; 189
     804:	f1 e0       	ldi	r31, 0x01	; 1
     806:	90 81       	ld	r25, Z
     808:	81 81       	ldd	r24, Z+1	; 0x01
     80a:	1f 92       	push	r1
     80c:	9f 93       	push	r25
     80e:	1f 92       	push	r1
     810:	8f 93       	push	r24
     812:	1f 93       	push	r17
     814:	0f 93       	push	r16
     816:	df 93       	push	r29
     818:	cf 93       	push	r28
     81a:	76 d1       	rcall	.+748    	; 0xb08 <fprintf>
		fprintf(&mystdout,"%02x%02x\n",stackpointer_address_block[1],stackpointer_address_block[0]);
     81c:	e2 eb       	ldi	r30, 0xB2	; 178
     81e:	f1 e0       	ldi	r31, 0x01	; 1
     820:	90 81       	ld	r25, Z
     822:	81 81       	ldd	r24, Z+1	; 0x01
     824:	1f 92       	push	r1
     826:	9f 93       	push	r25
     828:	1f 92       	push	r1
     82a:	8f 93       	push	r24
     82c:	1f 93       	push	r17
     82e:	0f 93       	push	r16
     830:	df 93       	push	r29
     832:	cf 93       	push	r28
     834:	69 d1       	rcall	.+722    	; 0xb08 <fprintf>
     836:	8d b7       	in	r24, 0x3d	; 61
     838:	9e b7       	in	r25, 0x3e	; 62
     83a:	48 96       	adiw	r24, 0x18	; 24
     83c:	0f b6       	in	r0, 0x3f	; 63
     83e:	f8 94       	cli
     840:	9e bf       	out	0x3e, r25	; 62
     842:	0f be       	out	0x3f, r0	; 63
     844:	8d bf       	out	0x3d, r24	; 61
	}
}
     846:	ff 91       	pop	r31
     848:	ef 91       	pop	r30
     84a:	df 91       	pop	r29
     84c:	cf 91       	pop	r28
     84e:	bf 91       	pop	r27
     850:	af 91       	pop	r26
     852:	9f 91       	pop	r25
     854:	8f 91       	pop	r24
     856:	7f 91       	pop	r23
     858:	6f 91       	pop	r22
     85a:	5f 91       	pop	r21
     85c:	4f 91       	pop	r20
     85e:	3f 91       	pop	r19
     860:	2f 91       	pop	r18
     862:	1f 91       	pop	r17
     864:	0f 91       	pop	r16
     866:	0f 90       	pop	r0
     868:	0b be       	out	0x3b, r0	; 59
     86a:	0f 90       	pop	r0
     86c:	0f be       	out	0x3f, r0	; 63
     86e:	0f 90       	pop	r0
     870:	1f 90       	pop	r1
     872:	18 95       	reti

00000874 <__subsf3>:
     874:	50 58       	subi	r21, 0x80	; 128

00000876 <__addsf3>:
     876:	bb 27       	eor	r27, r27
     878:	aa 27       	eor	r26, r26
     87a:	0e d0       	rcall	.+28     	; 0x898 <__addsf3x>
     87c:	a8 c0       	rjmp	.+336    	; 0x9ce <__fp_round>
     87e:	99 d0       	rcall	.+306    	; 0x9b2 <__fp_pscA>
     880:	30 f0       	brcs	.+12     	; 0x88e <__addsf3+0x18>
     882:	9e d0       	rcall	.+316    	; 0x9c0 <__fp_pscB>
     884:	20 f0       	brcs	.+8      	; 0x88e <__addsf3+0x18>
     886:	31 f4       	brne	.+12     	; 0x894 <__addsf3+0x1e>
     888:	9f 3f       	cpi	r25, 0xFF	; 255
     88a:	11 f4       	brne	.+4      	; 0x890 <__addsf3+0x1a>
     88c:	1e f4       	brtc	.+6      	; 0x894 <__addsf3+0x1e>
     88e:	8e c0       	rjmp	.+284    	; 0x9ac <__fp_nan>
     890:	0e f4       	brtc	.+2      	; 0x894 <__addsf3+0x1e>
     892:	e0 95       	com	r30
     894:	e7 fb       	bst	r30, 7
     896:	84 c0       	rjmp	.+264    	; 0x9a0 <__fp_inf>

00000898 <__addsf3x>:
     898:	e9 2f       	mov	r30, r25
     89a:	aa d0       	rcall	.+340    	; 0x9f0 <__fp_split3>
     89c:	80 f3       	brcs	.-32     	; 0x87e <__addsf3+0x8>
     89e:	ba 17       	cp	r27, r26
     8a0:	62 07       	cpc	r22, r18
     8a2:	73 07       	cpc	r23, r19
     8a4:	84 07       	cpc	r24, r20
     8a6:	95 07       	cpc	r25, r21
     8a8:	18 f0       	brcs	.+6      	; 0x8b0 <__addsf3x+0x18>
     8aa:	71 f4       	brne	.+28     	; 0x8c8 <__addsf3x+0x30>
     8ac:	9e f5       	brtc	.+102    	; 0x914 <__addsf3x+0x7c>
     8ae:	c2 c0       	rjmp	.+388    	; 0xa34 <__fp_zero>
     8b0:	0e f4       	brtc	.+2      	; 0x8b4 <__addsf3x+0x1c>
     8b2:	e0 95       	com	r30
     8b4:	0b 2e       	mov	r0, r27
     8b6:	ba 2f       	mov	r27, r26
     8b8:	a0 2d       	mov	r26, r0
     8ba:	0b 01       	movw	r0, r22
     8bc:	b9 01       	movw	r22, r18
     8be:	90 01       	movw	r18, r0
     8c0:	0c 01       	movw	r0, r24
     8c2:	ca 01       	movw	r24, r20
     8c4:	a0 01       	movw	r20, r0
     8c6:	11 24       	eor	r1, r1
     8c8:	ff 27       	eor	r31, r31
     8ca:	59 1b       	sub	r21, r25
     8cc:	99 f0       	breq	.+38     	; 0x8f4 <__addsf3x+0x5c>
     8ce:	59 3f       	cpi	r21, 0xF9	; 249
     8d0:	50 f4       	brcc	.+20     	; 0x8e6 <__addsf3x+0x4e>
     8d2:	50 3e       	cpi	r21, 0xE0	; 224
     8d4:	68 f1       	brcs	.+90     	; 0x930 <__addsf3x+0x98>
     8d6:	1a 16       	cp	r1, r26
     8d8:	f0 40       	sbci	r31, 0x00	; 0
     8da:	a2 2f       	mov	r26, r18
     8dc:	23 2f       	mov	r18, r19
     8de:	34 2f       	mov	r19, r20
     8e0:	44 27       	eor	r20, r20
     8e2:	58 5f       	subi	r21, 0xF8	; 248
     8e4:	f3 cf       	rjmp	.-26     	; 0x8cc <__addsf3x+0x34>
     8e6:	46 95       	lsr	r20
     8e8:	37 95       	ror	r19
     8ea:	27 95       	ror	r18
     8ec:	a7 95       	ror	r26
     8ee:	f0 40       	sbci	r31, 0x00	; 0
     8f0:	53 95       	inc	r21
     8f2:	c9 f7       	brne	.-14     	; 0x8e6 <__addsf3x+0x4e>
     8f4:	7e f4       	brtc	.+30     	; 0x914 <__addsf3x+0x7c>
     8f6:	1f 16       	cp	r1, r31
     8f8:	ba 0b       	sbc	r27, r26
     8fa:	62 0b       	sbc	r22, r18
     8fc:	73 0b       	sbc	r23, r19
     8fe:	84 0b       	sbc	r24, r20
     900:	ba f0       	brmi	.+46     	; 0x930 <__addsf3x+0x98>
     902:	91 50       	subi	r25, 0x01	; 1
     904:	a1 f0       	breq	.+40     	; 0x92e <__addsf3x+0x96>
     906:	ff 0f       	add	r31, r31
     908:	bb 1f       	adc	r27, r27
     90a:	66 1f       	adc	r22, r22
     90c:	77 1f       	adc	r23, r23
     90e:	88 1f       	adc	r24, r24
     910:	c2 f7       	brpl	.-16     	; 0x902 <__addsf3x+0x6a>
     912:	0e c0       	rjmp	.+28     	; 0x930 <__addsf3x+0x98>
     914:	ba 0f       	add	r27, r26
     916:	62 1f       	adc	r22, r18
     918:	73 1f       	adc	r23, r19
     91a:	84 1f       	adc	r24, r20
     91c:	48 f4       	brcc	.+18     	; 0x930 <__addsf3x+0x98>
     91e:	87 95       	ror	r24
     920:	77 95       	ror	r23
     922:	67 95       	ror	r22
     924:	b7 95       	ror	r27
     926:	f7 95       	ror	r31
     928:	9e 3f       	cpi	r25, 0xFE	; 254
     92a:	08 f0       	brcs	.+2      	; 0x92e <__addsf3x+0x96>
     92c:	b3 cf       	rjmp	.-154    	; 0x894 <__addsf3+0x1e>
     92e:	93 95       	inc	r25
     930:	88 0f       	add	r24, r24
     932:	08 f0       	brcs	.+2      	; 0x936 <__addsf3x+0x9e>
     934:	99 27       	eor	r25, r25
     936:	ee 0f       	add	r30, r30
     938:	97 95       	ror	r25
     93a:	87 95       	ror	r24
     93c:	08 95       	ret

0000093e <__fixsfsi>:
     93e:	04 d0       	rcall	.+8      	; 0x948 <__fixunssfsi>
     940:	68 94       	set
     942:	b1 11       	cpse	r27, r1
     944:	78 c0       	rjmp	.+240    	; 0xa36 <__fp_szero>
     946:	08 95       	ret

00000948 <__fixunssfsi>:
     948:	5b d0       	rcall	.+182    	; 0xa00 <__fp_splitA>
     94a:	88 f0       	brcs	.+34     	; 0x96e <__fixunssfsi+0x26>
     94c:	9f 57       	subi	r25, 0x7F	; 127
     94e:	90 f0       	brcs	.+36     	; 0x974 <__fixunssfsi+0x2c>
     950:	b9 2f       	mov	r27, r25
     952:	99 27       	eor	r25, r25
     954:	b7 51       	subi	r27, 0x17	; 23
     956:	a0 f0       	brcs	.+40     	; 0x980 <__fixunssfsi+0x38>
     958:	d1 f0       	breq	.+52     	; 0x98e <__fixunssfsi+0x46>
     95a:	66 0f       	add	r22, r22
     95c:	77 1f       	adc	r23, r23
     95e:	88 1f       	adc	r24, r24
     960:	99 1f       	adc	r25, r25
     962:	1a f0       	brmi	.+6      	; 0x96a <__fixunssfsi+0x22>
     964:	ba 95       	dec	r27
     966:	c9 f7       	brne	.-14     	; 0x95a <__fixunssfsi+0x12>
     968:	12 c0       	rjmp	.+36     	; 0x98e <__fixunssfsi+0x46>
     96a:	b1 30       	cpi	r27, 0x01	; 1
     96c:	81 f0       	breq	.+32     	; 0x98e <__fixunssfsi+0x46>
     96e:	62 d0       	rcall	.+196    	; 0xa34 <__fp_zero>
     970:	b1 e0       	ldi	r27, 0x01	; 1
     972:	08 95       	ret
     974:	5f c0       	rjmp	.+190    	; 0xa34 <__fp_zero>
     976:	67 2f       	mov	r22, r23
     978:	78 2f       	mov	r23, r24
     97a:	88 27       	eor	r24, r24
     97c:	b8 5f       	subi	r27, 0xF8	; 248
     97e:	39 f0       	breq	.+14     	; 0x98e <__fixunssfsi+0x46>
     980:	b9 3f       	cpi	r27, 0xF9	; 249
     982:	cc f3       	brlt	.-14     	; 0x976 <__fixunssfsi+0x2e>
     984:	86 95       	lsr	r24
     986:	77 95       	ror	r23
     988:	67 95       	ror	r22
     98a:	b3 95       	inc	r27
     98c:	d9 f7       	brne	.-10     	; 0x984 <__fixunssfsi+0x3c>
     98e:	3e f4       	brtc	.+14     	; 0x99e <__fixunssfsi+0x56>
     990:	90 95       	com	r25
     992:	80 95       	com	r24
     994:	70 95       	com	r23
     996:	61 95       	neg	r22
     998:	7f 4f       	sbci	r23, 0xFF	; 255
     99a:	8f 4f       	sbci	r24, 0xFF	; 255
     99c:	9f 4f       	sbci	r25, 0xFF	; 255
     99e:	08 95       	ret

000009a0 <__fp_inf>:
     9a0:	97 f9       	bld	r25, 7
     9a2:	9f 67       	ori	r25, 0x7F	; 127
     9a4:	80 e8       	ldi	r24, 0x80	; 128
     9a6:	70 e0       	ldi	r23, 0x00	; 0
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	08 95       	ret

000009ac <__fp_nan>:
     9ac:	9f ef       	ldi	r25, 0xFF	; 255
     9ae:	80 ec       	ldi	r24, 0xC0	; 192
     9b0:	08 95       	ret

000009b2 <__fp_pscA>:
     9b2:	00 24       	eor	r0, r0
     9b4:	0a 94       	dec	r0
     9b6:	16 16       	cp	r1, r22
     9b8:	17 06       	cpc	r1, r23
     9ba:	18 06       	cpc	r1, r24
     9bc:	09 06       	cpc	r0, r25
     9be:	08 95       	ret

000009c0 <__fp_pscB>:
     9c0:	00 24       	eor	r0, r0
     9c2:	0a 94       	dec	r0
     9c4:	12 16       	cp	r1, r18
     9c6:	13 06       	cpc	r1, r19
     9c8:	14 06       	cpc	r1, r20
     9ca:	05 06       	cpc	r0, r21
     9cc:	08 95       	ret

000009ce <__fp_round>:
     9ce:	09 2e       	mov	r0, r25
     9d0:	03 94       	inc	r0
     9d2:	00 0c       	add	r0, r0
     9d4:	11 f4       	brne	.+4      	; 0x9da <__fp_round+0xc>
     9d6:	88 23       	and	r24, r24
     9d8:	52 f0       	brmi	.+20     	; 0x9ee <__fp_round+0x20>
     9da:	bb 0f       	add	r27, r27
     9dc:	40 f4       	brcc	.+16     	; 0x9ee <__fp_round+0x20>
     9de:	bf 2b       	or	r27, r31
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__fp_round+0x18>
     9e2:	60 ff       	sbrs	r22, 0
     9e4:	04 c0       	rjmp	.+8      	; 0x9ee <__fp_round+0x20>
     9e6:	6f 5f       	subi	r22, 0xFF	; 255
     9e8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ea:	8f 4f       	sbci	r24, 0xFF	; 255
     9ec:	9f 4f       	sbci	r25, 0xFF	; 255
     9ee:	08 95       	ret

000009f0 <__fp_split3>:
     9f0:	57 fd       	sbrc	r21, 7
     9f2:	90 58       	subi	r25, 0x80	; 128
     9f4:	44 0f       	add	r20, r20
     9f6:	55 1f       	adc	r21, r21
     9f8:	59 f0       	breq	.+22     	; 0xa10 <__fp_splitA+0x10>
     9fa:	5f 3f       	cpi	r21, 0xFF	; 255
     9fc:	71 f0       	breq	.+28     	; 0xa1a <__fp_splitA+0x1a>
     9fe:	47 95       	ror	r20

00000a00 <__fp_splitA>:
     a00:	88 0f       	add	r24, r24
     a02:	97 fb       	bst	r25, 7
     a04:	99 1f       	adc	r25, r25
     a06:	61 f0       	breq	.+24     	; 0xa20 <__fp_splitA+0x20>
     a08:	9f 3f       	cpi	r25, 0xFF	; 255
     a0a:	79 f0       	breq	.+30     	; 0xa2a <__fp_splitA+0x2a>
     a0c:	87 95       	ror	r24
     a0e:	08 95       	ret
     a10:	12 16       	cp	r1, r18
     a12:	13 06       	cpc	r1, r19
     a14:	14 06       	cpc	r1, r20
     a16:	55 1f       	adc	r21, r21
     a18:	f2 cf       	rjmp	.-28     	; 0x9fe <__fp_split3+0xe>
     a1a:	46 95       	lsr	r20
     a1c:	f1 df       	rcall	.-30     	; 0xa00 <__fp_splitA>
     a1e:	08 c0       	rjmp	.+16     	; 0xa30 <__fp_splitA+0x30>
     a20:	16 16       	cp	r1, r22
     a22:	17 06       	cpc	r1, r23
     a24:	18 06       	cpc	r1, r24
     a26:	99 1f       	adc	r25, r25
     a28:	f1 cf       	rjmp	.-30     	; 0xa0c <__fp_splitA+0xc>
     a2a:	86 95       	lsr	r24
     a2c:	71 05       	cpc	r23, r1
     a2e:	61 05       	cpc	r22, r1
     a30:	08 94       	sec
     a32:	08 95       	ret

00000a34 <__fp_zero>:
     a34:	e8 94       	clt

00000a36 <__fp_szero>:
     a36:	bb 27       	eor	r27, r27
     a38:	66 27       	eor	r22, r22
     a3a:	77 27       	eor	r23, r23
     a3c:	cb 01       	movw	r24, r22
     a3e:	97 f9       	bld	r25, 7
     a40:	08 95       	ret

00000a42 <__mulsf3>:
     a42:	0b d0       	rcall	.+22     	; 0xa5a <__mulsf3x>
     a44:	c4 cf       	rjmp	.-120    	; 0x9ce <__fp_round>
     a46:	b5 df       	rcall	.-150    	; 0x9b2 <__fp_pscA>
     a48:	28 f0       	brcs	.+10     	; 0xa54 <__mulsf3+0x12>
     a4a:	ba df       	rcall	.-140    	; 0x9c0 <__fp_pscB>
     a4c:	18 f0       	brcs	.+6      	; 0xa54 <__mulsf3+0x12>
     a4e:	95 23       	and	r25, r21
     a50:	09 f0       	breq	.+2      	; 0xa54 <__mulsf3+0x12>
     a52:	a6 cf       	rjmp	.-180    	; 0x9a0 <__fp_inf>
     a54:	ab cf       	rjmp	.-170    	; 0x9ac <__fp_nan>
     a56:	11 24       	eor	r1, r1
     a58:	ee cf       	rjmp	.-36     	; 0xa36 <__fp_szero>

00000a5a <__mulsf3x>:
     a5a:	ca df       	rcall	.-108    	; 0x9f0 <__fp_split3>
     a5c:	a0 f3       	brcs	.-24     	; 0xa46 <__mulsf3+0x4>

00000a5e <__mulsf3_pse>:
     a5e:	95 9f       	mul	r25, r21
     a60:	d1 f3       	breq	.-12     	; 0xa56 <__mulsf3+0x14>
     a62:	95 0f       	add	r25, r21
     a64:	50 e0       	ldi	r21, 0x00	; 0
     a66:	55 1f       	adc	r21, r21
     a68:	62 9f       	mul	r22, r18
     a6a:	f0 01       	movw	r30, r0
     a6c:	72 9f       	mul	r23, r18
     a6e:	bb 27       	eor	r27, r27
     a70:	f0 0d       	add	r31, r0
     a72:	b1 1d       	adc	r27, r1
     a74:	63 9f       	mul	r22, r19
     a76:	aa 27       	eor	r26, r26
     a78:	f0 0d       	add	r31, r0
     a7a:	b1 1d       	adc	r27, r1
     a7c:	aa 1f       	adc	r26, r26
     a7e:	64 9f       	mul	r22, r20
     a80:	66 27       	eor	r22, r22
     a82:	b0 0d       	add	r27, r0
     a84:	a1 1d       	adc	r26, r1
     a86:	66 1f       	adc	r22, r22
     a88:	82 9f       	mul	r24, r18
     a8a:	22 27       	eor	r18, r18
     a8c:	b0 0d       	add	r27, r0
     a8e:	a1 1d       	adc	r26, r1
     a90:	62 1f       	adc	r22, r18
     a92:	73 9f       	mul	r23, r19
     a94:	b0 0d       	add	r27, r0
     a96:	a1 1d       	adc	r26, r1
     a98:	62 1f       	adc	r22, r18
     a9a:	83 9f       	mul	r24, r19
     a9c:	a0 0d       	add	r26, r0
     a9e:	61 1d       	adc	r22, r1
     aa0:	22 1f       	adc	r18, r18
     aa2:	74 9f       	mul	r23, r20
     aa4:	33 27       	eor	r19, r19
     aa6:	a0 0d       	add	r26, r0
     aa8:	61 1d       	adc	r22, r1
     aaa:	23 1f       	adc	r18, r19
     aac:	84 9f       	mul	r24, r20
     aae:	60 0d       	add	r22, r0
     ab0:	21 1d       	adc	r18, r1
     ab2:	82 2f       	mov	r24, r18
     ab4:	76 2f       	mov	r23, r22
     ab6:	6a 2f       	mov	r22, r26
     ab8:	11 24       	eor	r1, r1
     aba:	9f 57       	subi	r25, 0x7F	; 127
     abc:	50 40       	sbci	r21, 0x00	; 0
     abe:	8a f0       	brmi	.+34     	; 0xae2 <__mulsf3_pse+0x84>
     ac0:	e1 f0       	breq	.+56     	; 0xafa <__mulsf3_pse+0x9c>
     ac2:	88 23       	and	r24, r24
     ac4:	4a f0       	brmi	.+18     	; 0xad8 <__mulsf3_pse+0x7a>
     ac6:	ee 0f       	add	r30, r30
     ac8:	ff 1f       	adc	r31, r31
     aca:	bb 1f       	adc	r27, r27
     acc:	66 1f       	adc	r22, r22
     ace:	77 1f       	adc	r23, r23
     ad0:	88 1f       	adc	r24, r24
     ad2:	91 50       	subi	r25, 0x01	; 1
     ad4:	50 40       	sbci	r21, 0x00	; 0
     ad6:	a9 f7       	brne	.-22     	; 0xac2 <__mulsf3_pse+0x64>
     ad8:	9e 3f       	cpi	r25, 0xFE	; 254
     ada:	51 05       	cpc	r21, r1
     adc:	70 f0       	brcs	.+28     	; 0xafa <__mulsf3_pse+0x9c>
     ade:	60 cf       	rjmp	.-320    	; 0x9a0 <__fp_inf>
     ae0:	aa cf       	rjmp	.-172    	; 0xa36 <__fp_szero>
     ae2:	5f 3f       	cpi	r21, 0xFF	; 255
     ae4:	ec f3       	brlt	.-6      	; 0xae0 <__mulsf3_pse+0x82>
     ae6:	98 3e       	cpi	r25, 0xE8	; 232
     ae8:	dc f3       	brlt	.-10     	; 0xae0 <__mulsf3_pse+0x82>
     aea:	86 95       	lsr	r24
     aec:	77 95       	ror	r23
     aee:	67 95       	ror	r22
     af0:	b7 95       	ror	r27
     af2:	f7 95       	ror	r31
     af4:	e7 95       	ror	r30
     af6:	9f 5f       	subi	r25, 0xFF	; 255
     af8:	c1 f7       	brne	.-16     	; 0xaea <__mulsf3_pse+0x8c>
     afa:	fe 2b       	or	r31, r30
     afc:	88 0f       	add	r24, r24
     afe:	91 1d       	adc	r25, r1
     b00:	96 95       	lsr	r25
     b02:	87 95       	ror	r24
     b04:	97 f9       	bld	r25, 7
     b06:	08 95       	ret

00000b08 <fprintf>:
     b08:	cf 93       	push	r28
     b0a:	df 93       	push	r29
     b0c:	cd b7       	in	r28, 0x3d	; 61
     b0e:	de b7       	in	r29, 0x3e	; 62
     b10:	ae 01       	movw	r20, r28
     b12:	47 5f       	subi	r20, 0xF7	; 247
     b14:	5f 4f       	sbci	r21, 0xFF	; 255
     b16:	6f 81       	ldd	r22, Y+7	; 0x07
     b18:	78 85       	ldd	r23, Y+8	; 0x08
     b1a:	8d 81       	ldd	r24, Y+5	; 0x05
     b1c:	9e 81       	ldd	r25, Y+6	; 0x06
     b1e:	03 d0       	rcall	.+6      	; 0xb26 <vfprintf>
     b20:	df 91       	pop	r29
     b22:	cf 91       	pop	r28
     b24:	08 95       	ret

00000b26 <vfprintf>:
     b26:	2f 92       	push	r2
     b28:	3f 92       	push	r3
     b2a:	4f 92       	push	r4
     b2c:	5f 92       	push	r5
     b2e:	6f 92       	push	r6
     b30:	7f 92       	push	r7
     b32:	8f 92       	push	r8
     b34:	9f 92       	push	r9
     b36:	af 92       	push	r10
     b38:	bf 92       	push	r11
     b3a:	cf 92       	push	r12
     b3c:	df 92       	push	r13
     b3e:	ef 92       	push	r14
     b40:	ff 92       	push	r15
     b42:	0f 93       	push	r16
     b44:	1f 93       	push	r17
     b46:	cf 93       	push	r28
     b48:	df 93       	push	r29
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
     b4e:	2c 97       	sbiw	r28, 0x0c	; 12
     b50:	0f b6       	in	r0, 0x3f	; 63
     b52:	f8 94       	cli
     b54:	de bf       	out	0x3e, r29	; 62
     b56:	0f be       	out	0x3f, r0	; 63
     b58:	cd bf       	out	0x3d, r28	; 61
     b5a:	7c 01       	movw	r14, r24
     b5c:	6b 01       	movw	r12, r22
     b5e:	8a 01       	movw	r16, r20
     b60:	fc 01       	movw	r30, r24
     b62:	17 82       	std	Z+7, r1	; 0x07
     b64:	16 82       	std	Z+6, r1	; 0x06
     b66:	83 81       	ldd	r24, Z+3	; 0x03
     b68:	81 ff       	sbrs	r24, 1
     b6a:	b0 c1       	rjmp	.+864    	; 0xecc <vfprintf+0x3a6>
     b6c:	ce 01       	movw	r24, r28
     b6e:	01 96       	adiw	r24, 0x01	; 1
     b70:	4c 01       	movw	r8, r24
     b72:	f7 01       	movw	r30, r14
     b74:	93 81       	ldd	r25, Z+3	; 0x03
     b76:	f6 01       	movw	r30, r12
     b78:	93 fd       	sbrc	r25, 3
     b7a:	85 91       	lpm	r24, Z+
     b7c:	93 ff       	sbrs	r25, 3
     b7e:	81 91       	ld	r24, Z+
     b80:	6f 01       	movw	r12, r30
     b82:	88 23       	and	r24, r24
     b84:	09 f4       	brne	.+2      	; 0xb88 <vfprintf+0x62>
     b86:	9e c1       	rjmp	.+828    	; 0xec4 <vfprintf+0x39e>
     b88:	85 32       	cpi	r24, 0x25	; 37
     b8a:	39 f4       	brne	.+14     	; 0xb9a <vfprintf+0x74>
     b8c:	93 fd       	sbrc	r25, 3
     b8e:	85 91       	lpm	r24, Z+
     b90:	93 ff       	sbrs	r25, 3
     b92:	81 91       	ld	r24, Z+
     b94:	6f 01       	movw	r12, r30
     b96:	85 32       	cpi	r24, 0x25	; 37
     b98:	21 f4       	brne	.+8      	; 0xba2 <vfprintf+0x7c>
     b9a:	b7 01       	movw	r22, r14
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	c7 d1       	rcall	.+910    	; 0xf2e <fputc>
     ba0:	e8 cf       	rjmp	.-48     	; 0xb72 <vfprintf+0x4c>
     ba2:	51 2c       	mov	r5, r1
     ba4:	31 2c       	mov	r3, r1
     ba6:	20 e0       	ldi	r18, 0x00	; 0
     ba8:	20 32       	cpi	r18, 0x20	; 32
     baa:	a0 f4       	brcc	.+40     	; 0xbd4 <vfprintf+0xae>
     bac:	8b 32       	cpi	r24, 0x2B	; 43
     bae:	69 f0       	breq	.+26     	; 0xbca <vfprintf+0xa4>
     bb0:	30 f4       	brcc	.+12     	; 0xbbe <vfprintf+0x98>
     bb2:	80 32       	cpi	r24, 0x20	; 32
     bb4:	59 f0       	breq	.+22     	; 0xbcc <vfprintf+0xa6>
     bb6:	83 32       	cpi	r24, 0x23	; 35
     bb8:	69 f4       	brne	.+26     	; 0xbd4 <vfprintf+0xae>
     bba:	20 61       	ori	r18, 0x10	; 16
     bbc:	2c c0       	rjmp	.+88     	; 0xc16 <vfprintf+0xf0>
     bbe:	8d 32       	cpi	r24, 0x2D	; 45
     bc0:	39 f0       	breq	.+14     	; 0xbd0 <vfprintf+0xaa>
     bc2:	80 33       	cpi	r24, 0x30	; 48
     bc4:	39 f4       	brne	.+14     	; 0xbd4 <vfprintf+0xae>
     bc6:	21 60       	ori	r18, 0x01	; 1
     bc8:	26 c0       	rjmp	.+76     	; 0xc16 <vfprintf+0xf0>
     bca:	22 60       	ori	r18, 0x02	; 2
     bcc:	24 60       	ori	r18, 0x04	; 4
     bce:	23 c0       	rjmp	.+70     	; 0xc16 <vfprintf+0xf0>
     bd0:	28 60       	ori	r18, 0x08	; 8
     bd2:	21 c0       	rjmp	.+66     	; 0xc16 <vfprintf+0xf0>
     bd4:	27 fd       	sbrc	r18, 7
     bd6:	27 c0       	rjmp	.+78     	; 0xc26 <vfprintf+0x100>
     bd8:	30 ed       	ldi	r19, 0xD0	; 208
     bda:	38 0f       	add	r19, r24
     bdc:	3a 30       	cpi	r19, 0x0A	; 10
     bde:	78 f4       	brcc	.+30     	; 0xbfe <vfprintf+0xd8>
     be0:	26 ff       	sbrs	r18, 6
     be2:	06 c0       	rjmp	.+12     	; 0xbf0 <vfprintf+0xca>
     be4:	fa e0       	ldi	r31, 0x0A	; 10
     be6:	5f 9e       	mul	r5, r31
     be8:	30 0d       	add	r19, r0
     bea:	11 24       	eor	r1, r1
     bec:	53 2e       	mov	r5, r19
     bee:	13 c0       	rjmp	.+38     	; 0xc16 <vfprintf+0xf0>
     bf0:	8a e0       	ldi	r24, 0x0A	; 10
     bf2:	38 9e       	mul	r3, r24
     bf4:	30 0d       	add	r19, r0
     bf6:	11 24       	eor	r1, r1
     bf8:	33 2e       	mov	r3, r19
     bfa:	20 62       	ori	r18, 0x20	; 32
     bfc:	0c c0       	rjmp	.+24     	; 0xc16 <vfprintf+0xf0>
     bfe:	8e 32       	cpi	r24, 0x2E	; 46
     c00:	21 f4       	brne	.+8      	; 0xc0a <vfprintf+0xe4>
     c02:	26 fd       	sbrc	r18, 6
     c04:	5f c1       	rjmp	.+702    	; 0xec4 <vfprintf+0x39e>
     c06:	20 64       	ori	r18, 0x40	; 64
     c08:	06 c0       	rjmp	.+12     	; 0xc16 <vfprintf+0xf0>
     c0a:	8c 36       	cpi	r24, 0x6C	; 108
     c0c:	11 f4       	brne	.+4      	; 0xc12 <vfprintf+0xec>
     c0e:	20 68       	ori	r18, 0x80	; 128
     c10:	02 c0       	rjmp	.+4      	; 0xc16 <vfprintf+0xf0>
     c12:	88 36       	cpi	r24, 0x68	; 104
     c14:	41 f4       	brne	.+16     	; 0xc26 <vfprintf+0x100>
     c16:	f6 01       	movw	r30, r12
     c18:	93 fd       	sbrc	r25, 3
     c1a:	85 91       	lpm	r24, Z+
     c1c:	93 ff       	sbrs	r25, 3
     c1e:	81 91       	ld	r24, Z+
     c20:	6f 01       	movw	r12, r30
     c22:	81 11       	cpse	r24, r1
     c24:	c1 cf       	rjmp	.-126    	; 0xba8 <vfprintf+0x82>
     c26:	98 2f       	mov	r25, r24
     c28:	9f 7d       	andi	r25, 0xDF	; 223
     c2a:	95 54       	subi	r25, 0x45	; 69
     c2c:	93 30       	cpi	r25, 0x03	; 3
     c2e:	28 f4       	brcc	.+10     	; 0xc3a <vfprintf+0x114>
     c30:	0c 5f       	subi	r16, 0xFC	; 252
     c32:	1f 4f       	sbci	r17, 0xFF	; 255
     c34:	ff e3       	ldi	r31, 0x3F	; 63
     c36:	f9 83       	std	Y+1, r31	; 0x01
     c38:	0d c0       	rjmp	.+26     	; 0xc54 <vfprintf+0x12e>
     c3a:	83 36       	cpi	r24, 0x63	; 99
     c3c:	31 f0       	breq	.+12     	; 0xc4a <vfprintf+0x124>
     c3e:	83 37       	cpi	r24, 0x73	; 115
     c40:	71 f0       	breq	.+28     	; 0xc5e <vfprintf+0x138>
     c42:	83 35       	cpi	r24, 0x53	; 83
     c44:	09 f0       	breq	.+2      	; 0xc48 <vfprintf+0x122>
     c46:	57 c0       	rjmp	.+174    	; 0xcf6 <vfprintf+0x1d0>
     c48:	21 c0       	rjmp	.+66     	; 0xc8c <vfprintf+0x166>
     c4a:	f8 01       	movw	r30, r16
     c4c:	80 81       	ld	r24, Z
     c4e:	89 83       	std	Y+1, r24	; 0x01
     c50:	0e 5f       	subi	r16, 0xFE	; 254
     c52:	1f 4f       	sbci	r17, 0xFF	; 255
     c54:	44 24       	eor	r4, r4
     c56:	43 94       	inc	r4
     c58:	51 2c       	mov	r5, r1
     c5a:	54 01       	movw	r10, r8
     c5c:	14 c0       	rjmp	.+40     	; 0xc86 <vfprintf+0x160>
     c5e:	38 01       	movw	r6, r16
     c60:	f2 e0       	ldi	r31, 0x02	; 2
     c62:	6f 0e       	add	r6, r31
     c64:	71 1c       	adc	r7, r1
     c66:	f8 01       	movw	r30, r16
     c68:	a0 80       	ld	r10, Z
     c6a:	b1 80       	ldd	r11, Z+1	; 0x01
     c6c:	26 ff       	sbrs	r18, 6
     c6e:	03 c0       	rjmp	.+6      	; 0xc76 <vfprintf+0x150>
     c70:	65 2d       	mov	r22, r5
     c72:	70 e0       	ldi	r23, 0x00	; 0
     c74:	02 c0       	rjmp	.+4      	; 0xc7a <vfprintf+0x154>
     c76:	6f ef       	ldi	r22, 0xFF	; 255
     c78:	7f ef       	ldi	r23, 0xFF	; 255
     c7a:	c5 01       	movw	r24, r10
     c7c:	2c 87       	std	Y+12, r18	; 0x0c
     c7e:	4c d1       	rcall	.+664    	; 0xf18 <strnlen>
     c80:	2c 01       	movw	r4, r24
     c82:	83 01       	movw	r16, r6
     c84:	2c 85       	ldd	r18, Y+12	; 0x0c
     c86:	2f 77       	andi	r18, 0x7F	; 127
     c88:	22 2e       	mov	r2, r18
     c8a:	16 c0       	rjmp	.+44     	; 0xcb8 <vfprintf+0x192>
     c8c:	38 01       	movw	r6, r16
     c8e:	f2 e0       	ldi	r31, 0x02	; 2
     c90:	6f 0e       	add	r6, r31
     c92:	71 1c       	adc	r7, r1
     c94:	f8 01       	movw	r30, r16
     c96:	a0 80       	ld	r10, Z
     c98:	b1 80       	ldd	r11, Z+1	; 0x01
     c9a:	26 ff       	sbrs	r18, 6
     c9c:	03 c0       	rjmp	.+6      	; 0xca4 <vfprintf+0x17e>
     c9e:	65 2d       	mov	r22, r5
     ca0:	70 e0       	ldi	r23, 0x00	; 0
     ca2:	02 c0       	rjmp	.+4      	; 0xca8 <vfprintf+0x182>
     ca4:	6f ef       	ldi	r22, 0xFF	; 255
     ca6:	7f ef       	ldi	r23, 0xFF	; 255
     ca8:	c5 01       	movw	r24, r10
     caa:	2c 87       	std	Y+12, r18	; 0x0c
     cac:	2a d1       	rcall	.+596    	; 0xf02 <strnlen_P>
     cae:	2c 01       	movw	r4, r24
     cb0:	2c 85       	ldd	r18, Y+12	; 0x0c
     cb2:	20 68       	ori	r18, 0x80	; 128
     cb4:	22 2e       	mov	r2, r18
     cb6:	83 01       	movw	r16, r6
     cb8:	23 fc       	sbrc	r2, 3
     cba:	19 c0       	rjmp	.+50     	; 0xcee <vfprintf+0x1c8>
     cbc:	83 2d       	mov	r24, r3
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	48 16       	cp	r4, r24
     cc2:	59 06       	cpc	r5, r25
     cc4:	a0 f4       	brcc	.+40     	; 0xcee <vfprintf+0x1c8>
     cc6:	b7 01       	movw	r22, r14
     cc8:	80 e2       	ldi	r24, 0x20	; 32
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	30 d1       	rcall	.+608    	; 0xf2e <fputc>
     cce:	3a 94       	dec	r3
     cd0:	f5 cf       	rjmp	.-22     	; 0xcbc <vfprintf+0x196>
     cd2:	f5 01       	movw	r30, r10
     cd4:	27 fc       	sbrc	r2, 7
     cd6:	85 91       	lpm	r24, Z+
     cd8:	27 fe       	sbrs	r2, 7
     cda:	81 91       	ld	r24, Z+
     cdc:	5f 01       	movw	r10, r30
     cde:	b7 01       	movw	r22, r14
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	25 d1       	rcall	.+586    	; 0xf2e <fputc>
     ce4:	31 10       	cpse	r3, r1
     ce6:	3a 94       	dec	r3
     ce8:	f1 e0       	ldi	r31, 0x01	; 1
     cea:	4f 1a       	sub	r4, r31
     cec:	51 08       	sbc	r5, r1
     cee:	41 14       	cp	r4, r1
     cf0:	51 04       	cpc	r5, r1
     cf2:	79 f7       	brne	.-34     	; 0xcd2 <vfprintf+0x1ac>
     cf4:	de c0       	rjmp	.+444    	; 0xeb2 <vfprintf+0x38c>
     cf6:	84 36       	cpi	r24, 0x64	; 100
     cf8:	11 f0       	breq	.+4      	; 0xcfe <vfprintf+0x1d8>
     cfa:	89 36       	cpi	r24, 0x69	; 105
     cfc:	31 f5       	brne	.+76     	; 0xd4a <vfprintf+0x224>
     cfe:	f8 01       	movw	r30, r16
     d00:	27 ff       	sbrs	r18, 7
     d02:	07 c0       	rjmp	.+14     	; 0xd12 <vfprintf+0x1ec>
     d04:	60 81       	ld	r22, Z
     d06:	71 81       	ldd	r23, Z+1	; 0x01
     d08:	82 81       	ldd	r24, Z+2	; 0x02
     d0a:	93 81       	ldd	r25, Z+3	; 0x03
     d0c:	0c 5f       	subi	r16, 0xFC	; 252
     d0e:	1f 4f       	sbci	r17, 0xFF	; 255
     d10:	08 c0       	rjmp	.+16     	; 0xd22 <vfprintf+0x1fc>
     d12:	60 81       	ld	r22, Z
     d14:	71 81       	ldd	r23, Z+1	; 0x01
     d16:	07 2e       	mov	r0, r23
     d18:	00 0c       	add	r0, r0
     d1a:	88 0b       	sbc	r24, r24
     d1c:	99 0b       	sbc	r25, r25
     d1e:	0e 5f       	subi	r16, 0xFE	; 254
     d20:	1f 4f       	sbci	r17, 0xFF	; 255
     d22:	2f 76       	andi	r18, 0x6F	; 111
     d24:	72 2e       	mov	r7, r18
     d26:	97 ff       	sbrs	r25, 7
     d28:	09 c0       	rjmp	.+18     	; 0xd3c <vfprintf+0x216>
     d2a:	90 95       	com	r25
     d2c:	80 95       	com	r24
     d2e:	70 95       	com	r23
     d30:	61 95       	neg	r22
     d32:	7f 4f       	sbci	r23, 0xFF	; 255
     d34:	8f 4f       	sbci	r24, 0xFF	; 255
     d36:	9f 4f       	sbci	r25, 0xFF	; 255
     d38:	20 68       	ori	r18, 0x80	; 128
     d3a:	72 2e       	mov	r7, r18
     d3c:	2a e0       	ldi	r18, 0x0A	; 10
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	a4 01       	movw	r20, r8
     d42:	2d d1       	rcall	.+602    	; 0xf9e <__ultoa_invert>
     d44:	a8 2e       	mov	r10, r24
     d46:	a8 18       	sub	r10, r8
     d48:	43 c0       	rjmp	.+134    	; 0xdd0 <vfprintf+0x2aa>
     d4a:	85 37       	cpi	r24, 0x75	; 117
     d4c:	29 f4       	brne	.+10     	; 0xd58 <vfprintf+0x232>
     d4e:	2f 7e       	andi	r18, 0xEF	; 239
     d50:	b2 2e       	mov	r11, r18
     d52:	2a e0       	ldi	r18, 0x0A	; 10
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	25 c0       	rjmp	.+74     	; 0xda2 <vfprintf+0x27c>
     d58:	f2 2f       	mov	r31, r18
     d5a:	f9 7f       	andi	r31, 0xF9	; 249
     d5c:	bf 2e       	mov	r11, r31
     d5e:	8f 36       	cpi	r24, 0x6F	; 111
     d60:	c1 f0       	breq	.+48     	; 0xd92 <vfprintf+0x26c>
     d62:	18 f4       	brcc	.+6      	; 0xd6a <vfprintf+0x244>
     d64:	88 35       	cpi	r24, 0x58	; 88
     d66:	79 f0       	breq	.+30     	; 0xd86 <vfprintf+0x260>
     d68:	ad c0       	rjmp	.+346    	; 0xec4 <vfprintf+0x39e>
     d6a:	80 37       	cpi	r24, 0x70	; 112
     d6c:	19 f0       	breq	.+6      	; 0xd74 <vfprintf+0x24e>
     d6e:	88 37       	cpi	r24, 0x78	; 120
     d70:	21 f0       	breq	.+8      	; 0xd7a <vfprintf+0x254>
     d72:	a8 c0       	rjmp	.+336    	; 0xec4 <vfprintf+0x39e>
     d74:	2f 2f       	mov	r18, r31
     d76:	20 61       	ori	r18, 0x10	; 16
     d78:	b2 2e       	mov	r11, r18
     d7a:	b4 fe       	sbrs	r11, 4
     d7c:	0d c0       	rjmp	.+26     	; 0xd98 <vfprintf+0x272>
     d7e:	8b 2d       	mov	r24, r11
     d80:	84 60       	ori	r24, 0x04	; 4
     d82:	b8 2e       	mov	r11, r24
     d84:	09 c0       	rjmp	.+18     	; 0xd98 <vfprintf+0x272>
     d86:	24 ff       	sbrs	r18, 4
     d88:	0a c0       	rjmp	.+20     	; 0xd9e <vfprintf+0x278>
     d8a:	9f 2f       	mov	r25, r31
     d8c:	96 60       	ori	r25, 0x06	; 6
     d8e:	b9 2e       	mov	r11, r25
     d90:	06 c0       	rjmp	.+12     	; 0xd9e <vfprintf+0x278>
     d92:	28 e0       	ldi	r18, 0x08	; 8
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	05 c0       	rjmp	.+10     	; 0xda2 <vfprintf+0x27c>
     d98:	20 e1       	ldi	r18, 0x10	; 16
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <vfprintf+0x27c>
     d9e:	20 e1       	ldi	r18, 0x10	; 16
     da0:	32 e0       	ldi	r19, 0x02	; 2
     da2:	f8 01       	movw	r30, r16
     da4:	b7 fe       	sbrs	r11, 7
     da6:	07 c0       	rjmp	.+14     	; 0xdb6 <vfprintf+0x290>
     da8:	60 81       	ld	r22, Z
     daa:	71 81       	ldd	r23, Z+1	; 0x01
     dac:	82 81       	ldd	r24, Z+2	; 0x02
     dae:	93 81       	ldd	r25, Z+3	; 0x03
     db0:	0c 5f       	subi	r16, 0xFC	; 252
     db2:	1f 4f       	sbci	r17, 0xFF	; 255
     db4:	06 c0       	rjmp	.+12     	; 0xdc2 <vfprintf+0x29c>
     db6:	60 81       	ld	r22, Z
     db8:	71 81       	ldd	r23, Z+1	; 0x01
     dba:	80 e0       	ldi	r24, 0x00	; 0
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	0e 5f       	subi	r16, 0xFE	; 254
     dc0:	1f 4f       	sbci	r17, 0xFF	; 255
     dc2:	a4 01       	movw	r20, r8
     dc4:	ec d0       	rcall	.+472    	; 0xf9e <__ultoa_invert>
     dc6:	a8 2e       	mov	r10, r24
     dc8:	a8 18       	sub	r10, r8
     dca:	fb 2d       	mov	r31, r11
     dcc:	ff 77       	andi	r31, 0x7F	; 127
     dce:	7f 2e       	mov	r7, r31
     dd0:	76 fe       	sbrs	r7, 6
     dd2:	0b c0       	rjmp	.+22     	; 0xdea <vfprintf+0x2c4>
     dd4:	37 2d       	mov	r19, r7
     dd6:	3e 7f       	andi	r19, 0xFE	; 254
     dd8:	a5 14       	cp	r10, r5
     dda:	50 f4       	brcc	.+20     	; 0xdf0 <vfprintf+0x2ca>
     ddc:	74 fe       	sbrs	r7, 4
     dde:	0a c0       	rjmp	.+20     	; 0xdf4 <vfprintf+0x2ce>
     de0:	72 fc       	sbrc	r7, 2
     de2:	08 c0       	rjmp	.+16     	; 0xdf4 <vfprintf+0x2ce>
     de4:	37 2d       	mov	r19, r7
     de6:	3e 7e       	andi	r19, 0xEE	; 238
     de8:	05 c0       	rjmp	.+10     	; 0xdf4 <vfprintf+0x2ce>
     dea:	ba 2c       	mov	r11, r10
     dec:	37 2d       	mov	r19, r7
     dee:	03 c0       	rjmp	.+6      	; 0xdf6 <vfprintf+0x2d0>
     df0:	ba 2c       	mov	r11, r10
     df2:	01 c0       	rjmp	.+2      	; 0xdf6 <vfprintf+0x2d0>
     df4:	b5 2c       	mov	r11, r5
     df6:	34 ff       	sbrs	r19, 4
     df8:	0d c0       	rjmp	.+26     	; 0xe14 <vfprintf+0x2ee>
     dfa:	fe 01       	movw	r30, r28
     dfc:	ea 0d       	add	r30, r10
     dfe:	f1 1d       	adc	r31, r1
     e00:	80 81       	ld	r24, Z
     e02:	80 33       	cpi	r24, 0x30	; 48
     e04:	11 f4       	brne	.+4      	; 0xe0a <vfprintf+0x2e4>
     e06:	39 7e       	andi	r19, 0xE9	; 233
     e08:	09 c0       	rjmp	.+18     	; 0xe1c <vfprintf+0x2f6>
     e0a:	32 ff       	sbrs	r19, 2
     e0c:	06 c0       	rjmp	.+12     	; 0xe1a <vfprintf+0x2f4>
     e0e:	b3 94       	inc	r11
     e10:	b3 94       	inc	r11
     e12:	04 c0       	rjmp	.+8      	; 0xe1c <vfprintf+0x2f6>
     e14:	83 2f       	mov	r24, r19
     e16:	86 78       	andi	r24, 0x86	; 134
     e18:	09 f0       	breq	.+2      	; 0xe1c <vfprintf+0x2f6>
     e1a:	b3 94       	inc	r11
     e1c:	33 fd       	sbrc	r19, 3
     e1e:	12 c0       	rjmp	.+36     	; 0xe44 <vfprintf+0x31e>
     e20:	30 ff       	sbrs	r19, 0
     e22:	06 c0       	rjmp	.+12     	; 0xe30 <vfprintf+0x30a>
     e24:	5a 2c       	mov	r5, r10
     e26:	b3 14       	cp	r11, r3
     e28:	18 f4       	brcc	.+6      	; 0xe30 <vfprintf+0x30a>
     e2a:	53 0c       	add	r5, r3
     e2c:	5b 18       	sub	r5, r11
     e2e:	b3 2c       	mov	r11, r3
     e30:	b3 14       	cp	r11, r3
     e32:	60 f4       	brcc	.+24     	; 0xe4c <vfprintf+0x326>
     e34:	b7 01       	movw	r22, r14
     e36:	80 e2       	ldi	r24, 0x20	; 32
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	3c 87       	std	Y+12, r19	; 0x0c
     e3c:	78 d0       	rcall	.+240    	; 0xf2e <fputc>
     e3e:	b3 94       	inc	r11
     e40:	3c 85       	ldd	r19, Y+12	; 0x0c
     e42:	f6 cf       	rjmp	.-20     	; 0xe30 <vfprintf+0x30a>
     e44:	b3 14       	cp	r11, r3
     e46:	10 f4       	brcc	.+4      	; 0xe4c <vfprintf+0x326>
     e48:	3b 18       	sub	r3, r11
     e4a:	01 c0       	rjmp	.+2      	; 0xe4e <vfprintf+0x328>
     e4c:	31 2c       	mov	r3, r1
     e4e:	34 ff       	sbrs	r19, 4
     e50:	11 c0       	rjmp	.+34     	; 0xe74 <vfprintf+0x34e>
     e52:	b7 01       	movw	r22, r14
     e54:	80 e3       	ldi	r24, 0x30	; 48
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	3c 87       	std	Y+12, r19	; 0x0c
     e5a:	69 d0       	rcall	.+210    	; 0xf2e <fputc>
     e5c:	3c 85       	ldd	r19, Y+12	; 0x0c
     e5e:	32 ff       	sbrs	r19, 2
     e60:	16 c0       	rjmp	.+44     	; 0xe8e <vfprintf+0x368>
     e62:	31 fd       	sbrc	r19, 1
     e64:	03 c0       	rjmp	.+6      	; 0xe6c <vfprintf+0x346>
     e66:	88 e7       	ldi	r24, 0x78	; 120
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	02 c0       	rjmp	.+4      	; 0xe70 <vfprintf+0x34a>
     e6c:	88 e5       	ldi	r24, 0x58	; 88
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	b7 01       	movw	r22, r14
     e72:	0c c0       	rjmp	.+24     	; 0xe8c <vfprintf+0x366>
     e74:	83 2f       	mov	r24, r19
     e76:	86 78       	andi	r24, 0x86	; 134
     e78:	51 f0       	breq	.+20     	; 0xe8e <vfprintf+0x368>
     e7a:	31 ff       	sbrs	r19, 1
     e7c:	02 c0       	rjmp	.+4      	; 0xe82 <vfprintf+0x35c>
     e7e:	8b e2       	ldi	r24, 0x2B	; 43
     e80:	01 c0       	rjmp	.+2      	; 0xe84 <vfprintf+0x35e>
     e82:	80 e2       	ldi	r24, 0x20	; 32
     e84:	37 fd       	sbrc	r19, 7
     e86:	8d e2       	ldi	r24, 0x2D	; 45
     e88:	b7 01       	movw	r22, r14
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	50 d0       	rcall	.+160    	; 0xf2e <fputc>
     e8e:	a5 14       	cp	r10, r5
     e90:	30 f4       	brcc	.+12     	; 0xe9e <vfprintf+0x378>
     e92:	b7 01       	movw	r22, r14
     e94:	80 e3       	ldi	r24, 0x30	; 48
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	4a d0       	rcall	.+148    	; 0xf2e <fputc>
     e9a:	5a 94       	dec	r5
     e9c:	f8 cf       	rjmp	.-16     	; 0xe8e <vfprintf+0x368>
     e9e:	aa 94       	dec	r10
     ea0:	f4 01       	movw	r30, r8
     ea2:	ea 0d       	add	r30, r10
     ea4:	f1 1d       	adc	r31, r1
     ea6:	80 81       	ld	r24, Z
     ea8:	b7 01       	movw	r22, r14
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	40 d0       	rcall	.+128    	; 0xf2e <fputc>
     eae:	a1 10       	cpse	r10, r1
     eb0:	f6 cf       	rjmp	.-20     	; 0xe9e <vfprintf+0x378>
     eb2:	33 20       	and	r3, r3
     eb4:	09 f4       	brne	.+2      	; 0xeb8 <vfprintf+0x392>
     eb6:	5d ce       	rjmp	.-838    	; 0xb72 <vfprintf+0x4c>
     eb8:	b7 01       	movw	r22, r14
     eba:	80 e2       	ldi	r24, 0x20	; 32
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	37 d0       	rcall	.+110    	; 0xf2e <fputc>
     ec0:	3a 94       	dec	r3
     ec2:	f7 cf       	rjmp	.-18     	; 0xeb2 <vfprintf+0x38c>
     ec4:	f7 01       	movw	r30, r14
     ec6:	86 81       	ldd	r24, Z+6	; 0x06
     ec8:	97 81       	ldd	r25, Z+7	; 0x07
     eca:	02 c0       	rjmp	.+4      	; 0xed0 <vfprintf+0x3aa>
     ecc:	8f ef       	ldi	r24, 0xFF	; 255
     ece:	9f ef       	ldi	r25, 0xFF	; 255
     ed0:	2c 96       	adiw	r28, 0x0c	; 12
     ed2:	0f b6       	in	r0, 0x3f	; 63
     ed4:	f8 94       	cli
     ed6:	de bf       	out	0x3e, r29	; 62
     ed8:	0f be       	out	0x3f, r0	; 63
     eda:	cd bf       	out	0x3d, r28	; 61
     edc:	df 91       	pop	r29
     ede:	cf 91       	pop	r28
     ee0:	1f 91       	pop	r17
     ee2:	0f 91       	pop	r16
     ee4:	ff 90       	pop	r15
     ee6:	ef 90       	pop	r14
     ee8:	df 90       	pop	r13
     eea:	cf 90       	pop	r12
     eec:	bf 90       	pop	r11
     eee:	af 90       	pop	r10
     ef0:	9f 90       	pop	r9
     ef2:	8f 90       	pop	r8
     ef4:	7f 90       	pop	r7
     ef6:	6f 90       	pop	r6
     ef8:	5f 90       	pop	r5
     efa:	4f 90       	pop	r4
     efc:	3f 90       	pop	r3
     efe:	2f 90       	pop	r2
     f00:	08 95       	ret

00000f02 <strnlen_P>:
     f02:	fc 01       	movw	r30, r24
     f04:	05 90       	lpm	r0, Z+
     f06:	61 50       	subi	r22, 0x01	; 1
     f08:	70 40       	sbci	r23, 0x00	; 0
     f0a:	01 10       	cpse	r0, r1
     f0c:	d8 f7       	brcc	.-10     	; 0xf04 <strnlen_P+0x2>
     f0e:	80 95       	com	r24
     f10:	90 95       	com	r25
     f12:	8e 0f       	add	r24, r30
     f14:	9f 1f       	adc	r25, r31
     f16:	08 95       	ret

00000f18 <strnlen>:
     f18:	fc 01       	movw	r30, r24
     f1a:	61 50       	subi	r22, 0x01	; 1
     f1c:	70 40       	sbci	r23, 0x00	; 0
     f1e:	01 90       	ld	r0, Z+
     f20:	01 10       	cpse	r0, r1
     f22:	d8 f7       	brcc	.-10     	; 0xf1a <strnlen+0x2>
     f24:	80 95       	com	r24
     f26:	90 95       	com	r25
     f28:	8e 0f       	add	r24, r30
     f2a:	9f 1f       	adc	r25, r31
     f2c:	08 95       	ret

00000f2e <fputc>:
     f2e:	0f 93       	push	r16
     f30:	1f 93       	push	r17
     f32:	cf 93       	push	r28
     f34:	df 93       	push	r29
     f36:	fb 01       	movw	r30, r22
     f38:	23 81       	ldd	r18, Z+3	; 0x03
     f3a:	21 fd       	sbrc	r18, 1
     f3c:	03 c0       	rjmp	.+6      	; 0xf44 <fputc+0x16>
     f3e:	8f ef       	ldi	r24, 0xFF	; 255
     f40:	9f ef       	ldi	r25, 0xFF	; 255
     f42:	28 c0       	rjmp	.+80     	; 0xf94 <fputc+0x66>
     f44:	22 ff       	sbrs	r18, 2
     f46:	16 c0       	rjmp	.+44     	; 0xf74 <fputc+0x46>
     f48:	46 81       	ldd	r20, Z+6	; 0x06
     f4a:	57 81       	ldd	r21, Z+7	; 0x07
     f4c:	24 81       	ldd	r18, Z+4	; 0x04
     f4e:	35 81       	ldd	r19, Z+5	; 0x05
     f50:	42 17       	cp	r20, r18
     f52:	53 07       	cpc	r21, r19
     f54:	44 f4       	brge	.+16     	; 0xf66 <fputc+0x38>
     f56:	a0 81       	ld	r26, Z
     f58:	b1 81       	ldd	r27, Z+1	; 0x01
     f5a:	9d 01       	movw	r18, r26
     f5c:	2f 5f       	subi	r18, 0xFF	; 255
     f5e:	3f 4f       	sbci	r19, 0xFF	; 255
     f60:	31 83       	std	Z+1, r19	; 0x01
     f62:	20 83       	st	Z, r18
     f64:	8c 93       	st	X, r24
     f66:	26 81       	ldd	r18, Z+6	; 0x06
     f68:	37 81       	ldd	r19, Z+7	; 0x07
     f6a:	2f 5f       	subi	r18, 0xFF	; 255
     f6c:	3f 4f       	sbci	r19, 0xFF	; 255
     f6e:	37 83       	std	Z+7, r19	; 0x07
     f70:	26 83       	std	Z+6, r18	; 0x06
     f72:	10 c0       	rjmp	.+32     	; 0xf94 <fputc+0x66>
     f74:	eb 01       	movw	r28, r22
     f76:	09 2f       	mov	r16, r25
     f78:	18 2f       	mov	r17, r24
     f7a:	00 84       	ldd	r0, Z+8	; 0x08
     f7c:	f1 85       	ldd	r31, Z+9	; 0x09
     f7e:	e0 2d       	mov	r30, r0
     f80:	09 95       	icall
     f82:	89 2b       	or	r24, r25
     f84:	e1 f6       	brne	.-72     	; 0xf3e <fputc+0x10>
     f86:	8e 81       	ldd	r24, Y+6	; 0x06
     f88:	9f 81       	ldd	r25, Y+7	; 0x07
     f8a:	01 96       	adiw	r24, 0x01	; 1
     f8c:	9f 83       	std	Y+7, r25	; 0x07
     f8e:	8e 83       	std	Y+6, r24	; 0x06
     f90:	81 2f       	mov	r24, r17
     f92:	90 2f       	mov	r25, r16
     f94:	df 91       	pop	r29
     f96:	cf 91       	pop	r28
     f98:	1f 91       	pop	r17
     f9a:	0f 91       	pop	r16
     f9c:	08 95       	ret

00000f9e <__ultoa_invert>:
     f9e:	fa 01       	movw	r30, r20
     fa0:	aa 27       	eor	r26, r26
     fa2:	28 30       	cpi	r18, 0x08	; 8
     fa4:	51 f1       	breq	.+84     	; 0xffa <__ultoa_invert+0x5c>
     fa6:	20 31       	cpi	r18, 0x10	; 16
     fa8:	81 f1       	breq	.+96     	; 0x100a <__ultoa_invert+0x6c>
     faa:	e8 94       	clt
     fac:	6f 93       	push	r22
     fae:	6e 7f       	andi	r22, 0xFE	; 254
     fb0:	6e 5f       	subi	r22, 0xFE	; 254
     fb2:	7f 4f       	sbci	r23, 0xFF	; 255
     fb4:	8f 4f       	sbci	r24, 0xFF	; 255
     fb6:	9f 4f       	sbci	r25, 0xFF	; 255
     fb8:	af 4f       	sbci	r26, 0xFF	; 255
     fba:	b1 e0       	ldi	r27, 0x01	; 1
     fbc:	3e d0       	rcall	.+124    	; 0x103a <__ultoa_invert+0x9c>
     fbe:	b4 e0       	ldi	r27, 0x04	; 4
     fc0:	3c d0       	rcall	.+120    	; 0x103a <__ultoa_invert+0x9c>
     fc2:	67 0f       	add	r22, r23
     fc4:	78 1f       	adc	r23, r24
     fc6:	89 1f       	adc	r24, r25
     fc8:	9a 1f       	adc	r25, r26
     fca:	a1 1d       	adc	r26, r1
     fcc:	68 0f       	add	r22, r24
     fce:	79 1f       	adc	r23, r25
     fd0:	8a 1f       	adc	r24, r26
     fd2:	91 1d       	adc	r25, r1
     fd4:	a1 1d       	adc	r26, r1
     fd6:	6a 0f       	add	r22, r26
     fd8:	71 1d       	adc	r23, r1
     fda:	81 1d       	adc	r24, r1
     fdc:	91 1d       	adc	r25, r1
     fde:	a1 1d       	adc	r26, r1
     fe0:	20 d0       	rcall	.+64     	; 0x1022 <__ultoa_invert+0x84>
     fe2:	09 f4       	brne	.+2      	; 0xfe6 <__ultoa_invert+0x48>
     fe4:	68 94       	set
     fe6:	3f 91       	pop	r19
     fe8:	2a e0       	ldi	r18, 0x0A	; 10
     fea:	26 9f       	mul	r18, r22
     fec:	11 24       	eor	r1, r1
     fee:	30 19       	sub	r19, r0
     ff0:	30 5d       	subi	r19, 0xD0	; 208
     ff2:	31 93       	st	Z+, r19
     ff4:	de f6       	brtc	.-74     	; 0xfac <__ultoa_invert+0xe>
     ff6:	cf 01       	movw	r24, r30
     ff8:	08 95       	ret
     ffa:	46 2f       	mov	r20, r22
     ffc:	47 70       	andi	r20, 0x07	; 7
     ffe:	40 5d       	subi	r20, 0xD0	; 208
    1000:	41 93       	st	Z+, r20
    1002:	b3 e0       	ldi	r27, 0x03	; 3
    1004:	0f d0       	rcall	.+30     	; 0x1024 <__ultoa_invert+0x86>
    1006:	c9 f7       	brne	.-14     	; 0xffa <__ultoa_invert+0x5c>
    1008:	f6 cf       	rjmp	.-20     	; 0xff6 <__ultoa_invert+0x58>
    100a:	46 2f       	mov	r20, r22
    100c:	4f 70       	andi	r20, 0x0F	; 15
    100e:	40 5d       	subi	r20, 0xD0	; 208
    1010:	4a 33       	cpi	r20, 0x3A	; 58
    1012:	18 f0       	brcs	.+6      	; 0x101a <__ultoa_invert+0x7c>
    1014:	49 5d       	subi	r20, 0xD9	; 217
    1016:	31 fd       	sbrc	r19, 1
    1018:	40 52       	subi	r20, 0x20	; 32
    101a:	41 93       	st	Z+, r20
    101c:	02 d0       	rcall	.+4      	; 0x1022 <__ultoa_invert+0x84>
    101e:	a9 f7       	brne	.-22     	; 0x100a <__ultoa_invert+0x6c>
    1020:	ea cf       	rjmp	.-44     	; 0xff6 <__ultoa_invert+0x58>
    1022:	b4 e0       	ldi	r27, 0x04	; 4
    1024:	a6 95       	lsr	r26
    1026:	97 95       	ror	r25
    1028:	87 95       	ror	r24
    102a:	77 95       	ror	r23
    102c:	67 95       	ror	r22
    102e:	ba 95       	dec	r27
    1030:	c9 f7       	brne	.-14     	; 0x1024 <__ultoa_invert+0x86>
    1032:	00 97       	sbiw	r24, 0x00	; 0
    1034:	61 05       	cpc	r22, r1
    1036:	71 05       	cpc	r23, r1
    1038:	08 95       	ret
    103a:	9b 01       	movw	r18, r22
    103c:	ac 01       	movw	r20, r24
    103e:	0a 2e       	mov	r0, r26
    1040:	06 94       	lsr	r0
    1042:	57 95       	ror	r21
    1044:	47 95       	ror	r20
    1046:	37 95       	ror	r19
    1048:	27 95       	ror	r18
    104a:	ba 95       	dec	r27
    104c:	c9 f7       	brne	.-14     	; 0x1040 <__ultoa_invert+0xa2>
    104e:	62 0f       	add	r22, r18
    1050:	73 1f       	adc	r23, r19
    1052:	84 1f       	adc	r24, r20
    1054:	95 1f       	adc	r25, r21
    1056:	a0 1d       	adc	r26, r0
    1058:	08 95       	ret

0000105a <_exit>:
    105a:	f8 94       	cli

0000105c <__stop_program>:
    105c:	ff cf       	rjmp	.-2      	; 0x105c <__stop_program>
