
blockR127.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000928  00800100  000010ea  0000117e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000154  00800a28  00800a28  00001aa6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001aa6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b04  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00001b44  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001117  00000000  00000000  00001bcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cc9  00000000  00000000  00002ce3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000437  00000000  00000000  000039ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001dc  00000000  00000000  00003de4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000078a  00000000  00000000  00003fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006e7  00000000  00000000  0000474a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00004e31  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
       2:	00 00       	nop
       4:	65 c0       	rjmp	.+202    	; 0xd0 <__bad_interrupt>
       6:	00 00       	nop
       8:	09 c4       	rjmp	.+2066   	; 0x81c <__vector_2>
       a:	00 00       	nop
       c:	61 c0       	rjmp	.+194    	; 0xd0 <__bad_interrupt>
       e:	00 00       	nop
      10:	5f c0       	rjmp	.+190    	; 0xd0 <__bad_interrupt>
      12:	00 00       	nop
      14:	5d c0       	rjmp	.+186    	; 0xd0 <__bad_interrupt>
      16:	00 00       	nop
      18:	5b c0       	rjmp	.+182    	; 0xd0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	59 c0       	rjmp	.+178    	; 0xd0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	57 c0       	rjmp	.+174    	; 0xd0 <__bad_interrupt>
      22:	00 00       	nop
      24:	55 c0       	rjmp	.+170    	; 0xd0 <__bad_interrupt>
      26:	00 00       	nop
      28:	53 c0       	rjmp	.+166    	; 0xd0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	51 c0       	rjmp	.+162    	; 0xd0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4f c0       	rjmp	.+158    	; 0xd0 <__bad_interrupt>
      32:	00 00       	nop
      34:	4d c0       	rjmp	.+154    	; 0xd0 <__bad_interrupt>
      36:	00 00       	nop
      38:	4b c0       	rjmp	.+150    	; 0xd0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	49 c0       	rjmp	.+146    	; 0xd0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	47 c0       	rjmp	.+142    	; 0xd0 <__bad_interrupt>
      42:	00 00       	nop
      44:	45 c0       	rjmp	.+138    	; 0xd0 <__bad_interrupt>
      46:	00 00       	nop
      48:	43 c0       	rjmp	.+134    	; 0xd0 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	41 c0       	rjmp	.+130    	; 0xd0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3f c0       	rjmp	.+126    	; 0xd0 <__bad_interrupt>
      52:	00 00       	nop
      54:	3d c0       	rjmp	.+122    	; 0xd0 <__bad_interrupt>
      56:	00 00       	nop
      58:	3b c0       	rjmp	.+118    	; 0xd0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	39 c0       	rjmp	.+114    	; 0xd0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	37 c0       	rjmp	.+110    	; 0xd0 <__bad_interrupt>
      62:	00 00       	nop
      64:	35 c0       	rjmp	.+106    	; 0xd0 <__bad_interrupt>
      66:	00 00       	nop
      68:	33 c0       	rjmp	.+102    	; 0xd0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	31 c0       	rjmp	.+98     	; 0xd0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2f c0       	rjmp	.+94     	; 0xd0 <__bad_interrupt>
      72:	00 00       	nop
      74:	2d c0       	rjmp	.+90     	; 0xd0 <__bad_interrupt>
      76:	00 00       	nop
      78:	2b c0       	rjmp	.+86     	; 0xd0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	29 c0       	rjmp	.+82     	; 0xd0 <__bad_interrupt>
      7e:	00 00       	nop
      80:	27 c0       	rjmp	.+78     	; 0xd0 <__bad_interrupt>
      82:	00 00       	nop
      84:	25 c0       	rjmp	.+74     	; 0xd0 <__bad_interrupt>
      86:	00 00       	nop
      88:	23 c0       	rjmp	.+70     	; 0xd0 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	21 c0       	rjmp	.+66     	; 0xd0 <__bad_interrupt>
      8e:	00 00       	nop
      90:	1f c0       	rjmp	.+62     	; 0xd0 <__bad_interrupt>
	...

00000094 <__ctors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d0 e1       	ldi	r29, 0x10	; 16
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	1a e0       	ldi	r17, 0x0A	; 10
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	ea ee       	ldi	r30, 0xEA	; 234
      a8:	f0 e1       	ldi	r31, 0x10	; 16
      aa:	00 e0       	ldi	r16, 0x00	; 0
      ac:	0b bf       	out	0x3b, r16	; 59
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
      b0:	07 90       	elpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	a8 32       	cpi	r26, 0x28	; 40
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
      ba:	2b e0       	ldi	r18, 0x0B	; 11
      bc:	a8 e2       	ldi	r26, 0x28	; 40
      be:	ba e0       	ldi	r27, 0x0A	; 10
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	ac 37       	cpi	r26, 0x7C	; 124
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	40 d3       	rcall	.+1664   	; 0x74c <main>
      cc:	0c 94 73 08 	jmp	0x10e6	; 0x10e6 <_exit>

000000d0 <__bad_interrupt>:
      d0:	97 cf       	rjmp	.-210    	; 0x0 <__vectors>

000000d2 <iir_init>:
/*
  Initialization- and return-value-related functions
*/

void iir_init( void )
{
      d2:	cf 93       	push	r28
      d4:	df 93       	push	r29
      d6:	1f 92       	push	r1
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
  int f;
  unsigned int i;
  unsigned char *p;
  volatile char bitmask = 0;
      dc:	19 82       	std	Y+1, r1	; 0x01


  _Pragma( "loopbound min 20 max 20" )
  for ( f = 0 ; f < 5 * 4; f++ )
      de:	80 e0       	ldi	r24, 0x00	; 0
      e0:	90 e0       	ldi	r25, 0x00	; 0
    iir_coefficients[ f ] = 7;
      e2:	40 e0       	ldi	r20, 0x00	; 0
      e4:	50 e0       	ldi	r21, 0x00	; 0
      e6:	60 ee       	ldi	r22, 0xE0	; 224
      e8:	70 e4       	ldi	r23, 0x40	; 64
      ea:	fc 01       	movw	r30, r24
      ec:	ee 0f       	add	r30, r30
      ee:	ff 1f       	adc	r31, r31
      f0:	ee 0f       	add	r30, r30
      f2:	ff 1f       	adc	r31, r31
      f4:	e6 5d       	subi	r30, 0xD6	; 214
      f6:	f5 4f       	sbci	r31, 0xF5	; 245
      f8:	40 83       	st	Z, r20
      fa:	51 83       	std	Z+1, r21	; 0x01
      fc:	62 83       	std	Z+2, r22	; 0x02
      fe:	73 83       	std	Z+3, r23	; 0x03
  unsigned char *p;
  volatile char bitmask = 0;


  _Pragma( "loopbound min 20 max 20" )
  for ( f = 0 ; f < 5 * 4; f++ )
     100:	01 96       	adiw	r24, 0x01	; 1
     102:	84 31       	cpi	r24, 0x14	; 20
     104:	91 05       	cpc	r25, r1
     106:	89 f7       	brne	.-30     	; 0xea <iir_init+0x18>
     108:	80 e0       	ldi	r24, 0x00	; 0
     10a:	90 e0       	ldi	r25, 0x00	; 0
    iir_coefficients[ f ] = 7;

  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
    iir_wi[ f ] = 0;
     10c:	fc 01       	movw	r30, r24
     10e:	ee 0f       	add	r30, r30
     110:	ff 1f       	adc	r31, r31
     112:	ee 0f       	add	r30, r30
     114:	ff 1f       	adc	r31, r31
     116:	e2 58       	subi	r30, 0x82	; 130
     118:	f5 4f       	sbci	r31, 0xF5	; 245
     11a:	10 82       	st	Z, r1
     11c:	11 82       	std	Z+1, r1	; 0x01
     11e:	12 82       	std	Z+2, r1	; 0x02
     120:	13 82       	std	Z+3, r1	; 0x03
  _Pragma( "loopbound min 20 max 20" )
  for ( f = 0 ; f < 5 * 4; f++ )
    iir_coefficients[ f ] = 7;

  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     122:	01 96       	adiw	r24, 0x01	; 1
     124:	88 30       	cpi	r24, 0x08	; 8
     126:	91 05       	cpc	r25, r1
     128:	89 f7       	brne	.-30     	; 0x10c <iir_init+0x3a>
    iir_wi[ f ] = 0;

  iir_x = ( float ) 1;
     12a:	80 e0       	ldi	r24, 0x00	; 0
     12c:	90 e0       	ldi	r25, 0x00	; 0
     12e:	a0 e8       	ldi	r26, 0x80	; 128
     130:	bf e3       	ldi	r27, 0x3F	; 63
     132:	80 93 7a 0a 	sts	0x0A7A, r24	; 0x800a7a <iir_x>
     136:	90 93 7b 0a 	sts	0x0A7B, r25	; 0x800a7b <iir_x+0x1>
     13a:	a0 93 7c 0a 	sts	0x0A7C, r26	; 0x800a7c <iir_x+0x2>
     13e:	b0 93 7d 0a 	sts	0x0A7D, r27	; 0x800a7d <iir_x+0x3>

  /*
    Apply volatile XOR-bitmask to entire input array.
  */
  p = (unsigned char *) &iir_coefficients[ 0 ];
     142:	ea e2       	ldi	r30, 0x2A	; 42
     144:	fa e0       	ldi	r31, 0x0A	; 10
  _Pragma( "loopbound min 80 max 80" )
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
    *p ^= bitmask + *p;
     146:	99 81       	ldd	r25, Y+1	; 0x01
     148:	80 81       	ld	r24, Z
     14a:	98 0f       	add	r25, r24
     14c:	89 27       	eor	r24, r25
     14e:	81 93       	st	Z+, r24
  /*
    Apply volatile XOR-bitmask to entire input array.
  */
  p = (unsigned char *) &iir_coefficients[ 0 ];
  _Pragma( "loopbound min 80 max 80" )
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
     150:	8a e0       	ldi	r24, 0x0A	; 10
     152:	ea 37       	cpi	r30, 0x7A	; 122
     154:	f8 07       	cpc	r31, r24
     156:	b9 f7       	brne	.-18     	; 0x146 <iir_init+0x74>
     158:	ee e7       	ldi	r30, 0x7E	; 126
     15a:	fa e0       	ldi	r31, 0x0A	; 10
    *p ^= bitmask + *p;

  p = (unsigned char *) &iir_wi[ 0 ];
  _Pragma( "loopbound min 32 max 32" )
  for ( i = 0; i < sizeof( iir_wi ); ++i, ++p )
    *p ^= bitmask;
     15c:	89 81       	ldd	r24, Y+1	; 0x01
     15e:	90 81       	ld	r25, Z
     160:	89 27       	eor	r24, r25
     162:	81 93       	st	Z+, r24
  for ( i = 0; i < sizeof( iir_coefficients ); ++i, ++p )
    *p ^= bitmask + *p;

  p = (unsigned char *) &iir_wi[ 0 ];
  _Pragma( "loopbound min 32 max 32" )
  for ( i = 0; i < sizeof( iir_wi ); ++i, ++p )
     164:	8a e0       	ldi	r24, 0x0A	; 10
     166:	ee 39       	cpi	r30, 0x9E	; 158
     168:	f8 07       	cpc	r31, r24
     16a:	c1 f7       	brne	.-16     	; 0x15c <iir_init+0x8a>
    *p ^= bitmask;
}
     16c:	0f 90       	pop	r0
     16e:	df 91       	pop	r29
     170:	cf 91       	pop	r28
     172:	08 95       	ret

00000174 <iir_return>:


int iir_return( void )
{
     174:	cf 93       	push	r28
     176:	df 93       	push	r29
  float checksum = 0.0;
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     178:	c0 e0       	ldi	r28, 0x00	; 0
     17a:	d0 e0       	ldi	r29, 0x00	; 0
}


int iir_return( void )
{
  float checksum = 0.0;
     17c:	60 e0       	ldi	r22, 0x00	; 0
     17e:	70 e0       	ldi	r23, 0x00	; 0
     180:	cb 01       	movw	r24, r22
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
    checksum += iir_wi[ f ];
     182:	fe 01       	movw	r30, r28
     184:	ee 0f       	add	r30, r30
     186:	ff 1f       	adc	r31, r31
     188:	ee 0f       	add	r30, r30
     18a:	ff 1f       	adc	r31, r31
     18c:	e2 58       	subi	r30, 0x82	; 130
     18e:	f5 4f       	sbci	r31, 0xF5	; 245
     190:	20 81       	ld	r18, Z
     192:	31 81       	ldd	r19, Z+1	; 0x01
     194:	42 81       	ldd	r20, Z+2	; 0x02
     196:	53 81       	ldd	r21, Z+3	; 0x03
     198:	b4 d3       	rcall	.+1896   	; 0x902 <__addsf3>
  float checksum = 0.0;
  int f;


  _Pragma( "loopbound min 8 max 8" )
  for ( f = 0 ; f < 2 * 4; f++ )
     19a:	21 96       	adiw	r28, 0x01	; 1
     19c:	c8 30       	cpi	r28, 0x08	; 8
     19e:	d1 05       	cpc	r29, r1
     1a0:	81 f7       	brne	.-32     	; 0x182 <iir_return+0xe>
    checksum += iir_wi[ f ];

  return( (int) checksum );
     1a2:	13 d4       	rcall	.+2086   	; 0x9ca <__fixsfsi>
}
     1a4:	cb 01       	movw	r24, r22
     1a6:	df 91       	pop	r29
     1a8:	cf 91       	pop	r28
     1aa:	08 95       	ret

000001ac <iir_main>:
/*
  Main functions
*/

void _Pragma( "entrypoint" ) iir_main( void )
{
     1ac:	4f 92       	push	r4
     1ae:	5f 92       	push	r5
     1b0:	6f 92       	push	r6
     1b2:	7f 92       	push	r7
     1b4:	af 92       	push	r10
     1b6:	bf 92       	push	r11
     1b8:	cf 92       	push	r12
     1ba:	df 92       	push	r13
     1bc:	ef 92       	push	r14
     1be:	ff 92       	push	r15
     1c0:	0f 93       	push	r16
     1c2:	1f 93       	push	r17
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
	asm(
     1c8:	00 92 14 0b 	sts	0x0B14, r0	; 0x800b14 <register_address_org>
     1cc:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <register_address_org+0x1>
     1d0:	20 92 16 0b 	sts	0x0B16, r2	; 0x800b16 <register_address_org+0x2>
     1d4:	30 92 17 0b 	sts	0x0B17, r3	; 0x800b17 <register_address_org+0x3>
     1d8:	40 92 18 0b 	sts	0x0B18, r4	; 0x800b18 <register_address_org+0x4>
     1dc:	50 92 19 0b 	sts	0x0B19, r5	; 0x800b19 <register_address_org+0x5>
     1e0:	60 92 1a 0b 	sts	0x0B1A, r6	; 0x800b1a <register_address_org+0x6>
     1e4:	70 92 1b 0b 	sts	0x0B1B, r7	; 0x800b1b <register_address_org+0x7>
     1e8:	80 92 1c 0b 	sts	0x0B1C, r8	; 0x800b1c <register_address_org+0x8>
     1ec:	90 92 1d 0b 	sts	0x0B1D, r9	; 0x800b1d <register_address_org+0x9>
     1f0:	a0 92 1e 0b 	sts	0x0B1E, r10	; 0x800b1e <register_address_org+0xa>
     1f4:	b0 92 1f 0b 	sts	0x0B1F, r11	; 0x800b1f <register_address_org+0xb>
     1f8:	c0 92 20 0b 	sts	0x0B20, r12	; 0x800b20 <register_address_org+0xc>
     1fc:	d0 92 21 0b 	sts	0x0B21, r13	; 0x800b21 <register_address_org+0xd>
     200:	e0 92 22 0b 	sts	0x0B22, r14	; 0x800b22 <register_address_org+0xe>
     204:	f0 92 23 0b 	sts	0x0B23, r15	; 0x800b23 <register_address_org+0xf>
     208:	00 93 24 0b 	sts	0x0B24, r16	; 0x800b24 <register_address_org+0x10>
     20c:	10 93 25 0b 	sts	0x0B25, r17	; 0x800b25 <register_address_org+0x11>
     210:	20 93 26 0b 	sts	0x0B26, r18	; 0x800b26 <register_address_org+0x12>
     214:	30 93 27 0b 	sts	0x0B27, r19	; 0x800b27 <register_address_org+0x13>
     218:	40 93 28 0b 	sts	0x0B28, r20	; 0x800b28 <register_address_org+0x14>
     21c:	50 93 29 0b 	sts	0x0B29, r21	; 0x800b29 <register_address_org+0x15>
     220:	60 93 2a 0b 	sts	0x0B2A, r22	; 0x800b2a <register_address_org+0x16>
     224:	70 93 2b 0b 	sts	0x0B2B, r23	; 0x800b2b <register_address_org+0x17>
     228:	80 93 2c 0b 	sts	0x0B2C, r24	; 0x800b2c <register_address_org+0x18>
     22c:	90 93 2d 0b 	sts	0x0B2D, r25	; 0x800b2d <register_address_org+0x19>
     230:	a0 93 2e 0b 	sts	0x0B2E, r26	; 0x800b2e <register_address_org+0x1a>
     234:	b0 93 2f 0b 	sts	0x0B2F, r27	; 0x800b2f <register_address_org+0x1b>
     238:	c0 93 30 0b 	sts	0x0B30, r28	; 0x800b30 <register_address_org+0x1c>
     23c:	d0 93 31 0b 	sts	0x0B31, r29	; 0x800b31 <register_address_org+0x1d>
     240:	e0 93 32 0b 	sts	0x0B32, r30	; 0x800b32 <register_address_org+0x1e>
     244:	f0 93 33 0b 	sts	0x0B33, r31	; 0x800b33 <register_address_org+0x1f>
     248:	ed b6       	in	r14, 0x3d	; 61
     24a:	fe b6       	in	r15, 0x3e	; 62
     24c:	e0 92 41 0b 	sts	0x0B41, r14	; 0x800b41 <stackpointer_address_org>
     250:	f0 92 42 0b 	sts	0x0B42, r15	; 0x800b42 <stackpointer_address_org+0x1>
     254:	80 e0       	ldi	r24, 0x00	; 0
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	a0 91 41 0b 	lds	r26, 0x0B41	; 0x800b41 <stackpointer_address_org>
     25c:	b0 91 42 0b 	lds	r27, 0x0B42	; 0x800b42 <stackpointer_address_org+0x1>
     260:	e8 e3       	ldi	r30, 0x38	; 56
     262:	fb e0       	ldi	r31, 0x0B	; 11
     264:	ed 90       	ld	r14, X+
     266:	e1 92       	st	Z+, r14
     268:	01 96       	adiw	r24, 0x01	; 1
     26a:	89 30       	cpi	r24, 0x09	; 9
     26c:	d9 f7       	brne	.-10     	; 0x264 <iir_main+0xb8>
     26e:	e0 90 22 0b 	lds	r14, 0x0B22	; 0x800b22 <register_address_org+0xe>
     272:	f0 90 23 0b 	lds	r15, 0x0B23	; 0x800b23 <register_address_org+0xf>
     276:	80 91 2c 0b 	lds	r24, 0x0B2C	; 0x800b2c <register_address_org+0x18>
     27a:	90 91 2d 0b 	lds	r25, 0x0B2D	; 0x800b2d <register_address_org+0x19>
     27e:	a0 91 2e 0b 	lds	r26, 0x0B2E	; 0x800b2e <register_address_org+0x1a>
     282:	b0 91 2f 0b 	lds	r27, 0x0B2F	; 0x800b2f <register_address_org+0x1b>
     286:	e0 91 32 0b 	lds	r30, 0x0B32	; 0x800b32 <register_address_org+0x1e>
     28a:	f0 91 33 0b 	lds	r31, 0x0B33	; 0x800b33 <register_address_org+0x1f>

0000028e <Tic_flag>:

  ptr_coeff = &iir_coefficients[ 0 ];
  ptr_wi1 = &iir_wi[ 0 ];
  ptr_wi2 = &iir_wi[ 1 ];

  y = iir_x ;
     28e:	40 90 7a 0a 	lds	r4, 0x0A7A	; 0x800a7a <iir_x>
     292:	50 90 7b 0a 	lds	r5, 0x0A7B	; 0x800a7b <iir_x+0x1>
     296:	60 90 7c 0a 	lds	r6, 0x0A7C	; 0x800a7c <iir_x+0x2>
     29a:	70 90 7d 0a 	lds	r7, 0x0A7D	; 0x800a7d <iir_x+0x3>
  register volatile float *ptr_coeff, *ptr_wi1, *ptr_wi2;
  register float y;


  ptr_coeff = &iir_coefficients[ 0 ];
  ptr_wi1 = &iir_wi[ 0 ];
     29e:	ce e7       	ldi	r28, 0x7E	; 126
     2a0:	da e0       	ldi	r29, 0x0A	; 10
  int f;
  register volatile float *ptr_coeff, *ptr_wi1, *ptr_wi2;
  register float y;


  ptr_coeff = &iir_coefficients[ 0 ];
     2a2:	0a e2       	ldi	r16, 0x2A	; 42
     2a4:	1a e0       	ldi	r17, 0x0A	; 10

  y = iir_x ;

  _Pragma( "loopbound min 4 max 4" )
  for ( f = 0 ; f < 4 ; f++ ) {
    w = y - *ptr_coeff++ * *ptr_wi1;
     2a6:	f8 01       	movw	r30, r16
     2a8:	60 81       	ld	r22, Z
     2aa:	71 81       	ldd	r23, Z+1	; 0x01
     2ac:	82 81       	ldd	r24, Z+2	; 0x02
     2ae:	93 81       	ldd	r25, Z+3	; 0x03
     2b0:	28 81       	ld	r18, Y
     2b2:	39 81       	ldd	r19, Y+1	; 0x01
     2b4:	4a 81       	ldd	r20, Y+2	; 0x02
     2b6:	5b 81       	ldd	r21, Y+3	; 0x03
     2b8:	0a d4       	rcall	.+2068   	; 0xace <__mulsf3>
     2ba:	9b 01       	movw	r18, r22
     2bc:	ac 01       	movw	r20, r24
     2be:	c3 01       	movw	r24, r6
     2c0:	b2 01       	movw	r22, r4
     2c2:	1e d3       	rcall	.+1596   	; 0x900 <__subsf3>
     2c4:	6b 01       	movw	r12, r22
     2c6:	7c 01       	movw	r14, r24
    w -= *ptr_coeff++ * *ptr_wi2;
     2c8:	f8 01       	movw	r30, r16
     2ca:	64 81       	ldd	r22, Z+4	; 0x04
     2cc:	75 81       	ldd	r23, Z+5	; 0x05
     2ce:	86 81       	ldd	r24, Z+6	; 0x06
     2d0:	97 81       	ldd	r25, Z+7	; 0x07
     2d2:	2c 81       	ldd	r18, Y+4	; 0x04
     2d4:	3d 81       	ldd	r19, Y+5	; 0x05
     2d6:	4e 81       	ldd	r20, Y+6	; 0x06
     2d8:	5f 81       	ldd	r21, Y+7	; 0x07
     2da:	f9 d3       	rcall	.+2034   	; 0xace <__mulsf3>
     2dc:	9b 01       	movw	r18, r22
     2de:	ac 01       	movw	r20, r24
     2e0:	c7 01       	movw	r24, r14
     2e2:	b6 01       	movw	r22, r12
     2e4:	0d d3       	rcall	.+1562   	; 0x900 <__subsf3>
     2e6:	6b 01       	movw	r12, r22
     2e8:	7c 01       	movw	r14, r24

    y = *ptr_coeff++ * w;
     2ea:	f8 01       	movw	r30, r16
     2ec:	60 85       	ldd	r22, Z+8	; 0x08
     2ee:	71 85       	ldd	r23, Z+9	; 0x09
     2f0:	82 85       	ldd	r24, Z+10	; 0x0a
     2f2:	93 85       	ldd	r25, Z+11	; 0x0b
     2f4:	a7 01       	movw	r20, r14
     2f6:	96 01       	movw	r18, r12
     2f8:	ea d3       	rcall	.+2004   	; 0xace <__mulsf3>
     2fa:	2b 01       	movw	r4, r22
     2fc:	3c 01       	movw	r6, r24
    y += *ptr_coeff++ * *ptr_wi1;
     2fe:	f8 01       	movw	r30, r16
     300:	64 85       	ldd	r22, Z+12	; 0x0c
     302:	75 85       	ldd	r23, Z+13	; 0x0d
     304:	86 85       	ldd	r24, Z+14	; 0x0e
     306:	97 85       	ldd	r25, Z+15	; 0x0f
     308:	28 81       	ld	r18, Y
     30a:	39 81       	ldd	r19, Y+1	; 0x01
     30c:	4a 81       	ldd	r20, Y+2	; 0x02
     30e:	5b 81       	ldd	r21, Y+3	; 0x03
     310:	de d3       	rcall	.+1980   	; 0xace <__mulsf3>
     312:	a3 01       	movw	r20, r6
     314:	92 01       	movw	r18, r4
     316:	f5 d2       	rcall	.+1514   	; 0x902 <__addsf3>
     318:	2b 01       	movw	r4, r22
     31a:	3c 01       	movw	r6, r24
     31c:	58 01       	movw	r10, r16
     31e:	f4 e1       	ldi	r31, 0x14	; 20
     320:	af 0e       	add	r10, r31
     322:	b1 1c       	adc	r11, r1
    y += *ptr_coeff++ * *ptr_wi2;
     324:	f8 01       	movw	r30, r16
     326:	60 89       	ldd	r22, Z+16	; 0x10
     328:	71 89       	ldd	r23, Z+17	; 0x11
     32a:	82 89       	ldd	r24, Z+18	; 0x12
     32c:	93 89       	ldd	r25, Z+19	; 0x13
     32e:	2c 81       	ldd	r18, Y+4	; 0x04
     330:	3d 81       	ldd	r19, Y+5	; 0x05
     332:	4e 81       	ldd	r20, Y+6	; 0x06
     334:	5f 81       	ldd	r21, Y+7	; 0x07
     336:	cb d3       	rcall	.+1942   	; 0xace <__mulsf3>
     338:	a3 01       	movw	r20, r6
     33a:	92 01       	movw	r18, r4
     33c:	e2 d2       	rcall	.+1476   	; 0x902 <__addsf3>
     33e:	2b 01       	movw	r4, r22
     340:	3c 01       	movw	r6, r24

    *ptr_wi2++ = *ptr_wi1;
     342:	88 81       	ld	r24, Y
     344:	99 81       	ldd	r25, Y+1	; 0x01
     346:	aa 81       	ldd	r26, Y+2	; 0x02
     348:	bb 81       	ldd	r27, Y+3	; 0x03
     34a:	8c 83       	std	Y+4, r24	; 0x04
     34c:	9d 83       	std	Y+5, r25	; 0x05
     34e:	ae 83       	std	Y+6, r26	; 0x06
     350:	bf 83       	std	Y+7, r27	; 0x07
    *ptr_wi1++ = w;
     352:	c8 82       	st	Y, r12
     354:	d9 82       	std	Y+1, r13	; 0x01
     356:	ea 82       	std	Y+2, r14	; 0x02
     358:	fb 82       	std	Y+3, r15	; 0x03
     35a:	28 96       	adiw	r28, 0x08	; 8
    w = y - *ptr_coeff++ * *ptr_wi1;
    w -= *ptr_coeff++ * *ptr_wi2;

    y = *ptr_coeff++ * w;
    y += *ptr_coeff++ * *ptr_wi1;
    y += *ptr_coeff++ * *ptr_wi2;
     35c:	85 01       	movw	r16, r10
  ptr_wi2 = &iir_wi[ 1 ];

  y = iir_x ;

  _Pragma( "loopbound min 4 max 4" )
  for ( f = 0 ; f < 4 ; f++ ) {
     35e:	fa e0       	ldi	r31, 0x0A	; 10
     360:	0a 37       	cpi	r16, 0x7A	; 122
     362:	1f 07       	cpc	r17, r31
     364:	09 f0       	breq	.+2      	; 0x368 <Tic_flag+0xda>
     366:	9f cf       	rjmp	.-194    	; 0x2a6 <Tic_flag+0x18>
    *ptr_wi1++ = w;

    ptr_wi2++;
    ptr_wi1++;
  }
}
     368:	df 91       	pop	r29
     36a:	cf 91       	pop	r28
     36c:	1f 91       	pop	r17
     36e:	0f 91       	pop	r16
     370:	ff 90       	pop	r15
     372:	ef 90       	pop	r14
     374:	df 90       	pop	r13
     376:	cf 90       	pop	r12
     378:	bf 90       	pop	r11
     37a:	af 90       	pop	r10
     37c:	7f 90       	pop	r7
     37e:	6f 90       	pop	r6
     380:	5f 90       	pop	r5
     382:	4f 90       	pop	r4
     384:	08 95       	ret

00000386 <blockInputUpdate>:
volatile float iir_wi_block[2*4];
float iir_x_block;
 

void blockInputUpdate(int blockInputUpdate_i) 
{
     386:	20 e5       	ldi	r18, 0x50	; 80
     388:	28 9f       	mul	r18, r24
     38a:	d0 01       	movw	r26, r0
     38c:	29 9f       	mul	r18, r25
     38e:	b0 0d       	add	r27, r0
     390:	11 24       	eor	r1, r1
     392:	a0 53       	subi	r26, 0x30	; 48
     394:	bc 4f       	sbci	r27, 0xFC	; 252
	int iir_coefficients_block_counter0;
	for(iir_coefficients_block_counter0=0;iir_coefficients_block_counter0<5*4;iir_coefficients_block_counter0++){
     396:	20 e0       	ldi	r18, 0x00	; 0
     398:	30 e0       	ldi	r19, 0x00	; 0
		iir_coefficients_block[iir_coefficients_block_counter0]=iir_coefficients_inputs[blockInputUpdate_i][iir_coefficients_block_counter0];
     39a:	4d 91       	ld	r20, X+
     39c:	5d 91       	ld	r21, X+
     39e:	6d 91       	ld	r22, X+
     3a0:	7d 91       	ld	r23, X+
     3a2:	f9 01       	movw	r30, r18
     3a4:	ee 0f       	add	r30, r30
     3a6:	ff 1f       	adc	r31, r31
     3a8:	ee 0f       	add	r30, r30
     3aa:	ff 1f       	adc	r31, r31
     3ac:	ee 53       	subi	r30, 0x3E	; 62
     3ae:	f5 4f       	sbci	r31, 0xF5	; 245
     3b0:	40 83       	st	Z, r20
     3b2:	51 83       	std	Z+1, r21	; 0x01
     3b4:	62 83       	std	Z+2, r22	; 0x02
     3b6:	73 83       	std	Z+3, r23	; 0x03
 

void blockInputUpdate(int blockInputUpdate_i) 
{
	int iir_coefficients_block_counter0;
	for(iir_coefficients_block_counter0=0;iir_coefficients_block_counter0<5*4;iir_coefficients_block_counter0++){
     3b8:	2f 5f       	subi	r18, 0xFF	; 255
     3ba:	3f 4f       	sbci	r19, 0xFF	; 255
     3bc:	24 31       	cpi	r18, 0x14	; 20
     3be:	31 05       	cpc	r19, r1
     3c0:	61 f7       	brne	.-40     	; 0x39a <blockInputUpdate+0x14>
     3c2:	dc 01       	movw	r26, r24
     3c4:	aa 0f       	add	r26, r26
     3c6:	bb 1f       	adc	r27, r27
     3c8:	a2 95       	swap	r26
     3ca:	b2 95       	swap	r27
     3cc:	b0 7f       	andi	r27, 0xF0	; 240
     3ce:	ba 27       	eor	r27, r26
     3d0:	a0 7f       	andi	r26, 0xF0	; 240
     3d2:	ba 27       	eor	r27, r26
     3d4:	a0 5b       	subi	r26, 0xB0	; 176
     3d6:	be 4f       	sbci	r27, 0xFE	; 254
     3d8:	20 e0       	ldi	r18, 0x00	; 0
     3da:	30 e0       	ldi	r19, 0x00	; 0
		iir_coefficients_block[iir_coefficients_block_counter0]=iir_coefficients_inputs[blockInputUpdate_i][iir_coefficients_block_counter0];
	}

	int iir_wi_block_counter0;
	for(iir_wi_block_counter0=0;iir_wi_block_counter0<2*4;iir_wi_block_counter0++){
		iir_wi_block[iir_wi_block_counter0]=iir_wi_inputs[blockInputUpdate_i][iir_wi_block_counter0];
     3dc:	4d 91       	ld	r20, X+
     3de:	5d 91       	ld	r21, X+
     3e0:	6d 91       	ld	r22, X+
     3e2:	7d 91       	ld	r23, X+
     3e4:	f9 01       	movw	r30, r18
     3e6:	ee 0f       	add	r30, r30
     3e8:	ff 1f       	adc	r31, r31
     3ea:	ee 0f       	add	r30, r30
     3ec:	ff 1f       	adc	r31, r31
     3ee:	ee 55       	subi	r30, 0x5E	; 94
     3f0:	f5 4f       	sbci	r31, 0xF5	; 245
     3f2:	40 83       	st	Z, r20
     3f4:	51 83       	std	Z+1, r21	; 0x01
     3f6:	62 83       	std	Z+2, r22	; 0x02
     3f8:	73 83       	std	Z+3, r23	; 0x03
	for(iir_coefficients_block_counter0=0;iir_coefficients_block_counter0<5*4;iir_coefficients_block_counter0++){
		iir_coefficients_block[iir_coefficients_block_counter0]=iir_coefficients_inputs[blockInputUpdate_i][iir_coefficients_block_counter0];
	}

	int iir_wi_block_counter0;
	for(iir_wi_block_counter0=0;iir_wi_block_counter0<2*4;iir_wi_block_counter0++){
     3fa:	2f 5f       	subi	r18, 0xFF	; 255
     3fc:	3f 4f       	sbci	r19, 0xFF	; 255
     3fe:	28 30       	cpi	r18, 0x08	; 8
     400:	31 05       	cpc	r19, r1
     402:	61 f7       	brne	.-40     	; 0x3dc <blockInputUpdate+0x56>
		iir_wi_block[iir_wi_block_counter0]=iir_wi_inputs[blockInputUpdate_i][iir_wi_block_counter0];
	}

	iir_x_block = iir_x_inputs[blockInputUpdate_i];
     404:	88 0f       	add	r24, r24
     406:	99 1f       	adc	r25, r25
     408:	88 0f       	add	r24, r24
     40a:	99 1f       	adc	r25, r25
     40c:	fc 01       	movw	r30, r24
     40e:	e0 50       	subi	r30, 0x00	; 0
     410:	ff 4f       	sbci	r31, 0xFF	; 255
     412:	80 81       	ld	r24, Z
     414:	91 81       	ldd	r25, Z+1	; 0x01
     416:	a2 81       	ldd	r26, Z+2	; 0x02
     418:	b3 81       	ldd	r27, Z+3	; 0x03
     41a:	80 93 9e 0a 	sts	0x0A9E, r24	; 0x800a9e <iir_x_block>
     41e:	90 93 9f 0a 	sts	0x0A9F, r25	; 0x800a9f <iir_x_block+0x1>
     422:	a0 93 a0 0a 	sts	0x0AA0, r26	; 0x800aa0 <iir_x_block+0x2>
     426:	b0 93 a1 0a 	sts	0x0AA1, r27	; 0x800aa1 <iir_x_block+0x3>
	 
	asm(
     42a:	00 92 43 0b 	sts	0x0B43, r0	; 0x800b43 <register_address_block>
     42e:	10 92 44 0b 	sts	0x0B44, r1	; 0x800b44 <register_address_block+0x1>
     432:	20 92 45 0b 	sts	0x0B45, r2	; 0x800b45 <register_address_block+0x2>
     436:	30 92 46 0b 	sts	0x0B46, r3	; 0x800b46 <register_address_block+0x3>
     43a:	40 92 47 0b 	sts	0x0B47, r4	; 0x800b47 <register_address_block+0x4>
     43e:	50 92 48 0b 	sts	0x0B48, r5	; 0x800b48 <register_address_block+0x5>
     442:	60 92 49 0b 	sts	0x0B49, r6	; 0x800b49 <register_address_block+0x6>
     446:	70 92 4a 0b 	sts	0x0B4A, r7	; 0x800b4a <register_address_block+0x7>
     44a:	80 92 4b 0b 	sts	0x0B4B, r8	; 0x800b4b <register_address_block+0x8>
     44e:	90 92 4c 0b 	sts	0x0B4C, r9	; 0x800b4c <register_address_block+0x9>
     452:	a0 92 4d 0b 	sts	0x0B4D, r10	; 0x800b4d <register_address_block+0xa>
     456:	b0 92 4e 0b 	sts	0x0B4E, r11	; 0x800b4e <register_address_block+0xb>
     45a:	c0 92 4f 0b 	sts	0x0B4F, r12	; 0x800b4f <register_address_block+0xc>
     45e:	d0 92 50 0b 	sts	0x0B50, r13	; 0x800b50 <register_address_block+0xd>
     462:	e0 92 51 0b 	sts	0x0B51, r14	; 0x800b51 <register_address_block+0xe>
     466:	f0 92 52 0b 	sts	0x0B52, r15	; 0x800b52 <register_address_block+0xf>
     46a:	00 93 53 0b 	sts	0x0B53, r16	; 0x800b53 <register_address_block+0x10>
     46e:	10 93 54 0b 	sts	0x0B54, r17	; 0x800b54 <register_address_block+0x11>
     472:	20 93 55 0b 	sts	0x0B55, r18	; 0x800b55 <register_address_block+0x12>
     476:	30 93 56 0b 	sts	0x0B56, r19	; 0x800b56 <register_address_block+0x13>
     47a:	40 93 57 0b 	sts	0x0B57, r20	; 0x800b57 <register_address_block+0x14>
     47e:	50 93 58 0b 	sts	0x0B58, r21	; 0x800b58 <register_address_block+0x15>
     482:	60 93 59 0b 	sts	0x0B59, r22	; 0x800b59 <register_address_block+0x16>
     486:	70 93 5a 0b 	sts	0x0B5A, r23	; 0x800b5a <register_address_block+0x17>
     48a:	80 93 5b 0b 	sts	0x0B5B, r24	; 0x800b5b <register_address_block+0x18>
     48e:	90 93 5c 0b 	sts	0x0B5C, r25	; 0x800b5c <register_address_block+0x19>
     492:	a0 93 5d 0b 	sts	0x0B5D, r26	; 0x800b5d <register_address_block+0x1a>
     496:	b0 93 5e 0b 	sts	0x0B5E, r27	; 0x800b5e <register_address_block+0x1b>
     49a:	c0 93 5f 0b 	sts	0x0B5F, r28	; 0x800b5f <register_address_block+0x1c>
     49e:	d0 93 60 0b 	sts	0x0B60, r29	; 0x800b60 <register_address_block+0x1d>
     4a2:	e0 93 61 0b 	sts	0x0B61, r30	; 0x800b61 <register_address_block+0x1e>
     4a6:	f0 93 62 0b 	sts	0x0B62, r31	; 0x800b62 <register_address_block+0x1f>
     4aa:	00 90 43 0b 	lds	r0, 0x0B43	; 0x800b43 <register_address_block>
     4ae:	10 90 44 0b 	lds	r1, 0x0B44	; 0x800b44 <register_address_block+0x1>
     4b2:	20 90 45 0b 	lds	r2, 0x0B45	; 0x800b45 <register_address_block+0x2>
     4b6:	30 90 46 0b 	lds	r3, 0x0B46	; 0x800b46 <register_address_block+0x3>
     4ba:	40 90 47 0b 	lds	r4, 0x0B47	; 0x800b47 <register_address_block+0x4>
     4be:	50 90 48 0b 	lds	r5, 0x0B48	; 0x800b48 <register_address_block+0x5>
     4c2:	60 90 49 0b 	lds	r6, 0x0B49	; 0x800b49 <register_address_block+0x6>
     4c6:	70 90 4a 0b 	lds	r7, 0x0B4A	; 0x800b4a <register_address_block+0x7>
     4ca:	80 90 4b 0b 	lds	r8, 0x0B4B	; 0x800b4b <register_address_block+0x8>
     4ce:	90 90 4c 0b 	lds	r9, 0x0B4C	; 0x800b4c <register_address_block+0x9>
     4d2:	a0 90 4d 0b 	lds	r10, 0x0B4D	; 0x800b4d <register_address_block+0xa>
     4d6:	b0 90 4e 0b 	lds	r11, 0x0B4E	; 0x800b4e <register_address_block+0xb>
     4da:	c0 90 4f 0b 	lds	r12, 0x0B4F	; 0x800b4f <register_address_block+0xc>
     4de:	d0 90 50 0b 	lds	r13, 0x0B50	; 0x800b50 <register_address_block+0xd>
     4e2:	e0 90 51 0b 	lds	r14, 0x0B51	; 0x800b51 <register_address_block+0xe>
     4e6:	f0 90 52 0b 	lds	r15, 0x0B52	; 0x800b52 <register_address_block+0xf>
     4ea:	00 91 53 0b 	lds	r16, 0x0B53	; 0x800b53 <register_address_block+0x10>
     4ee:	10 91 54 0b 	lds	r17, 0x0B54	; 0x800b54 <register_address_block+0x11>
     4f2:	20 91 55 0b 	lds	r18, 0x0B55	; 0x800b55 <register_address_block+0x12>
     4f6:	30 91 56 0b 	lds	r19, 0x0B56	; 0x800b56 <register_address_block+0x13>
     4fa:	40 91 57 0b 	lds	r20, 0x0B57	; 0x800b57 <register_address_block+0x14>
     4fe:	50 91 58 0b 	lds	r21, 0x0B58	; 0x800b58 <register_address_block+0x15>
     502:	60 91 59 0b 	lds	r22, 0x0B59	; 0x800b59 <register_address_block+0x16>
     506:	70 91 5a 0b 	lds	r23, 0x0B5A	; 0x800b5a <register_address_block+0x17>
     50a:	80 91 5b 0b 	lds	r24, 0x0B5B	; 0x800b5b <register_address_block+0x18>
     50e:	90 91 5c 0b 	lds	r25, 0x0B5C	; 0x800b5c <register_address_block+0x19>
     512:	a0 91 5d 0b 	lds	r26, 0x0B5D	; 0x800b5d <register_address_block+0x1a>
     516:	b0 91 5e 0b 	lds	r27, 0x0B5E	; 0x800b5e <register_address_block+0x1b>
     51a:	c0 91 5f 0b 	lds	r28, 0x0B5F	; 0x800b5f <register_address_block+0x1c>
     51e:	d0 91 60 0b 	lds	r29, 0x0B60	; 0x800b60 <register_address_block+0x1d>
     522:	e0 91 61 0b 	lds	r30, 0x0B61	; 0x800b61 <register_address_block+0x1e>
     526:	f0 91 62 0b 	lds	r31, 0x0B62	; 0x800b62 <register_address_block+0x1f>
     52a:	08 95       	ret

0000052c <benchmarkBlock>:
} 
 
/*BLock execution time measurement*/
void benchmarkBlock(void)
{
	asm(
     52c:	00 92 43 0b 	sts	0x0B43, r0	; 0x800b43 <register_address_block>
     530:	10 92 44 0b 	sts	0x0B44, r1	; 0x800b44 <register_address_block+0x1>
     534:	20 92 45 0b 	sts	0x0B45, r2	; 0x800b45 <register_address_block+0x2>
     538:	30 92 46 0b 	sts	0x0B46, r3	; 0x800b46 <register_address_block+0x3>
     53c:	40 92 47 0b 	sts	0x0B47, r4	; 0x800b47 <register_address_block+0x4>
     540:	50 92 48 0b 	sts	0x0B48, r5	; 0x800b48 <register_address_block+0x5>
     544:	60 92 49 0b 	sts	0x0B49, r6	; 0x800b49 <register_address_block+0x6>
     548:	70 92 4a 0b 	sts	0x0B4A, r7	; 0x800b4a <register_address_block+0x7>
     54c:	80 92 4b 0b 	sts	0x0B4B, r8	; 0x800b4b <register_address_block+0x8>
     550:	90 92 4c 0b 	sts	0x0B4C, r9	; 0x800b4c <register_address_block+0x9>
     554:	a0 92 4d 0b 	sts	0x0B4D, r10	; 0x800b4d <register_address_block+0xa>
     558:	b0 92 4e 0b 	sts	0x0B4E, r11	; 0x800b4e <register_address_block+0xb>
     55c:	c0 92 4f 0b 	sts	0x0B4F, r12	; 0x800b4f <register_address_block+0xc>
     560:	d0 92 50 0b 	sts	0x0B50, r13	; 0x800b50 <register_address_block+0xd>
     564:	e0 92 51 0b 	sts	0x0B51, r14	; 0x800b51 <register_address_block+0xe>
     568:	f0 92 52 0b 	sts	0x0B52, r15	; 0x800b52 <register_address_block+0xf>
     56c:	00 93 53 0b 	sts	0x0B53, r16	; 0x800b53 <register_address_block+0x10>
     570:	10 93 54 0b 	sts	0x0B54, r17	; 0x800b54 <register_address_block+0x11>
     574:	20 93 55 0b 	sts	0x0B55, r18	; 0x800b55 <register_address_block+0x12>
     578:	30 93 56 0b 	sts	0x0B56, r19	; 0x800b56 <register_address_block+0x13>
     57c:	40 93 57 0b 	sts	0x0B57, r20	; 0x800b57 <register_address_block+0x14>
     580:	50 93 58 0b 	sts	0x0B58, r21	; 0x800b58 <register_address_block+0x15>
     584:	60 93 59 0b 	sts	0x0B59, r22	; 0x800b59 <register_address_block+0x16>
     588:	70 93 5a 0b 	sts	0x0B5A, r23	; 0x800b5a <register_address_block+0x17>
     58c:	80 93 5b 0b 	sts	0x0B5B, r24	; 0x800b5b <register_address_block+0x18>
     590:	90 93 5c 0b 	sts	0x0B5C, r25	; 0x800b5c <register_address_block+0x19>
     594:	a0 93 5d 0b 	sts	0x0B5D, r26	; 0x800b5d <register_address_block+0x1a>
     598:	b0 93 5e 0b 	sts	0x0B5E, r27	; 0x800b5e <register_address_block+0x1b>
     59c:	c0 93 5f 0b 	sts	0x0B5F, r28	; 0x800b5f <register_address_block+0x1c>
     5a0:	d0 93 60 0b 	sts	0x0B60, r29	; 0x800b60 <register_address_block+0x1d>
     5a4:	e0 93 61 0b 	sts	0x0B61, r30	; 0x800b61 <register_address_block+0x1e>
     5a8:	f0 93 62 0b 	sts	0x0B62, r31	; 0x800b62 <register_address_block+0x1f>
     5ac:	ed b6       	in	r14, 0x3d	; 61
     5ae:	fe b6       	in	r15, 0x3e	; 62
     5b0:	e0 92 36 0b 	sts	0x0B36, r14	; 0x800b36 <stackpointer_address_block>
     5b4:	f0 92 37 0b 	sts	0x0B37, r15	; 0x800b37 <stackpointer_address_block+0x1>
     5b8:	80 e0       	ldi	r24, 0x00	; 0
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	a0 91 36 0b 	lds	r26, 0x0B36	; 0x800b36 <stackpointer_address_block>
     5c0:	b0 91 37 0b 	lds	r27, 0x0B37	; 0x800b37 <stackpointer_address_block+0x1>
     5c4:	e3 e6       	ldi	r30, 0x63	; 99
     5c6:	fb e0       	ldi	r31, 0x0B	; 11
     5c8:	ed 90       	ld	r14, X+
     5ca:	e1 92       	st	Z+, r14
     5cc:	01 96       	adiw	r24, 0x01	; 1
     5ce:	85 32       	cpi	r24, 0x25	; 37
     5d0:	d9 f7       	brne	.-10     	; 0x5c8 <benchmarkBlock+0x9c>
     5d2:	80 e0       	ldi	r24, 0x00	; 0
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	a0 91 41 0b 	lds	r26, 0x0B41	; 0x800b41 <stackpointer_address_org>
     5da:	b0 91 42 0b 	lds	r27, 0x0B42	; 0x800b42 <stackpointer_address_org+0x1>
     5de:	e8 e3       	ldi	r30, 0x38	; 56
     5e0:	fb e0       	ldi	r31, 0x0B	; 11
     5e2:	e1 90       	ld	r14, Z+
     5e4:	ed 92       	st	X+, r14
     5e6:	01 96       	adiw	r24, 0x01	; 1
     5e8:	89 30       	cpi	r24, 0x09	; 9
     5ea:	d9 f7       	brne	.-10     	; 0x5e2 <benchmarkBlock+0xb6>
     5ec:	00 90 14 0b 	lds	r0, 0x0B14	; 0x800b14 <register_address_org>
     5f0:	10 90 15 0b 	lds	r1, 0x0B15	; 0x800b15 <register_address_org+0x1>
     5f4:	20 90 16 0b 	lds	r2, 0x0B16	; 0x800b16 <register_address_org+0x2>
     5f8:	30 90 17 0b 	lds	r3, 0x0B17	; 0x800b17 <register_address_org+0x3>
     5fc:	40 90 18 0b 	lds	r4, 0x0B18	; 0x800b18 <register_address_org+0x4>
     600:	50 90 19 0b 	lds	r5, 0x0B19	; 0x800b19 <register_address_org+0x5>
     604:	60 90 1a 0b 	lds	r6, 0x0B1A	; 0x800b1a <register_address_org+0x6>
     608:	70 90 1b 0b 	lds	r7, 0x0B1B	; 0x800b1b <register_address_org+0x7>
     60c:	80 90 1c 0b 	lds	r8, 0x0B1C	; 0x800b1c <register_address_org+0x8>
     610:	90 90 1d 0b 	lds	r9, 0x0B1D	; 0x800b1d <register_address_org+0x9>
     614:	a0 90 1e 0b 	lds	r10, 0x0B1E	; 0x800b1e <register_address_org+0xa>
     618:	b0 90 1f 0b 	lds	r11, 0x0B1F	; 0x800b1f <register_address_org+0xb>
     61c:	c0 90 20 0b 	lds	r12, 0x0B20	; 0x800b20 <register_address_org+0xc>
     620:	d0 90 21 0b 	lds	r13, 0x0B21	; 0x800b21 <register_address_org+0xd>
     624:	e0 90 22 0b 	lds	r14, 0x0B22	; 0x800b22 <register_address_org+0xe>
     628:	f0 90 23 0b 	lds	r15, 0x0B23	; 0x800b23 <register_address_org+0xf>
     62c:	00 91 24 0b 	lds	r16, 0x0B24	; 0x800b24 <register_address_org+0x10>
     630:	10 91 25 0b 	lds	r17, 0x0B25	; 0x800b25 <register_address_org+0x11>
     634:	20 91 26 0b 	lds	r18, 0x0B26	; 0x800b26 <register_address_org+0x12>
     638:	30 91 27 0b 	lds	r19, 0x0B27	; 0x800b27 <register_address_org+0x13>
     63c:	40 91 28 0b 	lds	r20, 0x0B28	; 0x800b28 <register_address_org+0x14>
     640:	50 91 29 0b 	lds	r21, 0x0B29	; 0x800b29 <register_address_org+0x15>
     644:	60 91 2a 0b 	lds	r22, 0x0B2A	; 0x800b2a <register_address_org+0x16>
     648:	70 91 2b 0b 	lds	r23, 0x0B2B	; 0x800b2b <register_address_org+0x17>
     64c:	80 91 2c 0b 	lds	r24, 0x0B2C	; 0x800b2c <register_address_org+0x18>
     650:	90 91 2d 0b 	lds	r25, 0x0B2D	; 0x800b2d <register_address_org+0x19>
     654:	a0 91 2e 0b 	lds	r26, 0x0B2E	; 0x800b2e <register_address_org+0x1a>
     658:	b0 91 2f 0b 	lds	r27, 0x0B2F	; 0x800b2f <register_address_org+0x1b>
     65c:	c0 91 30 0b 	lds	r28, 0x0B30	; 0x800b30 <register_address_org+0x1c>
     660:	d0 91 31 0b 	lds	r29, 0x0B31	; 0x800b31 <register_address_org+0x1d>
     664:	e0 91 32 0b 	lds	r30, 0x0B32	; 0x800b32 <register_address_org+0x1e>
     668:	f0 91 33 0b 	lds	r31, 0x0B33	; 0x800b33 <register_address_org+0x1f>
     66c:	80 e1       	ldi	r24, 0x10	; 16
     66e:	88 b9       	out	0x08, r24	; 8
     670:	80 91 2c 0b 	lds	r24, 0x0B2C	; 0x800b2c <register_address_org+0x18>

00000674 <BlockContent_Start>:
     674:	40 90 7a 0a 	lds	r4, 0x0A7A	; 0x800a7a <iir_x>
     678:	50 90 7b 0a 	lds	r5, 0x0A7B	; 0x800a7b <iir_x+0x1>
     67c:	60 90 7c 0a 	lds	r6, 0x0A7C	; 0x800a7c <iir_x+0x2>
     680:	70 90 7d 0a 	lds	r7, 0x0A7D	; 0x800a7d <iir_x+0x3>

00000684 <BlockContent_End>:
     684:	18 b8       	out	0x08, r1	; 8
     686:	80 e0       	ldi	r24, 0x00	; 0
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	a0 91 36 0b 	lds	r26, 0x0B36	; 0x800b36 <stackpointer_address_block>
     68e:	b0 91 37 0b 	lds	r27, 0x0B37	; 0x800b37 <stackpointer_address_block+0x1>
     692:	e3 e6       	ldi	r30, 0x63	; 99
     694:	fb e0       	ldi	r31, 0x0B	; 11
     696:	e1 90       	ld	r14, Z+
     698:	ed 92       	st	X+, r14
     69a:	01 96       	adiw	r24, 0x01	; 1
     69c:	85 32       	cpi	r24, 0x25	; 37
     69e:	d9 f7       	brne	.-10     	; 0x696 <BlockContent_End+0x12>
     6a0:	00 90 43 0b 	lds	r0, 0x0B43	; 0x800b43 <register_address_block>
     6a4:	10 90 44 0b 	lds	r1, 0x0B44	; 0x800b44 <register_address_block+0x1>
     6a8:	20 90 45 0b 	lds	r2, 0x0B45	; 0x800b45 <register_address_block+0x2>
     6ac:	30 90 46 0b 	lds	r3, 0x0B46	; 0x800b46 <register_address_block+0x3>
     6b0:	40 90 47 0b 	lds	r4, 0x0B47	; 0x800b47 <register_address_block+0x4>
     6b4:	50 90 48 0b 	lds	r5, 0x0B48	; 0x800b48 <register_address_block+0x5>
     6b8:	60 90 49 0b 	lds	r6, 0x0B49	; 0x800b49 <register_address_block+0x6>
     6bc:	70 90 4a 0b 	lds	r7, 0x0B4A	; 0x800b4a <register_address_block+0x7>
     6c0:	80 90 4b 0b 	lds	r8, 0x0B4B	; 0x800b4b <register_address_block+0x8>
     6c4:	90 90 4c 0b 	lds	r9, 0x0B4C	; 0x800b4c <register_address_block+0x9>
     6c8:	a0 90 4d 0b 	lds	r10, 0x0B4D	; 0x800b4d <register_address_block+0xa>
     6cc:	b0 90 4e 0b 	lds	r11, 0x0B4E	; 0x800b4e <register_address_block+0xb>
     6d0:	c0 90 4f 0b 	lds	r12, 0x0B4F	; 0x800b4f <register_address_block+0xc>
     6d4:	d0 90 50 0b 	lds	r13, 0x0B50	; 0x800b50 <register_address_block+0xd>
     6d8:	e0 90 51 0b 	lds	r14, 0x0B51	; 0x800b51 <register_address_block+0xe>
     6dc:	f0 90 52 0b 	lds	r15, 0x0B52	; 0x800b52 <register_address_block+0xf>
     6e0:	00 91 53 0b 	lds	r16, 0x0B53	; 0x800b53 <register_address_block+0x10>
     6e4:	10 91 54 0b 	lds	r17, 0x0B54	; 0x800b54 <register_address_block+0x11>
     6e8:	20 91 55 0b 	lds	r18, 0x0B55	; 0x800b55 <register_address_block+0x12>
     6ec:	30 91 56 0b 	lds	r19, 0x0B56	; 0x800b56 <register_address_block+0x13>
     6f0:	40 91 57 0b 	lds	r20, 0x0B57	; 0x800b57 <register_address_block+0x14>
     6f4:	50 91 58 0b 	lds	r21, 0x0B58	; 0x800b58 <register_address_block+0x15>
     6f8:	60 91 59 0b 	lds	r22, 0x0B59	; 0x800b59 <register_address_block+0x16>
     6fc:	70 91 5a 0b 	lds	r23, 0x0B5A	; 0x800b5a <register_address_block+0x17>
     700:	80 91 5b 0b 	lds	r24, 0x0B5B	; 0x800b5b <register_address_block+0x18>
     704:	90 91 5c 0b 	lds	r25, 0x0B5C	; 0x800b5c <register_address_block+0x19>
     708:	a0 91 5d 0b 	lds	r26, 0x0B5D	; 0x800b5d <register_address_block+0x1a>
     70c:	b0 91 5e 0b 	lds	r27, 0x0B5E	; 0x800b5e <register_address_block+0x1b>
     710:	c0 91 5f 0b 	lds	r28, 0x0B5F	; 0x800b5f <register_address_block+0x1c>
     714:	d0 91 60 0b 	lds	r29, 0x0B60	; 0x800b60 <register_address_block+0x1d>
     718:	e0 91 61 0b 	lds	r30, 0x0B61	; 0x800b61 <register_address_block+0x1e>
     71c:	f0 91 62 0b 	lds	r31, 0x0B62	; 0x800b62 <register_address_block+0x1f>
     720:	e0 90 51 0b 	lds	r14, 0x0B51	; 0x800b51 <register_address_block+0xe>
     724:	f0 90 52 0b 	lds	r15, 0x0B52	; 0x800b52 <register_address_block+0xf>
     728:	08 95       	ret

0000072a <uart_putchar>:
	}
}

/*USART*/
int uart_putchar(char c, FILE *stream)
{
     72a:	cf 93       	push	r28
     72c:	c8 2f       	mov	r28, r24
	if (c == '\n') uart_putchar('\r', stream);
     72e:	8a 30       	cpi	r24, 0x0A	; 10
     730:	11 f4       	brne	.+4      	; 0x736 <uart_putchar+0xc>
     732:	8d e0       	ldi	r24, 0x0D	; 13
     734:	fa df       	rcall	.-12     	; 0x72a <uart_putchar>
	while( ! ( UCSR0A & (1 << UDRE0)));
     736:	e0 ec       	ldi	r30, 0xC0	; 192
     738:	f0 e0       	ldi	r31, 0x00	; 0
     73a:	90 81       	ld	r25, Z
     73c:	95 ff       	sbrs	r25, 5
     73e:	fd cf       	rjmp	.-6      	; 0x73a <uart_putchar+0x10>
	UDR0 = c;
     740:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
     744:	80 e0       	ldi	r24, 0x00	; 0
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	cf 91       	pop	r28
     74a:	08 95       	ret

0000074c <main>:
volatile char stackpointer_address_org[pointer_length];
volatile char stackpointer_address_block[pointer_length];
FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_RW); 

/*main function*/
int main(void){
     74c:	cf 93       	push	r28
     74e:	df 93       	push	r29

	/*Initialize the pointer and register address variables*/
	int x_registercounter;
	for(x_registercounter=0; x_registercounter < pointer_length; x_registercounter++){
		register_address_r14r15[x_registercounter]=0;
     750:	84 e3       	ldi	r24, 0x34	; 52
     752:	9b e0       	ldi	r25, 0x0B	; 11
     754:	dc 01       	movw	r26, r24
     756:	1c 92       	st	X, r1
		framepointer_address[x_registercounter]=0;
     758:	c2 e1       	ldi	r28, 0x12	; 18
     75a:	db e0       	ldi	r29, 0x0B	; 11
     75c:	18 82       	st	Y, r1
		stackpointer_address_org[x_registercounter]=0;
     75e:	21 e4       	ldi	r18, 0x41	; 65
     760:	3b e0       	ldi	r19, 0x0B	; 11
     762:	f9 01       	movw	r30, r18
     764:	10 82       	st	Z, r1
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
     766:	e6 e3       	ldi	r30, 0x36	; 54
     768:	fb e0       	ldi	r31, 0x0B	; 11
     76a:	10 82       	st	Z, r1
     76c:	10 82       	st	Z, r1
int main(void){

	/*Initialize the pointer and register address variables*/
	int x_registercounter;
	for(x_registercounter=0; x_registercounter < pointer_length; x_registercounter++){
		register_address_r14r15[x_registercounter]=0;
     76e:	11 96       	adiw	r26, 0x01	; 1
     770:	1c 92       	st	X, r1
		framepointer_address[x_registercounter]=0;
     772:	19 82       	std	Y+1, r1	; 0x01
		stackpointer_address_org[x_registercounter]=0;
     774:	d9 01       	movw	r26, r18
     776:	11 96       	adiw	r26, 0x01	; 1
     778:	1c 92       	st	X, r1
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
     77a:	11 82       	std	Z+1, r1	; 0x01
     77c:	11 82       	std	Z+1, r1	; 0x01
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	90 e0       	ldi	r25, 0x00	; 0
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
	register_address_org[x_registercounter];
     782:	fc 01       	movw	r30, r24
     784:	ec 5e       	subi	r30, 0xEC	; 236
     786:	f4 4f       	sbci	r31, 0xF4	; 244
     788:	20 81       	ld	r18, Z
	register_address_block[x_registercounter];
     78a:	fc 01       	movw	r30, r24
     78c:	ed 5b       	subi	r30, 0xBD	; 189
     78e:	f4 4f       	sbci	r31, 0xF4	; 244
     790:	20 81       	ld	r18, Z
		register_address_r14r15[x_registercounter]=0;
		framepointer_address[x_registercounter]=0;
		stackpointer_address_org[x_registercounter]=0;
		stackpointer_address_block[x_registercounter]=0 ;stackpointer_address_block[x_registercounter]=0 ;
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
     792:	01 96       	adiw	r24, 0x01	; 1
     794:	80 32       	cpi	r24, 0x20	; 32
     796:	91 05       	cpc	r25, r1
     798:	a1 f7       	brne	.-24     	; 0x782 <main+0x36>
     79a:	80 e0       	ldi	r24, 0x00	; 0
     79c:	90 e0       	ldi	r25, 0x00	; 0
	register_address_org[x_registercounter];
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
	stack_address_org[x_registercounter];
     79e:	fc 01       	movw	r30, r24
     7a0:	e8 5c       	subi	r30, 0xC8	; 200
     7a2:	f4 4f       	sbci	r31, 0xF4	; 244
     7a4:	20 81       	ld	r18, Z
	}
	for(x_registercounter=0; x_registercounter < register_length; x_registercounter++){
	register_address_org[x_registercounter];
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
     7a6:	01 96       	adiw	r24, 0x01	; 1
     7a8:	89 30       	cpi	r24, 0x09	; 9
     7aa:	91 05       	cpc	r25, r1
     7ac:	c1 f7       	brne	.-16     	; 0x79e <main+0x52>
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	90 e0       	ldi	r25, 0x00	; 0
	stack_address_org[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_block; x_registercounter++){
	stack_address_block[x_registercounter];
     7b2:	fc 01       	movw	r30, r24
     7b4:	ed 59       	subi	r30, 0x9D	; 157
     7b6:	f4 4f       	sbci	r31, 0xF4	; 244
     7b8:	20 81       	ld	r18, Z
	register_address_block[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_org; x_registercounter++){
	stack_address_org[x_registercounter];
	}
	for(x_registercounter=0; x_registercounter < stack_length_block; x_registercounter++){
     7ba:	01 96       	adiw	r24, 0x01	; 1
     7bc:	89 31       	cpi	r24, 0x19	; 25
     7be:	91 05       	cpc	r25, r1
     7c0:	c1 f7       	brne	.-16     	; 0x7b2 <main+0x66>
	stack_address_block[x_registercounter];
	}
	asm(
     7c2:	ed b6       	in	r14, 0x3d	; 61
     7c4:	fe b6       	in	r15, 0x3e	; 62
     7c6:	e0 92 12 0b 	sts	0x0B12, r14	; 0x800b12 <framepointer_address>
     7ca:	f0 92 13 0b 	sts	0x0B13, r15	; 0x800b13 <framepointer_address+0x1>
	"in	r15, 0x3e\n\t"
	"sts	0x0b12, r14\n\t"
	"sts	0xb13, r15\n\t"
	);
	/*GPIO Pins*/
	DDRA = 0x00;
     7ce:	11 b8       	out	0x01, r1	; 1
	DDRC = 0xF0;
     7d0:	80 ef       	ldi	r24, 0xF0	; 240
     7d2:	87 b9       	out	0x07, r24	; 7
	/*External interrupt settings*/
	PORTD = (1 << PD1);
     7d4:	82 e0       	ldi	r24, 0x02	; 2
     7d6:	8b b9       	out	0x0b, r24	; 11
	EICRA =	(1 << ISC11) | (0 << ISC10);
     7d8:	98 e0       	ldi	r25, 0x08	; 8
     7da:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK = (1 << INT1);
     7de:	8d bb       	out	0x1d, r24	; 29
	/*Serial port configuration*/
	UBRR0H = (RBAUD >> 8);
     7e0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L =  RBAUD;
     7e4:	83 e3       	ldi	r24, 0x33	; 51
     7e6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0) | (1 << RXEN0);
     7ea:	88 e1       	ldi	r24, 0x18	; 24
     7ec:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     7f0:	86 e0       	ldi	r24, 0x06	; 6
     7f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	/*Execute the complete original code*/
	iir_init();
     7f6:	6d dc       	rcall	.-1830   	; 0xd2 <iir_init>
	iir_main();
     7f8:	d9 dc       	rcall	.-1614   	; 0x1ac <iir_main>
	iir_return();
     7fa:	bc dc       	rcall	.-1672   	; 0x174 <iir_return>
	/*Enable FPGA Interupt trigger*/
	PORTC = (1 << PC5);
     7fc:	80 e2       	ldi	r24, 0x20	; 32
     7fe:	88 b9       	out	0x08, r24	; 8
	PORTC = (0 << PC5);
     800:	18 b8       	out	0x08, r1	; 8
	/*Enable external interrupt handler*/
	sei();
     802:	78 94       	sei
	/*while loop*/
	while(measurementRoundCounter<20){}
     804:	80 91 28 0a 	lds	r24, 0x0A28	; 0x800a28 <__data_end>
     808:	90 91 29 0a 	lds	r25, 0x0A29	; 0x800a29 <__data_end+0x1>
     80c:	84 31       	cpi	r24, 0x14	; 20
     80e:	91 05       	cpc	r25, r1
     810:	ec f3       	brlt	.-6      	; 0x80c <main+0xc0>
	/*Return*/
	return(1);
}
     812:	81 e0       	ldi	r24, 0x01	; 1
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	df 91       	pop	r29
     818:	cf 91       	pop	r28
     81a:	08 95       	ret

0000081c <__vector_2>:

/*Interrupt handler*/
ISR(INT1_vect){
     81c:	1f 92       	push	r1
     81e:	0f 92       	push	r0
     820:	0f b6       	in	r0, 0x3f	; 63
     822:	0f 92       	push	r0
     824:	11 24       	eor	r1, r1
     826:	0b b6       	in	r0, 0x3b	; 59
     828:	0f 92       	push	r0
     82a:	0f 93       	push	r16
     82c:	1f 93       	push	r17
     82e:	2f 93       	push	r18
     830:	3f 93       	push	r19
     832:	4f 93       	push	r20
     834:	5f 93       	push	r21
     836:	6f 93       	push	r22
     838:	7f 93       	push	r23
     83a:	8f 93       	push	r24
     83c:	9f 93       	push	r25
     83e:	af 93       	push	r26
     840:	bf 93       	push	r27
     842:	cf 93       	push	r28
     844:	df 93       	push	r29
     846:	ef 93       	push	r30
     848:	ff 93       	push	r31

	/*Read input values*/
	blockInputUpdate(measurementRoundCounter);
     84a:	80 91 28 0a 	lds	r24, 0x0A28	; 0x800a28 <__data_end>
     84e:	90 91 29 0a 	lds	r25, 0x0A29	; 0x800a29 <__data_end+0x1>
     852:	99 dd       	rcall	.-1230   	; 0x386 <blockInputUpdate>
	/*Measure the execution time of the code block*/
	benchmarkBlock();
     854:	6b de       	rcall	.-810    	; 0x52c <benchmarkBlock>
	/*Update measurement round counter*/
	measurementRoundCounter++;
     856:	80 91 28 0a 	lds	r24, 0x0A28	; 0x800a28 <__data_end>
     85a:	90 91 29 0a 	lds	r25, 0x0A29	; 0x800a29 <__data_end+0x1>
     85e:	01 96       	adiw	r24, 0x01	; 1
     860:	90 93 29 0a 	sts	0x0A29, r25	; 0x800a29 <__data_end+0x1>
     864:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__data_end>
	/*Print pointer values*/
	if(measurementRoundCounter==1){
     868:	01 97       	sbiw	r24, 0x01	; 1
     86a:	99 f5       	brne	.+102    	; 0x8d2 <__vector_2+0xb6>
		fprintf(&mystdout,"%02x%02x\n",framepointer_address[1],framepointer_address[0]);
     86c:	e2 e1       	ldi	r30, 0x12	; 18
     86e:	fb e0       	ldi	r31, 0x0B	; 11
     870:	90 81       	ld	r25, Z
     872:	81 81       	ldd	r24, Z+1	; 0x01
     874:	1f 92       	push	r1
     876:	9f 93       	push	r25
     878:	1f 92       	push	r1
     87a:	8f 93       	push	r24
     87c:	0e e1       	ldi	r16, 0x1E	; 30
     87e:	1a e0       	ldi	r17, 0x0A	; 10
     880:	1f 93       	push	r17
     882:	0f 93       	push	r16
     884:	c0 e1       	ldi	r28, 0x10	; 16
     886:	da e0       	ldi	r29, 0x0A	; 10
     888:	df 93       	push	r29
     88a:	cf 93       	push	r28
     88c:	83 d1       	rcall	.+774    	; 0xb94 <fprintf>
		fprintf(&mystdout,"%02x%02x\n",stackpointer_address_org[1],stackpointer_address_org[0]);
     88e:	e1 e4       	ldi	r30, 0x41	; 65
     890:	fb e0       	ldi	r31, 0x0B	; 11
     892:	90 81       	ld	r25, Z
     894:	81 81       	ldd	r24, Z+1	; 0x01
     896:	1f 92       	push	r1
     898:	9f 93       	push	r25
     89a:	1f 92       	push	r1
     89c:	8f 93       	push	r24
     89e:	1f 93       	push	r17
     8a0:	0f 93       	push	r16
     8a2:	df 93       	push	r29
     8a4:	cf 93       	push	r28
     8a6:	76 d1       	rcall	.+748    	; 0xb94 <fprintf>
		fprintf(&mystdout,"%02x%02x\n",stackpointer_address_block[1],stackpointer_address_block[0]);
     8a8:	e6 e3       	ldi	r30, 0x36	; 54
     8aa:	fb e0       	ldi	r31, 0x0B	; 11
     8ac:	90 81       	ld	r25, Z
     8ae:	81 81       	ldd	r24, Z+1	; 0x01
     8b0:	1f 92       	push	r1
     8b2:	9f 93       	push	r25
     8b4:	1f 92       	push	r1
     8b6:	8f 93       	push	r24
     8b8:	1f 93       	push	r17
     8ba:	0f 93       	push	r16
     8bc:	df 93       	push	r29
     8be:	cf 93       	push	r28
     8c0:	69 d1       	rcall	.+722    	; 0xb94 <fprintf>
     8c2:	8d b7       	in	r24, 0x3d	; 61
     8c4:	9e b7       	in	r25, 0x3e	; 62
     8c6:	48 96       	adiw	r24, 0x18	; 24
     8c8:	0f b6       	in	r0, 0x3f	; 63
     8ca:	f8 94       	cli
     8cc:	9e bf       	out	0x3e, r25	; 62
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	8d bf       	out	0x3d, r24	; 61
	}
}
     8d2:	ff 91       	pop	r31
     8d4:	ef 91       	pop	r30
     8d6:	df 91       	pop	r29
     8d8:	cf 91       	pop	r28
     8da:	bf 91       	pop	r27
     8dc:	af 91       	pop	r26
     8de:	9f 91       	pop	r25
     8e0:	8f 91       	pop	r24
     8e2:	7f 91       	pop	r23
     8e4:	6f 91       	pop	r22
     8e6:	5f 91       	pop	r21
     8e8:	4f 91       	pop	r20
     8ea:	3f 91       	pop	r19
     8ec:	2f 91       	pop	r18
     8ee:	1f 91       	pop	r17
     8f0:	0f 91       	pop	r16
     8f2:	0f 90       	pop	r0
     8f4:	0b be       	out	0x3b, r0	; 59
     8f6:	0f 90       	pop	r0
     8f8:	0f be       	out	0x3f, r0	; 63
     8fa:	0f 90       	pop	r0
     8fc:	1f 90       	pop	r1
     8fe:	18 95       	reti

00000900 <__subsf3>:
     900:	50 58       	subi	r21, 0x80	; 128

00000902 <__addsf3>:
     902:	bb 27       	eor	r27, r27
     904:	aa 27       	eor	r26, r26
     906:	0e d0       	rcall	.+28     	; 0x924 <__addsf3x>
     908:	a8 c0       	rjmp	.+336    	; 0xa5a <__fp_round>
     90a:	99 d0       	rcall	.+306    	; 0xa3e <__fp_pscA>
     90c:	30 f0       	brcs	.+12     	; 0x91a <__addsf3+0x18>
     90e:	9e d0       	rcall	.+316    	; 0xa4c <__fp_pscB>
     910:	20 f0       	brcs	.+8      	; 0x91a <__addsf3+0x18>
     912:	31 f4       	brne	.+12     	; 0x920 <__addsf3+0x1e>
     914:	9f 3f       	cpi	r25, 0xFF	; 255
     916:	11 f4       	brne	.+4      	; 0x91c <__addsf3+0x1a>
     918:	1e f4       	brtc	.+6      	; 0x920 <__addsf3+0x1e>
     91a:	8e c0       	rjmp	.+284    	; 0xa38 <__fp_nan>
     91c:	0e f4       	brtc	.+2      	; 0x920 <__addsf3+0x1e>
     91e:	e0 95       	com	r30
     920:	e7 fb       	bst	r30, 7
     922:	84 c0       	rjmp	.+264    	; 0xa2c <__fp_inf>

00000924 <__addsf3x>:
     924:	e9 2f       	mov	r30, r25
     926:	aa d0       	rcall	.+340    	; 0xa7c <__fp_split3>
     928:	80 f3       	brcs	.-32     	; 0x90a <__addsf3+0x8>
     92a:	ba 17       	cp	r27, r26
     92c:	62 07       	cpc	r22, r18
     92e:	73 07       	cpc	r23, r19
     930:	84 07       	cpc	r24, r20
     932:	95 07       	cpc	r25, r21
     934:	18 f0       	brcs	.+6      	; 0x93c <__addsf3x+0x18>
     936:	71 f4       	brne	.+28     	; 0x954 <__addsf3x+0x30>
     938:	9e f5       	brtc	.+102    	; 0x9a0 <__addsf3x+0x7c>
     93a:	c2 c0       	rjmp	.+388    	; 0xac0 <__fp_zero>
     93c:	0e f4       	brtc	.+2      	; 0x940 <__addsf3x+0x1c>
     93e:	e0 95       	com	r30
     940:	0b 2e       	mov	r0, r27
     942:	ba 2f       	mov	r27, r26
     944:	a0 2d       	mov	r26, r0
     946:	0b 01       	movw	r0, r22
     948:	b9 01       	movw	r22, r18
     94a:	90 01       	movw	r18, r0
     94c:	0c 01       	movw	r0, r24
     94e:	ca 01       	movw	r24, r20
     950:	a0 01       	movw	r20, r0
     952:	11 24       	eor	r1, r1
     954:	ff 27       	eor	r31, r31
     956:	59 1b       	sub	r21, r25
     958:	99 f0       	breq	.+38     	; 0x980 <__addsf3x+0x5c>
     95a:	59 3f       	cpi	r21, 0xF9	; 249
     95c:	50 f4       	brcc	.+20     	; 0x972 <__addsf3x+0x4e>
     95e:	50 3e       	cpi	r21, 0xE0	; 224
     960:	68 f1       	brcs	.+90     	; 0x9bc <__addsf3x+0x98>
     962:	1a 16       	cp	r1, r26
     964:	f0 40       	sbci	r31, 0x00	; 0
     966:	a2 2f       	mov	r26, r18
     968:	23 2f       	mov	r18, r19
     96a:	34 2f       	mov	r19, r20
     96c:	44 27       	eor	r20, r20
     96e:	58 5f       	subi	r21, 0xF8	; 248
     970:	f3 cf       	rjmp	.-26     	; 0x958 <__addsf3x+0x34>
     972:	46 95       	lsr	r20
     974:	37 95       	ror	r19
     976:	27 95       	ror	r18
     978:	a7 95       	ror	r26
     97a:	f0 40       	sbci	r31, 0x00	; 0
     97c:	53 95       	inc	r21
     97e:	c9 f7       	brne	.-14     	; 0x972 <__addsf3x+0x4e>
     980:	7e f4       	brtc	.+30     	; 0x9a0 <__addsf3x+0x7c>
     982:	1f 16       	cp	r1, r31
     984:	ba 0b       	sbc	r27, r26
     986:	62 0b       	sbc	r22, r18
     988:	73 0b       	sbc	r23, r19
     98a:	84 0b       	sbc	r24, r20
     98c:	ba f0       	brmi	.+46     	; 0x9bc <__addsf3x+0x98>
     98e:	91 50       	subi	r25, 0x01	; 1
     990:	a1 f0       	breq	.+40     	; 0x9ba <__addsf3x+0x96>
     992:	ff 0f       	add	r31, r31
     994:	bb 1f       	adc	r27, r27
     996:	66 1f       	adc	r22, r22
     998:	77 1f       	adc	r23, r23
     99a:	88 1f       	adc	r24, r24
     99c:	c2 f7       	brpl	.-16     	; 0x98e <__addsf3x+0x6a>
     99e:	0e c0       	rjmp	.+28     	; 0x9bc <__addsf3x+0x98>
     9a0:	ba 0f       	add	r27, r26
     9a2:	62 1f       	adc	r22, r18
     9a4:	73 1f       	adc	r23, r19
     9a6:	84 1f       	adc	r24, r20
     9a8:	48 f4       	brcc	.+18     	; 0x9bc <__addsf3x+0x98>
     9aa:	87 95       	ror	r24
     9ac:	77 95       	ror	r23
     9ae:	67 95       	ror	r22
     9b0:	b7 95       	ror	r27
     9b2:	f7 95       	ror	r31
     9b4:	9e 3f       	cpi	r25, 0xFE	; 254
     9b6:	08 f0       	brcs	.+2      	; 0x9ba <__addsf3x+0x96>
     9b8:	b3 cf       	rjmp	.-154    	; 0x920 <__addsf3+0x1e>
     9ba:	93 95       	inc	r25
     9bc:	88 0f       	add	r24, r24
     9be:	08 f0       	brcs	.+2      	; 0x9c2 <__addsf3x+0x9e>
     9c0:	99 27       	eor	r25, r25
     9c2:	ee 0f       	add	r30, r30
     9c4:	97 95       	ror	r25
     9c6:	87 95       	ror	r24
     9c8:	08 95       	ret

000009ca <__fixsfsi>:
     9ca:	04 d0       	rcall	.+8      	; 0x9d4 <__fixunssfsi>
     9cc:	68 94       	set
     9ce:	b1 11       	cpse	r27, r1
     9d0:	78 c0       	rjmp	.+240    	; 0xac2 <__fp_szero>
     9d2:	08 95       	ret

000009d4 <__fixunssfsi>:
     9d4:	5b d0       	rcall	.+182    	; 0xa8c <__fp_splitA>
     9d6:	88 f0       	brcs	.+34     	; 0x9fa <__fixunssfsi+0x26>
     9d8:	9f 57       	subi	r25, 0x7F	; 127
     9da:	90 f0       	brcs	.+36     	; 0xa00 <__fixunssfsi+0x2c>
     9dc:	b9 2f       	mov	r27, r25
     9de:	99 27       	eor	r25, r25
     9e0:	b7 51       	subi	r27, 0x17	; 23
     9e2:	a0 f0       	brcs	.+40     	; 0xa0c <__fixunssfsi+0x38>
     9e4:	d1 f0       	breq	.+52     	; 0xa1a <__fixunssfsi+0x46>
     9e6:	66 0f       	add	r22, r22
     9e8:	77 1f       	adc	r23, r23
     9ea:	88 1f       	adc	r24, r24
     9ec:	99 1f       	adc	r25, r25
     9ee:	1a f0       	brmi	.+6      	; 0x9f6 <__fixunssfsi+0x22>
     9f0:	ba 95       	dec	r27
     9f2:	c9 f7       	brne	.-14     	; 0x9e6 <__fixunssfsi+0x12>
     9f4:	12 c0       	rjmp	.+36     	; 0xa1a <__fixunssfsi+0x46>
     9f6:	b1 30       	cpi	r27, 0x01	; 1
     9f8:	81 f0       	breq	.+32     	; 0xa1a <__fixunssfsi+0x46>
     9fa:	62 d0       	rcall	.+196    	; 0xac0 <__fp_zero>
     9fc:	b1 e0       	ldi	r27, 0x01	; 1
     9fe:	08 95       	ret
     a00:	5f c0       	rjmp	.+190    	; 0xac0 <__fp_zero>
     a02:	67 2f       	mov	r22, r23
     a04:	78 2f       	mov	r23, r24
     a06:	88 27       	eor	r24, r24
     a08:	b8 5f       	subi	r27, 0xF8	; 248
     a0a:	39 f0       	breq	.+14     	; 0xa1a <__fixunssfsi+0x46>
     a0c:	b9 3f       	cpi	r27, 0xF9	; 249
     a0e:	cc f3       	brlt	.-14     	; 0xa02 <__fixunssfsi+0x2e>
     a10:	86 95       	lsr	r24
     a12:	77 95       	ror	r23
     a14:	67 95       	ror	r22
     a16:	b3 95       	inc	r27
     a18:	d9 f7       	brne	.-10     	; 0xa10 <__fixunssfsi+0x3c>
     a1a:	3e f4       	brtc	.+14     	; 0xa2a <__fixunssfsi+0x56>
     a1c:	90 95       	com	r25
     a1e:	80 95       	com	r24
     a20:	70 95       	com	r23
     a22:	61 95       	neg	r22
     a24:	7f 4f       	sbci	r23, 0xFF	; 255
     a26:	8f 4f       	sbci	r24, 0xFF	; 255
     a28:	9f 4f       	sbci	r25, 0xFF	; 255
     a2a:	08 95       	ret

00000a2c <__fp_inf>:
     a2c:	97 f9       	bld	r25, 7
     a2e:	9f 67       	ori	r25, 0x7F	; 127
     a30:	80 e8       	ldi	r24, 0x80	; 128
     a32:	70 e0       	ldi	r23, 0x00	; 0
     a34:	60 e0       	ldi	r22, 0x00	; 0
     a36:	08 95       	ret

00000a38 <__fp_nan>:
     a38:	9f ef       	ldi	r25, 0xFF	; 255
     a3a:	80 ec       	ldi	r24, 0xC0	; 192
     a3c:	08 95       	ret

00000a3e <__fp_pscA>:
     a3e:	00 24       	eor	r0, r0
     a40:	0a 94       	dec	r0
     a42:	16 16       	cp	r1, r22
     a44:	17 06       	cpc	r1, r23
     a46:	18 06       	cpc	r1, r24
     a48:	09 06       	cpc	r0, r25
     a4a:	08 95       	ret

00000a4c <__fp_pscB>:
     a4c:	00 24       	eor	r0, r0
     a4e:	0a 94       	dec	r0
     a50:	12 16       	cp	r1, r18
     a52:	13 06       	cpc	r1, r19
     a54:	14 06       	cpc	r1, r20
     a56:	05 06       	cpc	r0, r21
     a58:	08 95       	ret

00000a5a <__fp_round>:
     a5a:	09 2e       	mov	r0, r25
     a5c:	03 94       	inc	r0
     a5e:	00 0c       	add	r0, r0
     a60:	11 f4       	brne	.+4      	; 0xa66 <__fp_round+0xc>
     a62:	88 23       	and	r24, r24
     a64:	52 f0       	brmi	.+20     	; 0xa7a <__fp_round+0x20>
     a66:	bb 0f       	add	r27, r27
     a68:	40 f4       	brcc	.+16     	; 0xa7a <__fp_round+0x20>
     a6a:	bf 2b       	or	r27, r31
     a6c:	11 f4       	brne	.+4      	; 0xa72 <__fp_round+0x18>
     a6e:	60 ff       	sbrs	r22, 0
     a70:	04 c0       	rjmp	.+8      	; 0xa7a <__fp_round+0x20>
     a72:	6f 5f       	subi	r22, 0xFF	; 255
     a74:	7f 4f       	sbci	r23, 0xFF	; 255
     a76:	8f 4f       	sbci	r24, 0xFF	; 255
     a78:	9f 4f       	sbci	r25, 0xFF	; 255
     a7a:	08 95       	ret

00000a7c <__fp_split3>:
     a7c:	57 fd       	sbrc	r21, 7
     a7e:	90 58       	subi	r25, 0x80	; 128
     a80:	44 0f       	add	r20, r20
     a82:	55 1f       	adc	r21, r21
     a84:	59 f0       	breq	.+22     	; 0xa9c <__fp_splitA+0x10>
     a86:	5f 3f       	cpi	r21, 0xFF	; 255
     a88:	71 f0       	breq	.+28     	; 0xaa6 <__fp_splitA+0x1a>
     a8a:	47 95       	ror	r20

00000a8c <__fp_splitA>:
     a8c:	88 0f       	add	r24, r24
     a8e:	97 fb       	bst	r25, 7
     a90:	99 1f       	adc	r25, r25
     a92:	61 f0       	breq	.+24     	; 0xaac <__fp_splitA+0x20>
     a94:	9f 3f       	cpi	r25, 0xFF	; 255
     a96:	79 f0       	breq	.+30     	; 0xab6 <__fp_splitA+0x2a>
     a98:	87 95       	ror	r24
     a9a:	08 95       	ret
     a9c:	12 16       	cp	r1, r18
     a9e:	13 06       	cpc	r1, r19
     aa0:	14 06       	cpc	r1, r20
     aa2:	55 1f       	adc	r21, r21
     aa4:	f2 cf       	rjmp	.-28     	; 0xa8a <__fp_split3+0xe>
     aa6:	46 95       	lsr	r20
     aa8:	f1 df       	rcall	.-30     	; 0xa8c <__fp_splitA>
     aaa:	08 c0       	rjmp	.+16     	; 0xabc <__fp_splitA+0x30>
     aac:	16 16       	cp	r1, r22
     aae:	17 06       	cpc	r1, r23
     ab0:	18 06       	cpc	r1, r24
     ab2:	99 1f       	adc	r25, r25
     ab4:	f1 cf       	rjmp	.-30     	; 0xa98 <__fp_splitA+0xc>
     ab6:	86 95       	lsr	r24
     ab8:	71 05       	cpc	r23, r1
     aba:	61 05       	cpc	r22, r1
     abc:	08 94       	sec
     abe:	08 95       	ret

00000ac0 <__fp_zero>:
     ac0:	e8 94       	clt

00000ac2 <__fp_szero>:
     ac2:	bb 27       	eor	r27, r27
     ac4:	66 27       	eor	r22, r22
     ac6:	77 27       	eor	r23, r23
     ac8:	cb 01       	movw	r24, r22
     aca:	97 f9       	bld	r25, 7
     acc:	08 95       	ret

00000ace <__mulsf3>:
     ace:	0b d0       	rcall	.+22     	; 0xae6 <__mulsf3x>
     ad0:	c4 cf       	rjmp	.-120    	; 0xa5a <__fp_round>
     ad2:	b5 df       	rcall	.-150    	; 0xa3e <__fp_pscA>
     ad4:	28 f0       	brcs	.+10     	; 0xae0 <__mulsf3+0x12>
     ad6:	ba df       	rcall	.-140    	; 0xa4c <__fp_pscB>
     ad8:	18 f0       	brcs	.+6      	; 0xae0 <__mulsf3+0x12>
     ada:	95 23       	and	r25, r21
     adc:	09 f0       	breq	.+2      	; 0xae0 <__mulsf3+0x12>
     ade:	a6 cf       	rjmp	.-180    	; 0xa2c <__fp_inf>
     ae0:	ab cf       	rjmp	.-170    	; 0xa38 <__fp_nan>
     ae2:	11 24       	eor	r1, r1
     ae4:	ee cf       	rjmp	.-36     	; 0xac2 <__fp_szero>

00000ae6 <__mulsf3x>:
     ae6:	ca df       	rcall	.-108    	; 0xa7c <__fp_split3>
     ae8:	a0 f3       	brcs	.-24     	; 0xad2 <__mulsf3+0x4>

00000aea <__mulsf3_pse>:
     aea:	95 9f       	mul	r25, r21
     aec:	d1 f3       	breq	.-12     	; 0xae2 <__mulsf3+0x14>
     aee:	95 0f       	add	r25, r21
     af0:	50 e0       	ldi	r21, 0x00	; 0
     af2:	55 1f       	adc	r21, r21
     af4:	62 9f       	mul	r22, r18
     af6:	f0 01       	movw	r30, r0
     af8:	72 9f       	mul	r23, r18
     afa:	bb 27       	eor	r27, r27
     afc:	f0 0d       	add	r31, r0
     afe:	b1 1d       	adc	r27, r1
     b00:	63 9f       	mul	r22, r19
     b02:	aa 27       	eor	r26, r26
     b04:	f0 0d       	add	r31, r0
     b06:	b1 1d       	adc	r27, r1
     b08:	aa 1f       	adc	r26, r26
     b0a:	64 9f       	mul	r22, r20
     b0c:	66 27       	eor	r22, r22
     b0e:	b0 0d       	add	r27, r0
     b10:	a1 1d       	adc	r26, r1
     b12:	66 1f       	adc	r22, r22
     b14:	82 9f       	mul	r24, r18
     b16:	22 27       	eor	r18, r18
     b18:	b0 0d       	add	r27, r0
     b1a:	a1 1d       	adc	r26, r1
     b1c:	62 1f       	adc	r22, r18
     b1e:	73 9f       	mul	r23, r19
     b20:	b0 0d       	add	r27, r0
     b22:	a1 1d       	adc	r26, r1
     b24:	62 1f       	adc	r22, r18
     b26:	83 9f       	mul	r24, r19
     b28:	a0 0d       	add	r26, r0
     b2a:	61 1d       	adc	r22, r1
     b2c:	22 1f       	adc	r18, r18
     b2e:	74 9f       	mul	r23, r20
     b30:	33 27       	eor	r19, r19
     b32:	a0 0d       	add	r26, r0
     b34:	61 1d       	adc	r22, r1
     b36:	23 1f       	adc	r18, r19
     b38:	84 9f       	mul	r24, r20
     b3a:	60 0d       	add	r22, r0
     b3c:	21 1d       	adc	r18, r1
     b3e:	82 2f       	mov	r24, r18
     b40:	76 2f       	mov	r23, r22
     b42:	6a 2f       	mov	r22, r26
     b44:	11 24       	eor	r1, r1
     b46:	9f 57       	subi	r25, 0x7F	; 127
     b48:	50 40       	sbci	r21, 0x00	; 0
     b4a:	8a f0       	brmi	.+34     	; 0xb6e <__mulsf3_pse+0x84>
     b4c:	e1 f0       	breq	.+56     	; 0xb86 <__mulsf3_pse+0x9c>
     b4e:	88 23       	and	r24, r24
     b50:	4a f0       	brmi	.+18     	; 0xb64 <__mulsf3_pse+0x7a>
     b52:	ee 0f       	add	r30, r30
     b54:	ff 1f       	adc	r31, r31
     b56:	bb 1f       	adc	r27, r27
     b58:	66 1f       	adc	r22, r22
     b5a:	77 1f       	adc	r23, r23
     b5c:	88 1f       	adc	r24, r24
     b5e:	91 50       	subi	r25, 0x01	; 1
     b60:	50 40       	sbci	r21, 0x00	; 0
     b62:	a9 f7       	brne	.-22     	; 0xb4e <__mulsf3_pse+0x64>
     b64:	9e 3f       	cpi	r25, 0xFE	; 254
     b66:	51 05       	cpc	r21, r1
     b68:	70 f0       	brcs	.+28     	; 0xb86 <__mulsf3_pse+0x9c>
     b6a:	60 cf       	rjmp	.-320    	; 0xa2c <__fp_inf>
     b6c:	aa cf       	rjmp	.-172    	; 0xac2 <__fp_szero>
     b6e:	5f 3f       	cpi	r21, 0xFF	; 255
     b70:	ec f3       	brlt	.-6      	; 0xb6c <__mulsf3_pse+0x82>
     b72:	98 3e       	cpi	r25, 0xE8	; 232
     b74:	dc f3       	brlt	.-10     	; 0xb6c <__mulsf3_pse+0x82>
     b76:	86 95       	lsr	r24
     b78:	77 95       	ror	r23
     b7a:	67 95       	ror	r22
     b7c:	b7 95       	ror	r27
     b7e:	f7 95       	ror	r31
     b80:	e7 95       	ror	r30
     b82:	9f 5f       	subi	r25, 0xFF	; 255
     b84:	c1 f7       	brne	.-16     	; 0xb76 <__mulsf3_pse+0x8c>
     b86:	fe 2b       	or	r31, r30
     b88:	88 0f       	add	r24, r24
     b8a:	91 1d       	adc	r25, r1
     b8c:	96 95       	lsr	r25
     b8e:	87 95       	ror	r24
     b90:	97 f9       	bld	r25, 7
     b92:	08 95       	ret

00000b94 <fprintf>:
     b94:	cf 93       	push	r28
     b96:	df 93       	push	r29
     b98:	cd b7       	in	r28, 0x3d	; 61
     b9a:	de b7       	in	r29, 0x3e	; 62
     b9c:	ae 01       	movw	r20, r28
     b9e:	47 5f       	subi	r20, 0xF7	; 247
     ba0:	5f 4f       	sbci	r21, 0xFF	; 255
     ba2:	6f 81       	ldd	r22, Y+7	; 0x07
     ba4:	78 85       	ldd	r23, Y+8	; 0x08
     ba6:	8d 81       	ldd	r24, Y+5	; 0x05
     ba8:	9e 81       	ldd	r25, Y+6	; 0x06
     baa:	03 d0       	rcall	.+6      	; 0xbb2 <vfprintf>
     bac:	df 91       	pop	r29
     bae:	cf 91       	pop	r28
     bb0:	08 95       	ret

00000bb2 <vfprintf>:
     bb2:	2f 92       	push	r2
     bb4:	3f 92       	push	r3
     bb6:	4f 92       	push	r4
     bb8:	5f 92       	push	r5
     bba:	6f 92       	push	r6
     bbc:	7f 92       	push	r7
     bbe:	8f 92       	push	r8
     bc0:	9f 92       	push	r9
     bc2:	af 92       	push	r10
     bc4:	bf 92       	push	r11
     bc6:	cf 92       	push	r12
     bc8:	df 92       	push	r13
     bca:	ef 92       	push	r14
     bcc:	ff 92       	push	r15
     bce:	0f 93       	push	r16
     bd0:	1f 93       	push	r17
     bd2:	cf 93       	push	r28
     bd4:	df 93       	push	r29
     bd6:	cd b7       	in	r28, 0x3d	; 61
     bd8:	de b7       	in	r29, 0x3e	; 62
     bda:	2c 97       	sbiw	r28, 0x0c	; 12
     bdc:	0f b6       	in	r0, 0x3f	; 63
     bde:	f8 94       	cli
     be0:	de bf       	out	0x3e, r29	; 62
     be2:	0f be       	out	0x3f, r0	; 63
     be4:	cd bf       	out	0x3d, r28	; 61
     be6:	7c 01       	movw	r14, r24
     be8:	6b 01       	movw	r12, r22
     bea:	8a 01       	movw	r16, r20
     bec:	fc 01       	movw	r30, r24
     bee:	17 82       	std	Z+7, r1	; 0x07
     bf0:	16 82       	std	Z+6, r1	; 0x06
     bf2:	83 81       	ldd	r24, Z+3	; 0x03
     bf4:	81 ff       	sbrs	r24, 1
     bf6:	b0 c1       	rjmp	.+864    	; 0xf58 <vfprintf+0x3a6>
     bf8:	ce 01       	movw	r24, r28
     bfa:	01 96       	adiw	r24, 0x01	; 1
     bfc:	4c 01       	movw	r8, r24
     bfe:	f7 01       	movw	r30, r14
     c00:	93 81       	ldd	r25, Z+3	; 0x03
     c02:	f6 01       	movw	r30, r12
     c04:	93 fd       	sbrc	r25, 3
     c06:	85 91       	lpm	r24, Z+
     c08:	93 ff       	sbrs	r25, 3
     c0a:	81 91       	ld	r24, Z+
     c0c:	6f 01       	movw	r12, r30
     c0e:	88 23       	and	r24, r24
     c10:	09 f4       	brne	.+2      	; 0xc14 <vfprintf+0x62>
     c12:	9e c1       	rjmp	.+828    	; 0xf50 <vfprintf+0x39e>
     c14:	85 32       	cpi	r24, 0x25	; 37
     c16:	39 f4       	brne	.+14     	; 0xc26 <vfprintf+0x74>
     c18:	93 fd       	sbrc	r25, 3
     c1a:	85 91       	lpm	r24, Z+
     c1c:	93 ff       	sbrs	r25, 3
     c1e:	81 91       	ld	r24, Z+
     c20:	6f 01       	movw	r12, r30
     c22:	85 32       	cpi	r24, 0x25	; 37
     c24:	21 f4       	brne	.+8      	; 0xc2e <vfprintf+0x7c>
     c26:	b7 01       	movw	r22, r14
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	c7 d1       	rcall	.+910    	; 0xfba <fputc>
     c2c:	e8 cf       	rjmp	.-48     	; 0xbfe <vfprintf+0x4c>
     c2e:	51 2c       	mov	r5, r1
     c30:	31 2c       	mov	r3, r1
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	20 32       	cpi	r18, 0x20	; 32
     c36:	a0 f4       	brcc	.+40     	; 0xc60 <vfprintf+0xae>
     c38:	8b 32       	cpi	r24, 0x2B	; 43
     c3a:	69 f0       	breq	.+26     	; 0xc56 <vfprintf+0xa4>
     c3c:	30 f4       	brcc	.+12     	; 0xc4a <vfprintf+0x98>
     c3e:	80 32       	cpi	r24, 0x20	; 32
     c40:	59 f0       	breq	.+22     	; 0xc58 <vfprintf+0xa6>
     c42:	83 32       	cpi	r24, 0x23	; 35
     c44:	69 f4       	brne	.+26     	; 0xc60 <vfprintf+0xae>
     c46:	20 61       	ori	r18, 0x10	; 16
     c48:	2c c0       	rjmp	.+88     	; 0xca2 <vfprintf+0xf0>
     c4a:	8d 32       	cpi	r24, 0x2D	; 45
     c4c:	39 f0       	breq	.+14     	; 0xc5c <vfprintf+0xaa>
     c4e:	80 33       	cpi	r24, 0x30	; 48
     c50:	39 f4       	brne	.+14     	; 0xc60 <vfprintf+0xae>
     c52:	21 60       	ori	r18, 0x01	; 1
     c54:	26 c0       	rjmp	.+76     	; 0xca2 <vfprintf+0xf0>
     c56:	22 60       	ori	r18, 0x02	; 2
     c58:	24 60       	ori	r18, 0x04	; 4
     c5a:	23 c0       	rjmp	.+70     	; 0xca2 <vfprintf+0xf0>
     c5c:	28 60       	ori	r18, 0x08	; 8
     c5e:	21 c0       	rjmp	.+66     	; 0xca2 <vfprintf+0xf0>
     c60:	27 fd       	sbrc	r18, 7
     c62:	27 c0       	rjmp	.+78     	; 0xcb2 <vfprintf+0x100>
     c64:	30 ed       	ldi	r19, 0xD0	; 208
     c66:	38 0f       	add	r19, r24
     c68:	3a 30       	cpi	r19, 0x0A	; 10
     c6a:	78 f4       	brcc	.+30     	; 0xc8a <vfprintf+0xd8>
     c6c:	26 ff       	sbrs	r18, 6
     c6e:	06 c0       	rjmp	.+12     	; 0xc7c <vfprintf+0xca>
     c70:	fa e0       	ldi	r31, 0x0A	; 10
     c72:	5f 9e       	mul	r5, r31
     c74:	30 0d       	add	r19, r0
     c76:	11 24       	eor	r1, r1
     c78:	53 2e       	mov	r5, r19
     c7a:	13 c0       	rjmp	.+38     	; 0xca2 <vfprintf+0xf0>
     c7c:	8a e0       	ldi	r24, 0x0A	; 10
     c7e:	38 9e       	mul	r3, r24
     c80:	30 0d       	add	r19, r0
     c82:	11 24       	eor	r1, r1
     c84:	33 2e       	mov	r3, r19
     c86:	20 62       	ori	r18, 0x20	; 32
     c88:	0c c0       	rjmp	.+24     	; 0xca2 <vfprintf+0xf0>
     c8a:	8e 32       	cpi	r24, 0x2E	; 46
     c8c:	21 f4       	brne	.+8      	; 0xc96 <vfprintf+0xe4>
     c8e:	26 fd       	sbrc	r18, 6
     c90:	5f c1       	rjmp	.+702    	; 0xf50 <vfprintf+0x39e>
     c92:	20 64       	ori	r18, 0x40	; 64
     c94:	06 c0       	rjmp	.+12     	; 0xca2 <vfprintf+0xf0>
     c96:	8c 36       	cpi	r24, 0x6C	; 108
     c98:	11 f4       	brne	.+4      	; 0xc9e <vfprintf+0xec>
     c9a:	20 68       	ori	r18, 0x80	; 128
     c9c:	02 c0       	rjmp	.+4      	; 0xca2 <vfprintf+0xf0>
     c9e:	88 36       	cpi	r24, 0x68	; 104
     ca0:	41 f4       	brne	.+16     	; 0xcb2 <vfprintf+0x100>
     ca2:	f6 01       	movw	r30, r12
     ca4:	93 fd       	sbrc	r25, 3
     ca6:	85 91       	lpm	r24, Z+
     ca8:	93 ff       	sbrs	r25, 3
     caa:	81 91       	ld	r24, Z+
     cac:	6f 01       	movw	r12, r30
     cae:	81 11       	cpse	r24, r1
     cb0:	c1 cf       	rjmp	.-126    	; 0xc34 <vfprintf+0x82>
     cb2:	98 2f       	mov	r25, r24
     cb4:	9f 7d       	andi	r25, 0xDF	; 223
     cb6:	95 54       	subi	r25, 0x45	; 69
     cb8:	93 30       	cpi	r25, 0x03	; 3
     cba:	28 f4       	brcc	.+10     	; 0xcc6 <vfprintf+0x114>
     cbc:	0c 5f       	subi	r16, 0xFC	; 252
     cbe:	1f 4f       	sbci	r17, 0xFF	; 255
     cc0:	ff e3       	ldi	r31, 0x3F	; 63
     cc2:	f9 83       	std	Y+1, r31	; 0x01
     cc4:	0d c0       	rjmp	.+26     	; 0xce0 <vfprintf+0x12e>
     cc6:	83 36       	cpi	r24, 0x63	; 99
     cc8:	31 f0       	breq	.+12     	; 0xcd6 <vfprintf+0x124>
     cca:	83 37       	cpi	r24, 0x73	; 115
     ccc:	71 f0       	breq	.+28     	; 0xcea <vfprintf+0x138>
     cce:	83 35       	cpi	r24, 0x53	; 83
     cd0:	09 f0       	breq	.+2      	; 0xcd4 <vfprintf+0x122>
     cd2:	57 c0       	rjmp	.+174    	; 0xd82 <vfprintf+0x1d0>
     cd4:	21 c0       	rjmp	.+66     	; 0xd18 <vfprintf+0x166>
     cd6:	f8 01       	movw	r30, r16
     cd8:	80 81       	ld	r24, Z
     cda:	89 83       	std	Y+1, r24	; 0x01
     cdc:	0e 5f       	subi	r16, 0xFE	; 254
     cde:	1f 4f       	sbci	r17, 0xFF	; 255
     ce0:	44 24       	eor	r4, r4
     ce2:	43 94       	inc	r4
     ce4:	51 2c       	mov	r5, r1
     ce6:	54 01       	movw	r10, r8
     ce8:	14 c0       	rjmp	.+40     	; 0xd12 <vfprintf+0x160>
     cea:	38 01       	movw	r6, r16
     cec:	f2 e0       	ldi	r31, 0x02	; 2
     cee:	6f 0e       	add	r6, r31
     cf0:	71 1c       	adc	r7, r1
     cf2:	f8 01       	movw	r30, r16
     cf4:	a0 80       	ld	r10, Z
     cf6:	b1 80       	ldd	r11, Z+1	; 0x01
     cf8:	26 ff       	sbrs	r18, 6
     cfa:	03 c0       	rjmp	.+6      	; 0xd02 <vfprintf+0x150>
     cfc:	65 2d       	mov	r22, r5
     cfe:	70 e0       	ldi	r23, 0x00	; 0
     d00:	02 c0       	rjmp	.+4      	; 0xd06 <vfprintf+0x154>
     d02:	6f ef       	ldi	r22, 0xFF	; 255
     d04:	7f ef       	ldi	r23, 0xFF	; 255
     d06:	c5 01       	movw	r24, r10
     d08:	2c 87       	std	Y+12, r18	; 0x0c
     d0a:	4c d1       	rcall	.+664    	; 0xfa4 <strnlen>
     d0c:	2c 01       	movw	r4, r24
     d0e:	83 01       	movw	r16, r6
     d10:	2c 85       	ldd	r18, Y+12	; 0x0c
     d12:	2f 77       	andi	r18, 0x7F	; 127
     d14:	22 2e       	mov	r2, r18
     d16:	16 c0       	rjmp	.+44     	; 0xd44 <vfprintf+0x192>
     d18:	38 01       	movw	r6, r16
     d1a:	f2 e0       	ldi	r31, 0x02	; 2
     d1c:	6f 0e       	add	r6, r31
     d1e:	71 1c       	adc	r7, r1
     d20:	f8 01       	movw	r30, r16
     d22:	a0 80       	ld	r10, Z
     d24:	b1 80       	ldd	r11, Z+1	; 0x01
     d26:	26 ff       	sbrs	r18, 6
     d28:	03 c0       	rjmp	.+6      	; 0xd30 <vfprintf+0x17e>
     d2a:	65 2d       	mov	r22, r5
     d2c:	70 e0       	ldi	r23, 0x00	; 0
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <vfprintf+0x182>
     d30:	6f ef       	ldi	r22, 0xFF	; 255
     d32:	7f ef       	ldi	r23, 0xFF	; 255
     d34:	c5 01       	movw	r24, r10
     d36:	2c 87       	std	Y+12, r18	; 0x0c
     d38:	2a d1       	rcall	.+596    	; 0xf8e <strnlen_P>
     d3a:	2c 01       	movw	r4, r24
     d3c:	2c 85       	ldd	r18, Y+12	; 0x0c
     d3e:	20 68       	ori	r18, 0x80	; 128
     d40:	22 2e       	mov	r2, r18
     d42:	83 01       	movw	r16, r6
     d44:	23 fc       	sbrc	r2, 3
     d46:	19 c0       	rjmp	.+50     	; 0xd7a <vfprintf+0x1c8>
     d48:	83 2d       	mov	r24, r3
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	48 16       	cp	r4, r24
     d4e:	59 06       	cpc	r5, r25
     d50:	a0 f4       	brcc	.+40     	; 0xd7a <vfprintf+0x1c8>
     d52:	b7 01       	movw	r22, r14
     d54:	80 e2       	ldi	r24, 0x20	; 32
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	30 d1       	rcall	.+608    	; 0xfba <fputc>
     d5a:	3a 94       	dec	r3
     d5c:	f5 cf       	rjmp	.-22     	; 0xd48 <vfprintf+0x196>
     d5e:	f5 01       	movw	r30, r10
     d60:	27 fc       	sbrc	r2, 7
     d62:	85 91       	lpm	r24, Z+
     d64:	27 fe       	sbrs	r2, 7
     d66:	81 91       	ld	r24, Z+
     d68:	5f 01       	movw	r10, r30
     d6a:	b7 01       	movw	r22, r14
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	25 d1       	rcall	.+586    	; 0xfba <fputc>
     d70:	31 10       	cpse	r3, r1
     d72:	3a 94       	dec	r3
     d74:	f1 e0       	ldi	r31, 0x01	; 1
     d76:	4f 1a       	sub	r4, r31
     d78:	51 08       	sbc	r5, r1
     d7a:	41 14       	cp	r4, r1
     d7c:	51 04       	cpc	r5, r1
     d7e:	79 f7       	brne	.-34     	; 0xd5e <vfprintf+0x1ac>
     d80:	de c0       	rjmp	.+444    	; 0xf3e <vfprintf+0x38c>
     d82:	84 36       	cpi	r24, 0x64	; 100
     d84:	11 f0       	breq	.+4      	; 0xd8a <vfprintf+0x1d8>
     d86:	89 36       	cpi	r24, 0x69	; 105
     d88:	31 f5       	brne	.+76     	; 0xdd6 <vfprintf+0x224>
     d8a:	f8 01       	movw	r30, r16
     d8c:	27 ff       	sbrs	r18, 7
     d8e:	07 c0       	rjmp	.+14     	; 0xd9e <vfprintf+0x1ec>
     d90:	60 81       	ld	r22, Z
     d92:	71 81       	ldd	r23, Z+1	; 0x01
     d94:	82 81       	ldd	r24, Z+2	; 0x02
     d96:	93 81       	ldd	r25, Z+3	; 0x03
     d98:	0c 5f       	subi	r16, 0xFC	; 252
     d9a:	1f 4f       	sbci	r17, 0xFF	; 255
     d9c:	08 c0       	rjmp	.+16     	; 0xdae <vfprintf+0x1fc>
     d9e:	60 81       	ld	r22, Z
     da0:	71 81       	ldd	r23, Z+1	; 0x01
     da2:	07 2e       	mov	r0, r23
     da4:	00 0c       	add	r0, r0
     da6:	88 0b       	sbc	r24, r24
     da8:	99 0b       	sbc	r25, r25
     daa:	0e 5f       	subi	r16, 0xFE	; 254
     dac:	1f 4f       	sbci	r17, 0xFF	; 255
     dae:	2f 76       	andi	r18, 0x6F	; 111
     db0:	72 2e       	mov	r7, r18
     db2:	97 ff       	sbrs	r25, 7
     db4:	09 c0       	rjmp	.+18     	; 0xdc8 <vfprintf+0x216>
     db6:	90 95       	com	r25
     db8:	80 95       	com	r24
     dba:	70 95       	com	r23
     dbc:	61 95       	neg	r22
     dbe:	7f 4f       	sbci	r23, 0xFF	; 255
     dc0:	8f 4f       	sbci	r24, 0xFF	; 255
     dc2:	9f 4f       	sbci	r25, 0xFF	; 255
     dc4:	20 68       	ori	r18, 0x80	; 128
     dc6:	72 2e       	mov	r7, r18
     dc8:	2a e0       	ldi	r18, 0x0A	; 10
     dca:	30 e0       	ldi	r19, 0x00	; 0
     dcc:	a4 01       	movw	r20, r8
     dce:	2d d1       	rcall	.+602    	; 0x102a <__ultoa_invert>
     dd0:	a8 2e       	mov	r10, r24
     dd2:	a8 18       	sub	r10, r8
     dd4:	43 c0       	rjmp	.+134    	; 0xe5c <vfprintf+0x2aa>
     dd6:	85 37       	cpi	r24, 0x75	; 117
     dd8:	29 f4       	brne	.+10     	; 0xde4 <vfprintf+0x232>
     dda:	2f 7e       	andi	r18, 0xEF	; 239
     ddc:	b2 2e       	mov	r11, r18
     dde:	2a e0       	ldi	r18, 0x0A	; 10
     de0:	30 e0       	ldi	r19, 0x00	; 0
     de2:	25 c0       	rjmp	.+74     	; 0xe2e <vfprintf+0x27c>
     de4:	f2 2f       	mov	r31, r18
     de6:	f9 7f       	andi	r31, 0xF9	; 249
     de8:	bf 2e       	mov	r11, r31
     dea:	8f 36       	cpi	r24, 0x6F	; 111
     dec:	c1 f0       	breq	.+48     	; 0xe1e <vfprintf+0x26c>
     dee:	18 f4       	brcc	.+6      	; 0xdf6 <vfprintf+0x244>
     df0:	88 35       	cpi	r24, 0x58	; 88
     df2:	79 f0       	breq	.+30     	; 0xe12 <vfprintf+0x260>
     df4:	ad c0       	rjmp	.+346    	; 0xf50 <vfprintf+0x39e>
     df6:	80 37       	cpi	r24, 0x70	; 112
     df8:	19 f0       	breq	.+6      	; 0xe00 <vfprintf+0x24e>
     dfa:	88 37       	cpi	r24, 0x78	; 120
     dfc:	21 f0       	breq	.+8      	; 0xe06 <vfprintf+0x254>
     dfe:	a8 c0       	rjmp	.+336    	; 0xf50 <vfprintf+0x39e>
     e00:	2f 2f       	mov	r18, r31
     e02:	20 61       	ori	r18, 0x10	; 16
     e04:	b2 2e       	mov	r11, r18
     e06:	b4 fe       	sbrs	r11, 4
     e08:	0d c0       	rjmp	.+26     	; 0xe24 <vfprintf+0x272>
     e0a:	8b 2d       	mov	r24, r11
     e0c:	84 60       	ori	r24, 0x04	; 4
     e0e:	b8 2e       	mov	r11, r24
     e10:	09 c0       	rjmp	.+18     	; 0xe24 <vfprintf+0x272>
     e12:	24 ff       	sbrs	r18, 4
     e14:	0a c0       	rjmp	.+20     	; 0xe2a <vfprintf+0x278>
     e16:	9f 2f       	mov	r25, r31
     e18:	96 60       	ori	r25, 0x06	; 6
     e1a:	b9 2e       	mov	r11, r25
     e1c:	06 c0       	rjmp	.+12     	; 0xe2a <vfprintf+0x278>
     e1e:	28 e0       	ldi	r18, 0x08	; 8
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	05 c0       	rjmp	.+10     	; 0xe2e <vfprintf+0x27c>
     e24:	20 e1       	ldi	r18, 0x10	; 16
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	02 c0       	rjmp	.+4      	; 0xe2e <vfprintf+0x27c>
     e2a:	20 e1       	ldi	r18, 0x10	; 16
     e2c:	32 e0       	ldi	r19, 0x02	; 2
     e2e:	f8 01       	movw	r30, r16
     e30:	b7 fe       	sbrs	r11, 7
     e32:	07 c0       	rjmp	.+14     	; 0xe42 <vfprintf+0x290>
     e34:	60 81       	ld	r22, Z
     e36:	71 81       	ldd	r23, Z+1	; 0x01
     e38:	82 81       	ldd	r24, Z+2	; 0x02
     e3a:	93 81       	ldd	r25, Z+3	; 0x03
     e3c:	0c 5f       	subi	r16, 0xFC	; 252
     e3e:	1f 4f       	sbci	r17, 0xFF	; 255
     e40:	06 c0       	rjmp	.+12     	; 0xe4e <vfprintf+0x29c>
     e42:	60 81       	ld	r22, Z
     e44:	71 81       	ldd	r23, Z+1	; 0x01
     e46:	80 e0       	ldi	r24, 0x00	; 0
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	0e 5f       	subi	r16, 0xFE	; 254
     e4c:	1f 4f       	sbci	r17, 0xFF	; 255
     e4e:	a4 01       	movw	r20, r8
     e50:	ec d0       	rcall	.+472    	; 0x102a <__ultoa_invert>
     e52:	a8 2e       	mov	r10, r24
     e54:	a8 18       	sub	r10, r8
     e56:	fb 2d       	mov	r31, r11
     e58:	ff 77       	andi	r31, 0x7F	; 127
     e5a:	7f 2e       	mov	r7, r31
     e5c:	76 fe       	sbrs	r7, 6
     e5e:	0b c0       	rjmp	.+22     	; 0xe76 <vfprintf+0x2c4>
     e60:	37 2d       	mov	r19, r7
     e62:	3e 7f       	andi	r19, 0xFE	; 254
     e64:	a5 14       	cp	r10, r5
     e66:	50 f4       	brcc	.+20     	; 0xe7c <vfprintf+0x2ca>
     e68:	74 fe       	sbrs	r7, 4
     e6a:	0a c0       	rjmp	.+20     	; 0xe80 <vfprintf+0x2ce>
     e6c:	72 fc       	sbrc	r7, 2
     e6e:	08 c0       	rjmp	.+16     	; 0xe80 <vfprintf+0x2ce>
     e70:	37 2d       	mov	r19, r7
     e72:	3e 7e       	andi	r19, 0xEE	; 238
     e74:	05 c0       	rjmp	.+10     	; 0xe80 <vfprintf+0x2ce>
     e76:	ba 2c       	mov	r11, r10
     e78:	37 2d       	mov	r19, r7
     e7a:	03 c0       	rjmp	.+6      	; 0xe82 <vfprintf+0x2d0>
     e7c:	ba 2c       	mov	r11, r10
     e7e:	01 c0       	rjmp	.+2      	; 0xe82 <vfprintf+0x2d0>
     e80:	b5 2c       	mov	r11, r5
     e82:	34 ff       	sbrs	r19, 4
     e84:	0d c0       	rjmp	.+26     	; 0xea0 <vfprintf+0x2ee>
     e86:	fe 01       	movw	r30, r28
     e88:	ea 0d       	add	r30, r10
     e8a:	f1 1d       	adc	r31, r1
     e8c:	80 81       	ld	r24, Z
     e8e:	80 33       	cpi	r24, 0x30	; 48
     e90:	11 f4       	brne	.+4      	; 0xe96 <vfprintf+0x2e4>
     e92:	39 7e       	andi	r19, 0xE9	; 233
     e94:	09 c0       	rjmp	.+18     	; 0xea8 <vfprintf+0x2f6>
     e96:	32 ff       	sbrs	r19, 2
     e98:	06 c0       	rjmp	.+12     	; 0xea6 <vfprintf+0x2f4>
     e9a:	b3 94       	inc	r11
     e9c:	b3 94       	inc	r11
     e9e:	04 c0       	rjmp	.+8      	; 0xea8 <vfprintf+0x2f6>
     ea0:	83 2f       	mov	r24, r19
     ea2:	86 78       	andi	r24, 0x86	; 134
     ea4:	09 f0       	breq	.+2      	; 0xea8 <vfprintf+0x2f6>
     ea6:	b3 94       	inc	r11
     ea8:	33 fd       	sbrc	r19, 3
     eaa:	12 c0       	rjmp	.+36     	; 0xed0 <vfprintf+0x31e>
     eac:	30 ff       	sbrs	r19, 0
     eae:	06 c0       	rjmp	.+12     	; 0xebc <vfprintf+0x30a>
     eb0:	5a 2c       	mov	r5, r10
     eb2:	b3 14       	cp	r11, r3
     eb4:	18 f4       	brcc	.+6      	; 0xebc <vfprintf+0x30a>
     eb6:	53 0c       	add	r5, r3
     eb8:	5b 18       	sub	r5, r11
     eba:	b3 2c       	mov	r11, r3
     ebc:	b3 14       	cp	r11, r3
     ebe:	60 f4       	brcc	.+24     	; 0xed8 <vfprintf+0x326>
     ec0:	b7 01       	movw	r22, r14
     ec2:	80 e2       	ldi	r24, 0x20	; 32
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	3c 87       	std	Y+12, r19	; 0x0c
     ec8:	78 d0       	rcall	.+240    	; 0xfba <fputc>
     eca:	b3 94       	inc	r11
     ecc:	3c 85       	ldd	r19, Y+12	; 0x0c
     ece:	f6 cf       	rjmp	.-20     	; 0xebc <vfprintf+0x30a>
     ed0:	b3 14       	cp	r11, r3
     ed2:	10 f4       	brcc	.+4      	; 0xed8 <vfprintf+0x326>
     ed4:	3b 18       	sub	r3, r11
     ed6:	01 c0       	rjmp	.+2      	; 0xeda <vfprintf+0x328>
     ed8:	31 2c       	mov	r3, r1
     eda:	34 ff       	sbrs	r19, 4
     edc:	11 c0       	rjmp	.+34     	; 0xf00 <vfprintf+0x34e>
     ede:	b7 01       	movw	r22, r14
     ee0:	80 e3       	ldi	r24, 0x30	; 48
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	3c 87       	std	Y+12, r19	; 0x0c
     ee6:	69 d0       	rcall	.+210    	; 0xfba <fputc>
     ee8:	3c 85       	ldd	r19, Y+12	; 0x0c
     eea:	32 ff       	sbrs	r19, 2
     eec:	16 c0       	rjmp	.+44     	; 0xf1a <vfprintf+0x368>
     eee:	31 fd       	sbrc	r19, 1
     ef0:	03 c0       	rjmp	.+6      	; 0xef8 <vfprintf+0x346>
     ef2:	88 e7       	ldi	r24, 0x78	; 120
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <vfprintf+0x34a>
     ef8:	88 e5       	ldi	r24, 0x58	; 88
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	b7 01       	movw	r22, r14
     efe:	0c c0       	rjmp	.+24     	; 0xf18 <vfprintf+0x366>
     f00:	83 2f       	mov	r24, r19
     f02:	86 78       	andi	r24, 0x86	; 134
     f04:	51 f0       	breq	.+20     	; 0xf1a <vfprintf+0x368>
     f06:	31 ff       	sbrs	r19, 1
     f08:	02 c0       	rjmp	.+4      	; 0xf0e <vfprintf+0x35c>
     f0a:	8b e2       	ldi	r24, 0x2B	; 43
     f0c:	01 c0       	rjmp	.+2      	; 0xf10 <vfprintf+0x35e>
     f0e:	80 e2       	ldi	r24, 0x20	; 32
     f10:	37 fd       	sbrc	r19, 7
     f12:	8d e2       	ldi	r24, 0x2D	; 45
     f14:	b7 01       	movw	r22, r14
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	50 d0       	rcall	.+160    	; 0xfba <fputc>
     f1a:	a5 14       	cp	r10, r5
     f1c:	30 f4       	brcc	.+12     	; 0xf2a <vfprintf+0x378>
     f1e:	b7 01       	movw	r22, r14
     f20:	80 e3       	ldi	r24, 0x30	; 48
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	4a d0       	rcall	.+148    	; 0xfba <fputc>
     f26:	5a 94       	dec	r5
     f28:	f8 cf       	rjmp	.-16     	; 0xf1a <vfprintf+0x368>
     f2a:	aa 94       	dec	r10
     f2c:	f4 01       	movw	r30, r8
     f2e:	ea 0d       	add	r30, r10
     f30:	f1 1d       	adc	r31, r1
     f32:	80 81       	ld	r24, Z
     f34:	b7 01       	movw	r22, r14
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	40 d0       	rcall	.+128    	; 0xfba <fputc>
     f3a:	a1 10       	cpse	r10, r1
     f3c:	f6 cf       	rjmp	.-20     	; 0xf2a <vfprintf+0x378>
     f3e:	33 20       	and	r3, r3
     f40:	09 f4       	brne	.+2      	; 0xf44 <vfprintf+0x392>
     f42:	5d ce       	rjmp	.-838    	; 0xbfe <vfprintf+0x4c>
     f44:	b7 01       	movw	r22, r14
     f46:	80 e2       	ldi	r24, 0x20	; 32
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	37 d0       	rcall	.+110    	; 0xfba <fputc>
     f4c:	3a 94       	dec	r3
     f4e:	f7 cf       	rjmp	.-18     	; 0xf3e <vfprintf+0x38c>
     f50:	f7 01       	movw	r30, r14
     f52:	86 81       	ldd	r24, Z+6	; 0x06
     f54:	97 81       	ldd	r25, Z+7	; 0x07
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <vfprintf+0x3aa>
     f58:	8f ef       	ldi	r24, 0xFF	; 255
     f5a:	9f ef       	ldi	r25, 0xFF	; 255
     f5c:	2c 96       	adiw	r28, 0x0c	; 12
     f5e:	0f b6       	in	r0, 0x3f	; 63
     f60:	f8 94       	cli
     f62:	de bf       	out	0x3e, r29	; 62
     f64:	0f be       	out	0x3f, r0	; 63
     f66:	cd bf       	out	0x3d, r28	; 61
     f68:	df 91       	pop	r29
     f6a:	cf 91       	pop	r28
     f6c:	1f 91       	pop	r17
     f6e:	0f 91       	pop	r16
     f70:	ff 90       	pop	r15
     f72:	ef 90       	pop	r14
     f74:	df 90       	pop	r13
     f76:	cf 90       	pop	r12
     f78:	bf 90       	pop	r11
     f7a:	af 90       	pop	r10
     f7c:	9f 90       	pop	r9
     f7e:	8f 90       	pop	r8
     f80:	7f 90       	pop	r7
     f82:	6f 90       	pop	r6
     f84:	5f 90       	pop	r5
     f86:	4f 90       	pop	r4
     f88:	3f 90       	pop	r3
     f8a:	2f 90       	pop	r2
     f8c:	08 95       	ret

00000f8e <strnlen_P>:
     f8e:	fc 01       	movw	r30, r24
     f90:	05 90       	lpm	r0, Z+
     f92:	61 50       	subi	r22, 0x01	; 1
     f94:	70 40       	sbci	r23, 0x00	; 0
     f96:	01 10       	cpse	r0, r1
     f98:	d8 f7       	brcc	.-10     	; 0xf90 <strnlen_P+0x2>
     f9a:	80 95       	com	r24
     f9c:	90 95       	com	r25
     f9e:	8e 0f       	add	r24, r30
     fa0:	9f 1f       	adc	r25, r31
     fa2:	08 95       	ret

00000fa4 <strnlen>:
     fa4:	fc 01       	movw	r30, r24
     fa6:	61 50       	subi	r22, 0x01	; 1
     fa8:	70 40       	sbci	r23, 0x00	; 0
     faa:	01 90       	ld	r0, Z+
     fac:	01 10       	cpse	r0, r1
     fae:	d8 f7       	brcc	.-10     	; 0xfa6 <strnlen+0x2>
     fb0:	80 95       	com	r24
     fb2:	90 95       	com	r25
     fb4:	8e 0f       	add	r24, r30
     fb6:	9f 1f       	adc	r25, r31
     fb8:	08 95       	ret

00000fba <fputc>:
     fba:	0f 93       	push	r16
     fbc:	1f 93       	push	r17
     fbe:	cf 93       	push	r28
     fc0:	df 93       	push	r29
     fc2:	fb 01       	movw	r30, r22
     fc4:	23 81       	ldd	r18, Z+3	; 0x03
     fc6:	21 fd       	sbrc	r18, 1
     fc8:	03 c0       	rjmp	.+6      	; 0xfd0 <fputc+0x16>
     fca:	8f ef       	ldi	r24, 0xFF	; 255
     fcc:	9f ef       	ldi	r25, 0xFF	; 255
     fce:	28 c0       	rjmp	.+80     	; 0x1020 <fputc+0x66>
     fd0:	22 ff       	sbrs	r18, 2
     fd2:	16 c0       	rjmp	.+44     	; 0x1000 <fputc+0x46>
     fd4:	46 81       	ldd	r20, Z+6	; 0x06
     fd6:	57 81       	ldd	r21, Z+7	; 0x07
     fd8:	24 81       	ldd	r18, Z+4	; 0x04
     fda:	35 81       	ldd	r19, Z+5	; 0x05
     fdc:	42 17       	cp	r20, r18
     fde:	53 07       	cpc	r21, r19
     fe0:	44 f4       	brge	.+16     	; 0xff2 <fputc+0x38>
     fe2:	a0 81       	ld	r26, Z
     fe4:	b1 81       	ldd	r27, Z+1	; 0x01
     fe6:	9d 01       	movw	r18, r26
     fe8:	2f 5f       	subi	r18, 0xFF	; 255
     fea:	3f 4f       	sbci	r19, 0xFF	; 255
     fec:	31 83       	std	Z+1, r19	; 0x01
     fee:	20 83       	st	Z, r18
     ff0:	8c 93       	st	X, r24
     ff2:	26 81       	ldd	r18, Z+6	; 0x06
     ff4:	37 81       	ldd	r19, Z+7	; 0x07
     ff6:	2f 5f       	subi	r18, 0xFF	; 255
     ff8:	3f 4f       	sbci	r19, 0xFF	; 255
     ffa:	37 83       	std	Z+7, r19	; 0x07
     ffc:	26 83       	std	Z+6, r18	; 0x06
     ffe:	10 c0       	rjmp	.+32     	; 0x1020 <fputc+0x66>
    1000:	eb 01       	movw	r28, r22
    1002:	09 2f       	mov	r16, r25
    1004:	18 2f       	mov	r17, r24
    1006:	00 84       	ldd	r0, Z+8	; 0x08
    1008:	f1 85       	ldd	r31, Z+9	; 0x09
    100a:	e0 2d       	mov	r30, r0
    100c:	09 95       	icall
    100e:	89 2b       	or	r24, r25
    1010:	e1 f6       	brne	.-72     	; 0xfca <fputc+0x10>
    1012:	8e 81       	ldd	r24, Y+6	; 0x06
    1014:	9f 81       	ldd	r25, Y+7	; 0x07
    1016:	01 96       	adiw	r24, 0x01	; 1
    1018:	9f 83       	std	Y+7, r25	; 0x07
    101a:	8e 83       	std	Y+6, r24	; 0x06
    101c:	81 2f       	mov	r24, r17
    101e:	90 2f       	mov	r25, r16
    1020:	df 91       	pop	r29
    1022:	cf 91       	pop	r28
    1024:	1f 91       	pop	r17
    1026:	0f 91       	pop	r16
    1028:	08 95       	ret

0000102a <__ultoa_invert>:
    102a:	fa 01       	movw	r30, r20
    102c:	aa 27       	eor	r26, r26
    102e:	28 30       	cpi	r18, 0x08	; 8
    1030:	51 f1       	breq	.+84     	; 0x1086 <__ultoa_invert+0x5c>
    1032:	20 31       	cpi	r18, 0x10	; 16
    1034:	81 f1       	breq	.+96     	; 0x1096 <__ultoa_invert+0x6c>
    1036:	e8 94       	clt
    1038:	6f 93       	push	r22
    103a:	6e 7f       	andi	r22, 0xFE	; 254
    103c:	6e 5f       	subi	r22, 0xFE	; 254
    103e:	7f 4f       	sbci	r23, 0xFF	; 255
    1040:	8f 4f       	sbci	r24, 0xFF	; 255
    1042:	9f 4f       	sbci	r25, 0xFF	; 255
    1044:	af 4f       	sbci	r26, 0xFF	; 255
    1046:	b1 e0       	ldi	r27, 0x01	; 1
    1048:	3e d0       	rcall	.+124    	; 0x10c6 <__ultoa_invert+0x9c>
    104a:	b4 e0       	ldi	r27, 0x04	; 4
    104c:	3c d0       	rcall	.+120    	; 0x10c6 <__ultoa_invert+0x9c>
    104e:	67 0f       	add	r22, r23
    1050:	78 1f       	adc	r23, r24
    1052:	89 1f       	adc	r24, r25
    1054:	9a 1f       	adc	r25, r26
    1056:	a1 1d       	adc	r26, r1
    1058:	68 0f       	add	r22, r24
    105a:	79 1f       	adc	r23, r25
    105c:	8a 1f       	adc	r24, r26
    105e:	91 1d       	adc	r25, r1
    1060:	a1 1d       	adc	r26, r1
    1062:	6a 0f       	add	r22, r26
    1064:	71 1d       	adc	r23, r1
    1066:	81 1d       	adc	r24, r1
    1068:	91 1d       	adc	r25, r1
    106a:	a1 1d       	adc	r26, r1
    106c:	20 d0       	rcall	.+64     	; 0x10ae <__ultoa_invert+0x84>
    106e:	09 f4       	brne	.+2      	; 0x1072 <__ultoa_invert+0x48>
    1070:	68 94       	set
    1072:	3f 91       	pop	r19
    1074:	2a e0       	ldi	r18, 0x0A	; 10
    1076:	26 9f       	mul	r18, r22
    1078:	11 24       	eor	r1, r1
    107a:	30 19       	sub	r19, r0
    107c:	30 5d       	subi	r19, 0xD0	; 208
    107e:	31 93       	st	Z+, r19
    1080:	de f6       	brtc	.-74     	; 0x1038 <__ultoa_invert+0xe>
    1082:	cf 01       	movw	r24, r30
    1084:	08 95       	ret
    1086:	46 2f       	mov	r20, r22
    1088:	47 70       	andi	r20, 0x07	; 7
    108a:	40 5d       	subi	r20, 0xD0	; 208
    108c:	41 93       	st	Z+, r20
    108e:	b3 e0       	ldi	r27, 0x03	; 3
    1090:	0f d0       	rcall	.+30     	; 0x10b0 <__ultoa_invert+0x86>
    1092:	c9 f7       	brne	.-14     	; 0x1086 <__ultoa_invert+0x5c>
    1094:	f6 cf       	rjmp	.-20     	; 0x1082 <__ultoa_invert+0x58>
    1096:	46 2f       	mov	r20, r22
    1098:	4f 70       	andi	r20, 0x0F	; 15
    109a:	40 5d       	subi	r20, 0xD0	; 208
    109c:	4a 33       	cpi	r20, 0x3A	; 58
    109e:	18 f0       	brcs	.+6      	; 0x10a6 <__ultoa_invert+0x7c>
    10a0:	49 5d       	subi	r20, 0xD9	; 217
    10a2:	31 fd       	sbrc	r19, 1
    10a4:	40 52       	subi	r20, 0x20	; 32
    10a6:	41 93       	st	Z+, r20
    10a8:	02 d0       	rcall	.+4      	; 0x10ae <__ultoa_invert+0x84>
    10aa:	a9 f7       	brne	.-22     	; 0x1096 <__ultoa_invert+0x6c>
    10ac:	ea cf       	rjmp	.-44     	; 0x1082 <__ultoa_invert+0x58>
    10ae:	b4 e0       	ldi	r27, 0x04	; 4
    10b0:	a6 95       	lsr	r26
    10b2:	97 95       	ror	r25
    10b4:	87 95       	ror	r24
    10b6:	77 95       	ror	r23
    10b8:	67 95       	ror	r22
    10ba:	ba 95       	dec	r27
    10bc:	c9 f7       	brne	.-14     	; 0x10b0 <__ultoa_invert+0x86>
    10be:	00 97       	sbiw	r24, 0x00	; 0
    10c0:	61 05       	cpc	r22, r1
    10c2:	71 05       	cpc	r23, r1
    10c4:	08 95       	ret
    10c6:	9b 01       	movw	r18, r22
    10c8:	ac 01       	movw	r20, r24
    10ca:	0a 2e       	mov	r0, r26
    10cc:	06 94       	lsr	r0
    10ce:	57 95       	ror	r21
    10d0:	47 95       	ror	r20
    10d2:	37 95       	ror	r19
    10d4:	27 95       	ror	r18
    10d6:	ba 95       	dec	r27
    10d8:	c9 f7       	brne	.-14     	; 0x10cc <__ultoa_invert+0xa2>
    10da:	62 0f       	add	r22, r18
    10dc:	73 1f       	adc	r23, r19
    10de:	84 1f       	adc	r24, r20
    10e0:	95 1f       	adc	r25, r21
    10e2:	a0 1d       	adc	r26, r0
    10e4:	08 95       	ret

000010e6 <_exit>:
    10e6:	f8 94       	cli

000010e8 <__stop_program>:
    10e8:	ff cf       	rjmp	.-2      	; 0x10e8 <__stop_program>
